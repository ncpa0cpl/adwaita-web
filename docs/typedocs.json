{
  "components": {
    "Alert": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "danger": {
            "description": "",
            "type": "boolean"
          },
          "icon": {
            "description": "",
            "type": "string"
          },
          "info": {
            "description": "",
            "type": "boolean"
          },
          "onClose": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {},
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "showClose": {
            "description": "",
            "type": "boolean"
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "success": {
            "description": "",
            "type": "boolean"
          },
          "title": {
            "description": "",
            "type": "string"
          },
          "warning": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": [
          "className",
          "danger",
          "icon",
          "info",
          "onClose",
          "showClose",
          "size",
          "success",
          "title",
          "warning"
        ]
      },
      "propsSources": [
        {
          "fileName": "components/Alert.tsx",
          "line": 8,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Alert.tsx#L8"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Alert.tsx",
          "line": 21,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Alert.tsx#L21"
        },
        {
          "fileName": "components/Alert.tsx",
          "line": 72,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Alert.tsx#L72"
        }
      ]
    },
    "Autocomplete": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "defaultValue": {
            "description": "",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "enableFilter": {
            "description": "Enables basic filtering of options. Set to <code>`false`</code> if you want to implement your\nown filtering.",
            "type": "boolean"
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onSearch": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "type": "string"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "options": {
            "description": "The options shown in the list",
            "type": "array",
            "items": {
              "type": "object",
              "description": "",
              "properties": {
                "label": {
                  "title": "External Type (package: @types/react, name: React.ReactNode)",
                  "type": "any",
                  "description": ""
                },
                "value": {
                  "description": "",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                }
              },
              "required": [
                "label",
                "value"
              ]
            }
          },
          "value": {
            "description": "",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "options"
        ]
      },
      "propsSources": [
        {
          "fileName": "components/Autocomplete.tsx",
          "line": 14,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Autocomplete.tsx#L14"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Autocomplete.tsx",
          "line": 35,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Autocomplete.tsx#L35"
        }
      ]
    },
    "Box": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "align": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean",
                "enum": [
                  true
                ]
              },
              {
                "type": "string",
                "enum": [
                  "start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "end"
                ]
              }
            ]
          },
          "border": {
            "description": "",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "compact": {
            "description": "",
            "type": "boolean"
          },
          "expandChildren": {
            "description": "",
            "type": "boolean"
          },
          "fill": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "horizontal"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "vertical"
                ]
              }
            ]
          },
          "horizontal": {
            "description": "",
            "type": "boolean"
          },
          "inline": {
            "description": "",
            "type": "boolean"
          },
          "justify": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean",
                "enum": [
                  true
                ]
              },
              {
                "type": "string",
                "enum": [
                  "start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "end"
                ]
              }
            ]
          },
          "padded": {
            "description": "",
            "type": "boolean"
          },
          "space": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "around"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "between"
                ]
              }
            ]
          },
          "vertical": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Box.tsx",
          "line": 5,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Box.tsx#L5"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Box.tsx",
          "line": 23,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Box.tsx#L23"
        },
        {
          "fileName": "components/Box.tsx",
          "line": 86,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Box.tsx#L86"
        }
      ]
    },
    "Button": {
      "description": "This is a button component.",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "active": {
            "description": "Active state",
            "type": "boolean"
          },
          "circular": {
            "description": "Round style button",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "danger": {
            "description": "Danger style button",
            "type": "boolean"
          },
          "flat": {
            "description": "Flat style button",
            "type": "boolean"
          },
          "hover": {
            "description": "Hover state",
            "type": "boolean"
          },
          "icon": {
            "title": "External Type (package: @types/react, name: React.ComponentType)",
            "type": "any",
            "description": ""
          },
          "image": {
            "description": "Button containing an image only",
            "type": "boolean"
          },
          "link": {
            "description": "Link style button",
            "type": "boolean"
          },
          "loading": {
            "description": "Shows a spinner and disables the button",
            "type": "boolean"
          },
          "primary": {
            "description": "Primary style button",
            "type": "boolean"
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "text": {
            "description": "Button containing text",
            "type": "boolean"
          },
          "type": {
            "description": "HTML button type",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "button"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "submit"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "reset"
                ]
              }
            ]
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Button.tsx",
          "line": 7,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Button.tsx#L7"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Button.tsx",
          "line": 44,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Button.tsx#L44"
        }
      ]
    },
    "Calendar": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "External Type (package: typescript, name: Date)",
                  "type": "any"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "value": {
            "title": "External Type (package: typescript, name: Date)",
            "type": "any",
            "description": ""
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/Calendar.tsx",
          "line": 29,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Calendar.tsx#L29"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Calendar.tsx",
          "line": 34,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Calendar.tsx#L34"
        }
      ]
    },
    "Checkbox": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "defaultValue": {
            "description": "Default value of the checkbox.",
            "type": "boolean"
          },
          "disabled": {
            "description": "Whether the checkbox is disabled.",
            "type": "boolean"
          },
          "label": {
            "description": "The checkbox label",
            "type": "string"
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "type": "boolean"
                },
                "1": {
                  "title": "External Type (package: @types/react, name: React.ChangeEvent)",
                  "type": "any"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "showLabel": {
            "description": "Whether to show the checkbox label.",
            "type": "boolean"
          },
          "size": {
            "description": "Size of the checkbox.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "value": {
            "description": "The current value of the checkbox.",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/Checkbox.tsx",
          "line": 9,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Checkbox.tsx#L9"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Checkbox.tsx",
          "line": 29,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Checkbox.tsx#L29"
        }
      ]
    },
    "DatePicker": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "description": "",
            "properties": {
              "defaultValue": {
                "title": "External Type (package: typescript, name: Date)",
                "type": "any",
                "description": "A date object"
              },
              "format": {
                "description": "A string that represents the date format",
                "type": "string"
              },
              "onChange": {
                "title": "Function",
                "type": "object",
                "description": "",
                "properties": {
                  "arguments": {
                    "0": {
                      "title": "value",
                      "oneOf": [
                        {
                          "title": "External Type (package: typescript, name: Date)",
                          "type": "any"
                        },
                        {
                          "type": "null",
                          "enum": [
                            null
                          ]
                        }
                      ]
                    }
                  },
                  "returns": {
                    "type": "void"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  }
                },
                "required": [
                  "arguments",
                  "returns"
                ]
              },
              "value": {
                "title": "External Type (package: typescript, name: Date)",
                "type": "any",
                "description": "A date object"
              }
            },
            "required": [
              "defaultValue",
              "onChange",
              "value"
            ]
          },
          {
            "title": "External Type (package: typescript, name: Omit)",
            "type": "any"
          }
        ]
      },
      "propsSources": [
        {
          "fileName": "components/DatePicker.tsx",
          "line": 12,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/DatePicker.tsx#L12"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/DatePicker.tsx",
          "line": 26,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/DatePicker.tsx#L26"
        }
      ]
    },
    "Dropdown": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "align": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "left"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right"
                ]
              }
            ]
          },
          "allowClear": {
            "description": "",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "disabled": {
            "description": "",
            "type": "boolean"
          },
          "filter": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "option",
                  "type": "any"
                },
                "1": {
                  "title": "filter",
                  "type": "string"
                }
              },
              "returns": {
                "type": "boolean"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "filterKey": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "input": {
            "description": "",
            "type": "boolean"
          },
          "label": {
            "title": "External Type (package: @types/react, name: React.ReactNode)",
            "type": "any",
            "description": ""
          },
          "loading": {
            "description": "",
            "type": "boolean"
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "oneOf": [
                    {
                      "type": "any"
                    },
                    {
                      "type": "undefined"
                    }
                  ]
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onClose": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {},
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onOpen": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {},
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "open": {
            "description": "",
            "type": "boolean"
          },
          "options": {
            "description": "",
            "type": "array",
            "items": {
              "type": "object",
              "description": "",
              "properties": {
                "data": {
                  "description": "",
                  "type": "any"
                },
                "label": {
                  "title": "External Type (package: @types/react, name: React.ReactNode)",
                  "type": "any",
                  "description": ""
                },
                "value": {
                  "description": "",
                  "type": "any"
                }
              },
              "required": [
                "label",
                "value"
              ]
            }
          },
          "placeholder": {
            "description": "",
            "type": "string"
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "triggerClassName": {
            "description": "",
            "type": "string"
          },
          "value": {
            "description": "",
            "type": "any"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/Dropdown.tsx",
          "line": 22,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Dropdown.tsx#L22"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Dropdown.tsx",
          "line": 44,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Dropdown.tsx#L44"
        }
      ]
    },
    "Expander": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "contents": {
            "description": "If true, the trigger is rendered outside the Expander container",
            "type": "boolean"
          },
          "defaultOpen": {
            "description": "",
            "type": "boolean"
          },
          "fitContent": {
            "description": "If true, the container fits its content size",
            "type": "boolean"
          },
          "iconPosition": {
            "description": "Arrow position",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "before"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "after"
                ]
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ]
          },
          "label": {
            "title": "External Type (package: @types/react, name: React.ReactNode)",
            "type": "any",
            "description": "The label for the default button trigger element (only if <code>`trigger`</code> is not set)"
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "open",
                  "type": "boolean"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "open": {
            "description": "Expanded state",
            "type": "boolean"
          },
          "size": {
            "description": "",
            "type": "number"
          },
          "transition": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "horizontal"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "vertical"
                ]
              }
            ]
          },
          "trigger": {
            "description": "The element that triggers toggling the expander. If not set, a default unstyled\nbutton will be displayed. If it's a render function, it received an argument: ({\ntoggle: Fn })",
            "oneOf": [
              {
                "title": "External Type (package: @types/react, name: React.ReactElement)",
                "type": "any"
              },
              {
                "title": "Function",
                "type": "object",
                "description": "",
                "properties": {
                  "arguments": {
                    "0": {
                      "title": "param",
                      "type": "object",
                      "description": "",
                      "properties": {
                        "toggle": {
                          "title": "Function",
                          "type": "object",
                          "description": "",
                          "properties": {
                            "arguments": {},
                            "returns": {
                              "type": "void"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {},
                              "required": []
                            }
                          },
                          "required": [
                            "arguments",
                            "returns"
                          ]
                        }
                      },
                      "required": [
                        "toggle"
                      ]
                    }
                  },
                  "returns": {
                    "title": "External Type (package: @types/react, name: React.ReactElement)",
                    "type": "any"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  }
                },
                "required": [
                  "arguments",
                  "returns"
                ]
              }
            ]
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/Expander.tsx",
          "line": 8,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Expander.tsx#L8"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Expander.tsx",
          "line": 40,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Expander.tsx#L40"
        }
      ]
    },
    "Frame": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "background": {
            "description": "The background color",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "low"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "default"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "high"
                ]
              }
            ]
          },
          "border": {
            "description": "If true, shows a border",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "inline": {
            "description": "If true, is displayed as an inline element",
            "type": "boolean"
          },
          "label": {
            "title": "External Type (package: @types/react, name: React.ReactNode)",
            "type": "any",
            "description": "The label of the frame (using <fieldset>/<legend>)"
          },
          "padded": {
            "description": "",
            "type": "boolean"
          },
          "scrollable": {
            "description": "If true, is scrollable",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Frame.tsx",
          "line": 5,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Frame.tsx#L5"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Frame.tsx",
          "line": 27,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Frame.tsx#L27"
        },
        {
          "fileName": "components/Frame.tsx",
          "line": 62,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Frame.tsx#L62"
        }
      ]
    },
    "HeaderBar": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "titlebar": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/HeaderBar.tsx",
          "line": 7,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/HeaderBar.tsx#L7"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/HeaderBar.tsx",
          "line": 14,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/HeaderBar.tsx#L14"
        },
        {
          "fileName": "src/components/HeaderBar.tsx",
          "line": 60,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/HeaderBar.tsx#L60"
        },
        {
          "fileName": "src/components/HeaderBar.tsx",
          "line": 61,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/HeaderBar.tsx#L61"
        }
      ]
    },
    "Heading": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "anchor": {
            "description": "",
            "type": "boolean"
          },
          "as": {
            "title": "External Type (package: @types/react, name: JSX.IntrinsicElements)",
            "type": "any",
            "description": ""
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "weight": {
            "description": "",
            "oneOf": [
              {
                "type": "number",
                "enum": [
                  100
                ]
              },
              {
                "type": "number",
                "enum": [
                  300
                ]
              },
              {
                "type": "number",
                "enum": [
                  400
                ]
              },
              {
                "type": "number",
                "enum": [
                  700
                ]
              },
              {
                "type": "number",
                "enum": [
                  900
                ]
              }
            ]
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Heading.tsx",
          "line": 6,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Heading.tsx#L6"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Heading.tsx",
          "line": 21,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Heading.tsx#L21"
        },
        {
          "fileName": "components/Heading.tsx",
          "line": 49,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Heading.tsx#L49"
        }
      ]
    },
    "InfoBar": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "activatable": {
            "description": "",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "closable": {
            "description": "",
            "type": "boolean"
          },
          "close": {
            "description": "",
            "type": "boolean"
          },
          "danger": {
            "description": "",
            "type": "boolean"
          },
          "info": {
            "description": "",
            "type": "boolean"
          },
          "onClose": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {},
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "success": {
            "description": "",
            "type": "boolean"
          },
          "warning": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/InfoBar.tsx",
          "line": 9,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/InfoBar.tsx#L9"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/InfoBar.tsx",
          "line": 24,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/InfoBar.tsx#L24"
        }
      ]
    },
    "Input": {
      "description": "**NOTE**: Exotic components are not callable.",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "allowClear": {
            "description": "Show a button to clear the input value",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "defaultValue": {
            "description": "",
            "type": "string"
          },
          "disabled": {
            "description": "Disable the input",
            "type": "boolean"
          },
          "error": {
            "description": "Error style input",
            "type": "boolean"
          },
          "flat": {
            "description": "Flat style input",
            "type": "boolean"
          },
          "icon": {
            "title": "External Type (package: @types/react, name: React.ComponentType)",
            "type": "any",
            "description": ""
          },
          "iconAfter": {
            "title": "External Type (package: @types/react, name: React.ComponentType)",
            "type": "any",
            "description": ""
          },
          "loading": {
            "description": "Shows a loading indicator",
            "type": "boolean"
          },
          "onAccept": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "type": "string"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "type": "string"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onClickIconAfter": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {},
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "placeholder": {
            "description": "",
            "type": "string"
          },
          "progress": {
            "description": "Show a progress bar of <code>`progress`</code> percent size if it's a number, or an\nundeterminate (loading) bar if <code>`true`</code>",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "number"
              }
            ]
          },
          "size": {
            "description": "Size of the input",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "type": {
            "description": "The HTML input type",
            "type": "string"
          },
          "value": {
            "description": "",
            "type": "string"
          },
          "warning": {
            "description": "Warning style input",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/Input.tsx",
          "line": 14,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Input.tsx#L14"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Input.tsx",
          "line": 55,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Input.tsx#L55"
        }
      ]
    },
    "InputNumber": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "defaultValue": {
            "description": "",
            "type": "number"
          },
          "disabled": {
            "description": "",
            "type": "boolean"
          },
          "max": {
            "description": "",
            "type": "number"
          },
          "min": {
            "description": "",
            "type": "number"
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "type": "number"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "step": {
            "description": "",
            "type": "number"
          },
          "value": {
            "description": "",
            "type": "number"
          },
          "vertical": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/InputNumber.tsx",
          "line": 13,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/InputNumber.tsx#L13"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/InputNumber.tsx",
          "line": 29,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/InputNumber.tsx#L29"
        },
        {
          "fileName": "components/InputNumber.tsx",
          "line": 92,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/InputNumber.tsx#L92"
        }
      ]
    },
    "Label": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "align": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "left"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "center"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right"
                ]
              }
            ]
          },
          "bold": {
            "description": "",
            "type": "boolean"
          },
          "danger": {
            "description": "",
            "type": "boolean"
          },
          "disabled": {
            "description": "",
            "type": "boolean"
          },
          "ellipsis": {
            "description": "",
            "type": "boolean"
          },
          "fill": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "width"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "height"
                ]
              }
            ]
          },
          "info": {
            "description": "",
            "type": "boolean"
          },
          "italic": {
            "description": "",
            "type": "boolean"
          },
          "muted": {
            "description": "",
            "type": "boolean"
          },
          "noSelect": {
            "description": "",
            "type": "boolean"
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "success": {
            "description": "",
            "type": "boolean"
          },
          "title": {
            "description": "",
            "type": "string"
          },
          "warning": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/Label.tsx",
          "line": 5,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Label.tsx#L5"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Label.tsx",
          "line": 25,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Label.tsx#L25"
        }
      ]
    },
    "LevelBar": {
      "description": "**NOTE**: Exotic components are not callable.",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "level": {
            "description": "The coloration of the active segments",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "empty"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "danger"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "warning"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "info"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "success"
                ]
              }
            ]
          },
          "segments": {
            "description": "The number of segments",
            "type": "number"
          },
          "value": {
            "description": "The number active of segments",
            "type": "number"
          },
          "vertical": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": [
          "segments",
          "value"
        ]
      },
      "propsSources": [
        {
          "fileName": "components/LevelBar.tsx",
          "line": 5,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/LevelBar.tsx#L5"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/LevelBar.tsx",
          "line": 16,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/LevelBar.tsx#L16"
        }
      ]
    },
    "List": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "border": {
            "description": "",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "fill": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "width"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "height"
                ]
              }
            ]
          },
          "horizontal": {
            "description": "",
            "type": "boolean"
          },
          "rich": {
            "description": "",
            "type": "boolean"
          },
          "rounded": {
            "description": "",
            "type": "boolean"
          },
          "separators": {
            "description": "",
            "type": "boolean"
          },
          "sidebar": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "stack"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "navigation"
                ]
              }
            ]
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              }
            ]
          },
          "sublist": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/List.tsx",
          "line": 7,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/List.tsx#L7"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/List.tsx",
          "line": 23,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/List.tsx#L23"
        },
        {
          "fileName": "components/List.tsx",
          "line": 114,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/List.tsx#L114"
        },
        {
          "fileName": "components/List.tsx",
          "line": 115,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/List.tsx#L115"
        }
      ]
    },
    "Menu": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "icons": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Menu.tsx",
          "line": 13,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Menu.tsx#L13"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Menu.tsx",
          "line": 21,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Menu.tsx#L21"
        },
        {
          "fileName": "components/Menu.tsx",
          "line": 155,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Menu.tsx#L155"
        },
        {
          "fileName": "components/Menu.tsx",
          "line": 156,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Menu.tsx#L156"
        },
        {
          "fileName": "components/Menu.tsx",
          "line": 157,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Menu.tsx#L157"
        },
        {
          "fileName": "components/Menu.tsx",
          "line": 158,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Menu.tsx#L158"
        },
        {
          "fileName": "components/Menu.tsx",
          "line": 159,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Menu.tsx#L159"
        },
        {
          "fileName": "components/Menu.tsx",
          "line": 160,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Menu.tsx#L160"
        },
        {
          "fileName": "components/Menu.tsx",
          "line": 161,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Menu.tsx#L161"
        }
      ]
    },
    "MenuBar": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {},
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/MenuBar.tsx",
          "line": 9,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/MenuBar.tsx#L9"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/MenuBar.tsx",
          "line": 11,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/MenuBar.tsx#L11"
        },
        {
          "fileName": "components/MenuBar.tsx",
          "line": 56,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/MenuBar.tsx#L56"
        }
      ]
    },
    "Notebook": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "action": {
            "title": "External Type (package: @types/react, name: React.ReactNode)",
            "type": "any",
            "description": ""
          },
          "arrows": {
            "description": "",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "type": "number"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onClose": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "pageIndex",
                  "type": "number"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "pages": {
            "description": "",
            "type": "array",
            "items": {
              "type": "object",
              "description": "",
              "properties": {
                "closable": {
                  "description": "",
                  "type": "boolean"
                },
                "content": {
                  "title": "External Type (package: @types/react, name: React.ReactNode)",
                  "type": "any",
                  "description": ""
                },
                "key": {
                  "description": "",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "label": {
                  "title": "External Type (package: @types/react, name: React.ReactNode)",
                  "type": "any",
                  "description": ""
                }
              },
              "required": [
                "content",
                "key"
              ]
            }
          },
          "position": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "top"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bottom"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "left"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right"
                ]
              }
            ]
          },
          "transition": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "horizontal"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "vertical"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "opacity"
                ]
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ]
          },
          "value": {
            "description": "",
            "type": "number"
          }
        },
        "required": [
          "onChange",
          "onClose",
          "pages"
        ]
      },
      "propsSources": [
        {
          "fileName": "components/Notebook.tsx",
          "line": 19,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Notebook.tsx#L19"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Notebook.tsx",
          "line": 34,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Notebook.tsx#L34"
        },
        {
          "fileName": "components/Notebook.tsx",
          "line": 124,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Notebook.tsx#L124"
        }
      ]
    },
    "PageSwitcher": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "activePage": {
            "description": "",
            "type": "number"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "expand": {
            "description": "",
            "type": "boolean"
          },
          "mainPage": {
            "description": "",
            "type": "number"
          },
          "padded": {
            "description": "",
            "type": "boolean"
          },
          "pages": {
            "description": "",
            "type": "array",
            "items": {
              "type": "object",
              "description": "",
              "properties": {
                "closable": {
                  "description": "",
                  "type": "boolean"
                },
                "content": {
                  "title": "External Type (package: @types/react, name: React.ReactNode)",
                  "type": "any",
                  "description": ""
                },
                "key": {
                  "description": "",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "label": {
                  "title": "External Type (package: @types/react, name: React.ReactNode)",
                  "type": "any",
                  "description": ""
                }
              },
              "required": [
                "content",
                "key"
              ]
            }
          },
          "style": {
            "title": "External Type (package: @types/react, name: React.CSSProperties)",
            "type": "any",
            "description": ""
          },
          "transition": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "horizontal"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "vertical"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "opacity"
                ]
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ]
          },
          "useMainPageDimensions": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "width"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "height"
                ]
              }
            ]
          }
        },
        "required": [
          "pages"
        ]
      },
      "propsSources": [
        {
          "fileName": "src/components/PageSwitcher.tsx",
          "line": 11,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/PageSwitcher.tsx#L11"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/PageSwitcher.tsx",
          "line": 23,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/PageSwitcher.tsx#L23"
        }
      ]
    },
    "Paned": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "border": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "handle"
                ]
              }
            ]
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "defaultSize": {
            "description": "",
            "type": "number"
          },
          "fill": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "width"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "height"
                ]
              }
            ]
          },
          "orientation": {
            "type": "object",
            "description": "",
            "properties": {
              "horizontal": {
                "type": "object",
                "description": "",
                "properties": {
                  "event": {
                    "description": "",
                    "type": "string",
                    "enum": [
                      "x"
                    ]
                  },
                  "position": {
                    "description": "",
                    "type": "string",
                    "enum": [
                      "left"
                    ]
                  },
                  "size": {
                    "description": "",
                    "type": "string",
                    "enum": [
                      "width"
                    ]
                  }
                },
                "required": [
                  "event",
                  "position",
                  "size"
                ]
              },
              "vertical": {
                "type": "object",
                "description": "",
                "properties": {
                  "event": {
                    "description": "",
                    "type": "string",
                    "enum": [
                      "y"
                    ]
                  },
                  "position": {
                    "description": "",
                    "type": "string",
                    "enum": [
                      "top"
                    ]
                  },
                  "size": {
                    "description": "",
                    "type": "string",
                    "enum": [
                      "height"
                    ]
                  }
                },
                "required": [
                  "event",
                  "position",
                  "size"
                ]
              }
            },
            "required": [
              "horizontal",
              "vertical"
            ]
          },
          "size": {
            "description": "",
            "type": "number"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/Paned.tsx",
          "line": 21,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Paned.tsx#L21"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Paned.tsx",
          "line": 30,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Paned.tsx#L30"
        }
      ]
    },
    "Popover": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "align": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "right"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "left"
                ]
              }
            ]
          },
          "arrow": {
            "description": "",
            "type": "boolean"
          },
          "children": {
            "title": "External Type (package: @types/react, name: React.ReactNode)",
            "type": "any",
            "description": ""
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "content": {
            "description": "",
            "oneOf": [
              {
                "title": "External Type (package: @types/react, name: React.ReactNode)",
                "type": "any"
              },
              {
                "title": "Function",
                "type": "object",
                "description": "",
                "properties": {
                  "arguments": {},
                  "returns": {
                    "title": "External Type (package: @types/react, name: React.ReactNode)",
                    "type": "any"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  }
                },
                "required": [
                  "arguments",
                  "returns"
                ]
              }
            ]
          },
          "delay": {
            "description": "",
            "type": "number"
          },
          "method": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mouseover"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "click"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "click-controlled"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "none"
                ]
              }
            ]
          },
          "onClose": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {},
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onDidClose": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {},
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onDidOpen": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {},
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onOpen": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {},
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "open": {
            "description": "",
            "type": "boolean"
          },
          "placement": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "top"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "top-start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "top-end"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bottom"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bottom-start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bottom-end"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right-start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right-end"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "left"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "left-start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "left-end"
                ]
              }
            ]
          },
          "shouldAttachEarly": {
            "description": "",
            "type": "boolean"
          },
          "shouldUpdatePlacement": {
            "description": "",
            "type": "boolean"
          },
          "width": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "trigger"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "trigger-min"
                ]
              }
            ]
          }
        },
        "required": [
          "children",
          "content"
        ]
      },
      "propsSources": [
        {
          "fileName": "src/components/Popover.tsx",
          "line": 18,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Popover.tsx#L18"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Popover.tsx",
          "line": 55,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Popover.tsx#L55"
        }
      ]
    },
    "PopoverMenu": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "align": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "right"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "left"
                ]
              }
            ]
          },
          "arrow": {
            "description": "",
            "type": "boolean"
          },
          "children": {
            "title": "External Type (package: @types/react, name: React.ReactNode)",
            "type": "any",
            "description": ""
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "delay": {
            "description": "",
            "type": "number"
          },
          "method": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mouseover"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "click"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "click-controlled"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "none"
                ]
              }
            ]
          },
          "onChangeOpen": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "open",
                  "type": "boolean"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "open": {
            "description": "",
            "type": "boolean"
          },
          "pages": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "params",
                  "type": "object",
                  "description": "",
                  "properties": {
                    "back": {
                      "type": "any"
                    },
                    "change": {
                      "type": "any"
                    },
                    "close": {
                      "type": "any"
                    }
                  },
                  "required": [
                    "back",
                    "change",
                    "close"
                  ]
                }
              },
              "returns": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "closable": {
                      "description": "",
                      "type": "boolean"
                    },
                    "content": {
                      "title": "External Type (package: @types/react, name: React.ReactNode)",
                      "type": "any",
                      "description": ""
                    },
                    "key": {
                      "description": "",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "label": {
                      "title": "External Type (package: @types/react, name: React.ReactNode)",
                      "type": "any",
                      "description": ""
                    }
                  },
                  "required": [
                    "content",
                    "key"
                  ]
                }
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "placement": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "top"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "top-start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "top-end"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bottom"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bottom-start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "bottom-end"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right-start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right-end"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "left"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "left-start"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "left-end"
                ]
              }
            ]
          },
          "shouldAttachEarly": {
            "description": "",
            "type": "boolean"
          },
          "shouldUpdatePlacement": {
            "description": "",
            "type": "boolean"
          },
          "width": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "trigger"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "trigger-min"
                ]
              }
            ]
          }
        },
        "required": [
          "children",
          "pages"
        ]
      },
      "propsSources": [
        {
          "fileName": "components/PopoverMenu.tsx",
          "line": 15,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/PopoverMenu.tsx#L15"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/PopoverMenu.tsx",
          "line": 47,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/PopoverMenu.tsx#L47"
        }
      ]
    },
    "Progress": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "aria-label": {
            "description": "The label of the slider.",
            "type": "string"
          },
          "aria-labelledby": {
            "description": "The id of the element containing a label for the slider.",
            "type": "string"
          },
          "aria-valuetext": {
            "description": "A string value that provides a user-friendly name for the current value of the slider.",
            "type": "string"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "label": {
            "description": "If a label should be shown",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "title": "External Type (package: @types/react, name: React.ReactNode)",
                "type": "any"
              }
            ]
          },
          "orientation": {
            "description": "The slider orientation.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "horizontal"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "vertical"
                ]
              }
            ]
          },
          "value": {
            "description": "The value of the slider. For indeterminate pass undefined.",
            "type": "number"
          }
        },
        "required": [
          "aria-label",
          "aria-labelledby",
          "aria-valuetext",
          "className",
          "label",
          "orientation",
          "value"
        ]
      },
      "propsSources": [
        {
          "fileName": "components/Progress.tsx",
          "line": 10,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Progress.tsx#L10"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Progress.tsx",
          "line": 26,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Progress.tsx#L26"
        }
      ]
    },
    "Radio": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "checked": {
            "description": "",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "defaultChecked": {
            "description": "",
            "type": "boolean"
          },
          "disabled": {
            "description": "",
            "type": "boolean"
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "label": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "checked",
                  "type": "boolean"
                },
                "1": {
                  "title": "External Type (package: @types/react, name: React.ChangeEvent)",
                  "type": "any"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "showLabel": {
            "description": "",
            "type": "boolean"
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "value": {
            "description": "",
            "type": "string"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/Radio.tsx",
          "line": 11,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Radio.tsx#L11"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Radio.tsx",
          "line": 25,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Radio.tsx#L25"
        }
      ]
    },
    "Range": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "ThumbComponent": {
            "title": "External Type (package: @types/react, name: React.ElementType)",
            "type": "any",
            "description": "The component used to display the value label."
          },
          "aria-label": {
            "description": "The label of the slider.",
            "type": "string"
          },
          "aria-labelledby": {
            "description": "The id of the element containing a label for the slider.",
            "type": "string"
          },
          "aria-valuetext": {
            "description": "A string value that provides a user-friendly name for the current value of the slider.",
            "type": "string"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "defaultValue": {
            "description": "The default element value. Use when the component is not controlled.",
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            ]
          },
          "disabled": {
            "description": "If <code>`true`</code>, the slider will be disabled.",
            "type": "boolean"
          },
          "marks": {
            "description": "Marks indicate predetermined values to which the user can move the slider. If\n<code>`true`</code> the marks will be spaced according the value of the <code>`step`</code> prop. If an\narray, it should contain objects with <code>`value`</code> and an optional <code>`label`</code> keys.",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "label": {
                      "description": "",
                      "type": "string"
                    },
                    "value": {
                      "description": "",
                      "type": "number"
                    }
                  },
                  "required": [
                    "value"
                  ]
                }
              }
            ]
          },
          "max": {
            "description": "The maximum allowed value of the slider. Should not be equal to min.",
            "type": "number"
          },
          "min": {
            "description": "The minimum allowed value of the slider. Should not be equal to max.",
            "type": "number"
          },
          "name": {
            "description": "Name attribute of the hidden <code>`input`</code> element.",
            "type": "string"
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "oneOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  ]
                },
                "1": {
                  "title": "ev",
                  "oneOf": [
                    {
                      "title": "External Type (package: @types/react, name: React.ChangeEvent)",
                      "type": "any"
                    },
                    {
                      "title": "External Type (package: @types/react, name: React.MouseEvent)",
                      "type": "any"
                    },
                    {
                      "title": "External Type (package: typescript, name: MouseEvent)",
                      "type": "any"
                    },
                    {
                      "title": "External Type (package: typescript, name: TouchEvent)",
                      "type": "any"
                    }
                  ]
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onChangeCommitted": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "ev",
                  "oneOf": [
                    {
                      "title": "External Type (package: @types/react, name: React.ChangeEvent)",
                      "type": "any"
                    },
                    {
                      "title": "External Type (package: typescript, name: MouseEvent)",
                      "type": "any"
                    },
                    {
                      "title": "External Type (package: typescript, name: TouchEvent)",
                      "type": "any"
                    }
                  ]
                },
                "1": {
                  "title": "value",
                  "oneOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  ]
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "onMouseDown": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "External Type (package: @types/react, name: React.MouseEvent)",
                  "type": "any"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "scale": {
            "title": "External Type (package: rambda, name: identity)",
            "type": "any",
            "description": "A transformation function, to change the scale of the slider."
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "step": {
            "description": "The granularity with which the slider can step through values. (A \"discrete\"\nslider.) The <code>`min`</code> prop serves as the origin for the valid values. We recommend\n(max - min) to be evenly divisible by the step.\n\nWhen step is <code>`null`</code>, the thumb can only be slid onto marks provided with the <code>`marks`</code> prop.",
            "type": "number"
          },
          "track": {
            "description": "The track presentation:\n\n- <code>`normal`</code> the track will render a bar representing the slider value.\n- <code>`inverted`</code> the track will render a bar representing the remaining slider value.\n- <code>`false`</code> the track will render without a bar.",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "normal"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "inverted"
                ]
              }
            ]
          },
          "value": {
            "description": "The value of the slider. For ranged sliders, provide an array with two values.",
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            ]
          },
          "valueLabelDisplay": {
            "description": "Controls when the value label is displayed:\n\n- <code>`auto`</code> the value label will display when the thumb is hovered or focused.\n- <code>`on`</code> will display persistently.\n- <code>`off`</code> will never display.",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "off"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "auto"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "on"
                ]
              }
            ]
          },
          "valueLabelFormat": {
            "description": "The format function the value label's value.\n\nWhen a function is provided, it should have the following signature:\n\n- {number} value The value label's value to format\n- {number} index The value label's index to format",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "title": "Function",
                "type": "object",
                "description": "",
                "properties": {
                  "arguments": {
                    "0": {
                      "title": "value",
                      "type": "number"
                    },
                    "1": {
                      "title": "index",
                      "type": "number"
                    }
                  },
                  "returns": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  }
                },
                "required": [
                  "arguments",
                  "returns"
                ]
              }
            ]
          },
          "vertical": {
            "description": "If the slider is vertical.",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Range.tsx",
          "line": 32,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Range.tsx#L32"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Range.tsx",
          "line": 111,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Range.tsx#L111"
        }
      ]
    },
    "Separator": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {},
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Separator.tsx",
          "line": 3,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Separator.tsx#L3"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Separator.tsx",
          "line": 5,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Separator.tsx#L5"
        }
      ]
    },
    "Spinner": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "disabled": {
            "description": "",
            "type": "boolean"
          },
          "hidden": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Spinner.tsx",
          "line": 5,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Spinner.tsx#L5"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Spinner.tsx",
          "line": 10,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Spinner.tsx#L10"
        }
      ]
    },
    "Switch": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "defaultValue": {
            "description": "",
            "type": "boolean"
          },
          "disabled": {
            "description": "",
            "type": "boolean"
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "label": {
            "description": "Not shown. For screen-readers only",
            "type": "string"
          },
          "labels": {
            "description": "On/Off if <code>`true`</code>, or provide your own 2 labels",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "type": "boolean"
                },
                "1": {
                  "title": "External Type (package: @types/react, name: React.ChangeEvent)",
                  "type": "any"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "value": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "src/components/Switch.tsx",
          "line": 10,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Switch.tsx#L10"
        }
      ],
      "componentSources": [
        {
          "fileName": "src/components/Switch.tsx",
          "line": 24,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Switch.tsx#L24"
        }
      ]
    },
    "Table": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "columns": {
            "description": "",
            "type": "array",
            "items": {
              "title": "External Type (package: @types/react-table, name: Column)",
              "type": "any"
            }
          },
          "data": {
            "description": "",
            "type": "array",
            "items": {
              "title": "External Type (package: typescript, name: Record)",
              "type": "any"
            }
          },
          "filterable": {
            "description": "",
            "type": "boolean"
          },
          "sortable": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": [
          "columns",
          "data"
        ]
      },
      "propsSources": [
        {
          "fileName": "components/Table.tsx",
          "line": 24,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Table.tsx#L24"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Table.tsx",
          "line": 32,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Table.tsx#L32"
        },
        {
          "fileName": "components/Table.tsx",
          "line": 241,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Table.tsx#L241"
        },
        {
          "fileName": "components/Table.tsx",
          "line": 242,
          "character": 0,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Table.tsx#L242"
        }
      ]
    },
    "Text": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "align": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "left"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "center"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right"
                ]
              }
            ]
          },
          "as": {
            "title": "External Type (package: @types/react, name: JSX.IntrinsicElements)",
            "type": "any",
            "description": ""
          },
          "bold": {
            "description": "",
            "type": "boolean"
          },
          "className": {
            "description": "",
            "type": "string"
          },
          "danger": {
            "description": "",
            "type": "boolean"
          },
          "fill": {
            "description": "",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "left"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "right"
                ]
              }
            ]
          },
          "hero": {
            "description": "",
            "type": "boolean"
          },
          "info": {
            "description": "",
            "type": "boolean"
          },
          "italic": {
            "description": "",
            "type": "boolean"
          },
          "muted": {
            "description": "",
            "type": "boolean"
          },
          "noSelect": {
            "description": "",
            "type": "boolean"
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "success": {
            "description": "",
            "type": "boolean"
          },
          "warning": {
            "description": "",
            "type": "boolean"
          },
          "weight": {
            "description": "",
            "oneOf": [
              {
                "type": "number",
                "enum": [
                  100
                ]
              },
              {
                "type": "number",
                "enum": [
                  300
                ]
              },
              {
                "type": "number",
                "enum": [
                  400
                ]
              },
              {
                "type": "number",
                "enum": [
                  700
                ]
              },
              {
                "type": "number",
                "enum": [
                  900
                ]
              }
            ]
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Text.tsx",
          "line": 5,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Text.tsx#L5"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Text.tsx",
          "line": 27,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Text.tsx#L27"
        }
      ]
    },
    "TextArea": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "disabled": {
            "description": "",
            "type": "boolean"
          },
          "error": {
            "description": "",
            "type": "boolean"
          },
          "flat": {
            "description": "",
            "type": "boolean"
          },
          "onChange": {
            "title": "Function",
            "type": "object",
            "description": "",
            "properties": {
              "arguments": {
                "0": {
                  "title": "value",
                  "type": "string"
                },
                "1": {
                  "title": "External Type (package: @types/react, name: React.ChangeEvent)",
                  "type": "any"
                }
              },
              "returns": {
                "type": "void"
              },
              "properties": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "arguments",
              "returns"
            ]
          },
          "placeholder": {
            "description": "",
            "type": "string"
          },
          "progress": {
            "description": "",
            "type": "number"
          },
          "size": {
            "description": "",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "mini"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "small"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "medium"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "large"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "huge"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "mega"
                ]
              }
            ]
          },
          "value": {
            "description": "",
            "type": "string"
          },
          "warning": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/TextArea.tsx",
          "line": 6,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/TextArea.tsx#L6"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/TextArea.tsx",
          "line": 22,
          "character": 13,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/TextArea.tsx#L22"
        }
      ]
    },
    "Toolbar": {
      "description": "",
      "propsSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "description": "",
        "properties": {
          "className": {
            "description": "",
            "type": "string"
          },
          "horizontal": {
            "description": "",
            "type": "boolean"
          },
          "vertical": {
            "description": "",
            "type": "boolean"
          }
        },
        "required": []
      },
      "propsSources": [
        {
          "fileName": "components/Toolbar.tsx",
          "line": 4,
          "character": 12,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Toolbar.tsx#L4"
        }
      ],
      "componentSources": [
        {
          "fileName": "components/Toolbar.tsx",
          "line": 10,
          "character": 16,
          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/bed8985/src/components/Toolbar.tsx#L10"
        }
      ]
    }
  }
}