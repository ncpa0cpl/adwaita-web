{
  "components": {
    "Alert": [
      {
        "id": 4,
        "name": "Alert",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 5,
            "name": "defaultProps",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Alert.tsx",
                "line": 72,
                "character": 6,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L72"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 6,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 8,
                    "name": "onClose",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 74,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L74"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 9,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "Alert.tsx",
                            "line": 74,
                            "character": 11,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L74"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 10,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "..."
                  },
                  {
                    "id": 7,
                    "name": "showClose",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 73,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L73"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "false"
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      8,
                      7
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Alert.tsx",
                    "line": 72,
                    "character": 21,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L72"
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "Alert.tsx",
            "line": 21,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L21"
          },
          {
            "fileName": "Alert.tsx",
            "line": 72,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L72"
          }
        ]
      },
      {
        "id": 11,
        "name": "AlertProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Alert.tsx",
            "line": 8,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L8"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reflection",
              "declaration": {
                "id": 12,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 14,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 10,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L10"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 24,
                    "name": "danger",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 18,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 16,
                    "name": "icon",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 12,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L12"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 21,
                    "name": "info",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 15,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L15"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 18,
                    "name": "onClose",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 14,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L14"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 19,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "Alert.tsx",
                            "line": 14,
                            "character": 11,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L14"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 20,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 17,
                    "name": "showClose",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 13,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L13"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 15,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 11,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L11"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "mini"
                        },
                        {
                          "type": "literal",
                          "value": "small"
                        },
                        {
                          "type": "literal",
                          "value": "medium"
                        },
                        {
                          "type": "literal",
                          "value": "large"
                        },
                        {
                          "type": "literal",
                          "value": "huge"
                        },
                        {
                          "type": "literal",
                          "value": "mega"
                        }
                      ]
                    }
                  },
                  {
                    "id": 22,
                    "name": "success",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 16,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L16"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 13,
                    "name": "title",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 9,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L9"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 23,
                    "name": "warning",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Alert.tsx",
                        "line": 17,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      14,
                      24,
                      16,
                      21,
                      18,
                      17,
                      15,
                      22,
                      13,
                      23
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Alert.tsx",
                    "line": 8,
                    "character": 49,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L8"
                  }
                ]
              }
            }
          ],
          "name": "React.PropsWithChildren",
          "qualifiedName": "React.PropsWithChildren",
          "package": "@types/react"
        }
      },
      {
        "id": 1,
        "name": "Alert",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Alert.tsx",
            "line": 21,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L21"
          },
          {
            "fileName": "Alert.tsx",
            "line": 72,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Alert.tsx#L72"
          }
        ],
        "signatures": [
          {
            "id": 2,
            "name": "Alert",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 3,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 11,
                  "name": "AlertProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Autocomplete": [
      {
        "id": 5,
        "name": "AutocompleteOption",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Autocomplete.tsx",
            "line": 12,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L12"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 6,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 8,
                "name": "label",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Autocomplete.tsx",
                    "line": 12,
                    "character": 59,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L12"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.ReactNode",
                  "qualifiedName": "React.ReactNode",
                  "package": "@types/react"
                }
              },
              {
                "id": 7,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Autocomplete.tsx",
                    "line": 12,
                    "character": 35,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L12"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  8,
                  7
                ]
              }
            ],
            "sources": [
              {
                "fileName": "Autocomplete.tsx",
                "line": 12,
                "character": 33,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L12"
              }
            ]
          }
        }
      },
      {
        "id": 9,
        "name": "AutocompleteProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Autocomplete.tsx",
            "line": 14,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L14"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 10,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 11,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Autocomplete.tsx",
                    "line": 15,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L15"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 13,
                "name": "defaultValue",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Autocomplete.tsx",
                    "line": 17,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L17"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              },
              {
                "id": 15,
                "name": "enableFilter",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Enables basic filtering of options. Set to "
                    },
                    {
                      "kind": "code",
                      "text": "`false`"
                    },
                    {
                      "kind": "text",
                      "text": " if you want to implement your\nown filtering."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Autocomplete.tsx",
                    "line": 24,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L24"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 16,
                "name": "onChange",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Autocomplete.tsx",
                    "line": 29,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L29"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 17,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Autocomplete.tsx",
                        "line": 29,
                        "character": 13,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L29"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 18,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Called when the value changes (may prevent the value from updating, in\nconjuction with "
                            },
                            {
                              "kind": "code",
                              "text": "`value`"
                            },
                            {
                              "kind": "text",
                              "text": ")"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 19,
                            "name": "value",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              ]
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 20,
                "name": "onSearch",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Autocomplete.tsx",
                    "line": 31,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L31"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 21,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Autocomplete.tsx",
                        "line": 31,
                        "character": 13,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L31"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 22,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Called when the value changes (passive)"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 23,
                            "name": "value",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 14,
                "name": "options",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The options shown in the list"
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Autocomplete.tsx",
                    "line": 19,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L19"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 5,
                    "name": "AutocompleteOption"
                  }
                }
              },
              {
                "id": 12,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Autocomplete.tsx",
                    "line": 16,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L16"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  11,
                  13,
                  15,
                  16,
                  20,
                  14,
                  12
                ]
              }
            ],
            "sources": [
              {
                "fileName": "Autocomplete.tsx",
                "line": 14,
                "character": 32,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L14"
              }
            ]
          }
        }
      },
      {
        "id": 24,
        "name": "Autocomplete",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Autocomplete.tsx",
            "line": 147,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L147"
          }
        ],
        "signatures": [
          {
            "id": 25,
            "name": "Autocomplete",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "**NOTE**: Exotic components are not callable."
                }
              ]
            },
            "parameters": [
              {
                "id": 26,
                "name": "props",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reference",
                      "id": 9,
                      "name": "AutocompleteProps"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLDivElement",
                          "qualifiedName": "HTMLDivElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "RefAttributes",
                      "qualifiedName": "React.RefAttributes",
                      "package": "@types/react"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ],
                          "name": "JSXElementConstructor",
                          "qualifiedName": "React.JSXElementConstructor",
                          "package": "@types/react"
                        }
                      ]
                    }
                  ],
                  "name": "ReactElement",
                  "qualifiedName": "React.ReactElement",
                  "package": "@types/react"
                }
              ]
            }
          }
        ]
      },
      {
        "id": 1,
        "name": "AutocompleteImpl",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Autocomplete.tsx",
            "line": 35,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Autocomplete.tsx#L35"
          }
        ],
        "signatures": [
          {
            "id": 2,
            "name": "AutocompleteImpl",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@Group",
                  "content": [
                    {
                      "kind": "text",
                      "text": "Components"
                    }
                  ]
                }
              ]
            },
            "parameters": [
              {
                "id": 3,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 9,
                  "name": "AutocompleteProps"
                }
              },
              {
                "id": 4,
                "name": "refProp",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "HTMLDivElement",
                      "qualifiedName": "HTMLDivElement",
                      "package": "typescript"
                    }
                  ],
                  "name": "ForwardedRef",
                  "qualifiedName": "React.ForwardedRef",
                  "package": "@types/react"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Box": [
      {
        "id": 4,
        "name": "Box",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 5,
            "name": "Fill",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Box.tsx",
                "line": 86,
                "character": 4,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L86"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 6,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Box.tsx",
                    "line": 73,
                    "character": 9,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L73"
                  }
                ],
                "signatures": [
                  {
                    "id": 7,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 8,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 23,
                          "name": "FillProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "Box.tsx",
            "line": 23,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L23"
          },
          {
            "fileName": "Box.tsx",
            "line": 86,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L86"
          }
        ]
      },
      {
        "id": 9,
        "name": "BoxProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Box.tsx",
            "line": 5,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L5"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 10,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 11,
                        "name": "align",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 8,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L8"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": true
                            },
                            {
                              "type": "literal",
                              "value": "start"
                            },
                            {
                              "type": "literal",
                              "value": "end"
                            }
                          ]
                        }
                      },
                      {
                        "id": 17,
                        "name": "border",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 14,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L14"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 13,
                        "name": "className",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 10,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L10"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 15,
                        "name": "compact",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 12,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L12"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 22,
                        "name": "expandChildren",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 19,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L19"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 16,
                        "name": "fill",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 13,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L13"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            {
                              "type": "literal",
                              "value": "horizontal"
                            },
                            {
                              "type": "literal",
                              "value": "vertical"
                            }
                          ]
                        }
                      },
                      {
                        "id": 18,
                        "name": "horizontal",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 15,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L15"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 14,
                        "name": "inline",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 11,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L11"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 12,
                        "name": "justify",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 9,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L9"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": true
                            },
                            {
                              "type": "literal",
                              "value": "start"
                            },
                            {
                              "type": "literal",
                              "value": "end"
                            }
                          ]
                        }
                      },
                      {
                        "id": 21,
                        "name": "padded",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 18,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L18"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 20,
                        "name": "space",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 17,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L17"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "around"
                            },
                            {
                              "type": "literal",
                              "value": "between"
                            }
                          ]
                        }
                      },
                      {
                        "id": 19,
                        "name": "vertical",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 16,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L16"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          11,
                          17,
                          13,
                          15,
                          22,
                          16,
                          18,
                          14,
                          12,
                          21,
                          20,
                          19
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "Box.tsx",
                        "line": 7,
                        "character": 26,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L7"
                      }
                    ]
                  }
                }
              ],
              "name": "React.PropsWithChildren",
              "qualifiedName": "React.PropsWithChildren",
              "package": "@types/react"
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 23,
        "name": "FillProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Box.tsx",
            "line": 65,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L65"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 24,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 25,
                        "name": "className",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 68,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L68"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 26,
                        "name": "expandChildren",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Box.tsx",
                            "line": 69,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L69"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          25,
                          26
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "Box.tsx",
                        "line": 67,
                        "character": 26,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L67"
                      }
                    ]
                  }
                }
              ],
              "name": "React.PropsWithChildren",
              "qualifiedName": "React.PropsWithChildren",
              "package": "@types/react"
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 1,
        "name": "Box",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Box.tsx",
            "line": 23,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L23"
          },
          {
            "fileName": "Box.tsx",
            "line": 86,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Box.tsx#L86"
          }
        ],
        "signatures": [
          {
            "id": 2,
            "name": "Box",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 3,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 9,
                  "name": "BoxProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Button": [
      {
        "id": 5,
        "name": "ButtonProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Button.tsx",
            "line": 7,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L7"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "button"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 6,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 17,
                    "name": "active",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Active state"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 29,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L29"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 12,
                    "name": "circular",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Round style button"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 19,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L19"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 7,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 10,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L10"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 16,
                    "name": "danger",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Danger style button"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 27,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L27"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 13,
                    "name": "flat",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Flat style button"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 21,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L21"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 18,
                    "name": "hover",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Hover state"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 31,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L31"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 9,
                    "name": "icon",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "An icon name"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 13,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L13"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "AdwaitaIcon"
                    }
                  },
                  {
                    "id": 20,
                    "name": "image",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Button containing an image only"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 35,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L35"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 14,
                    "name": "link",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Link style button"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 23,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L23"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 11,
                    "name": "loading",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Shows a spinner and disables the button"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 17,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 15,
                    "name": "primary",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Primary style button"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 25,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L25"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 8,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 11,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L11"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "mini"
                        },
                        {
                          "type": "literal",
                          "value": "small"
                        },
                        {
                          "type": "literal",
                          "value": "medium"
                        },
                        {
                          "type": "literal",
                          "value": "large"
                        },
                        {
                          "type": "literal",
                          "value": "huge"
                        },
                        {
                          "type": "literal",
                          "value": "mega"
                        }
                      ]
                    }
                  },
                  {
                    "id": 19,
                    "name": "text",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Button containing text"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 33,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L33"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 10,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "HTML button type"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Button.tsx",
                        "line": 15,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L15"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "button"
                        },
                        {
                          "type": "literal",
                          "value": "submit"
                        },
                        {
                          "type": "literal",
                          "value": "reset"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      17,
                      12,
                      7,
                      16,
                      13,
                      18,
                      9,
                      20,
                      14,
                      11,
                      15,
                      8,
                      19,
                      10
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Button.tsx",
                    "line": 9,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L9"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 21,
        "name": "Button",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Button.tsx",
            "line": 100,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L100"
          }
        ],
        "signatures": [
          {
            "id": 22,
            "name": "Button",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "**NOTE**: Exotic components are not callable."
                }
              ]
            },
            "parameters": [
              {
                "id": 23,
                "name": "props",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 24,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 35,
                            "name": "active",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Active state"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 29,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L29"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 30,
                            "name": "circular",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Round style button"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 19,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L19"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 25,
                            "name": "className",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 10,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L10"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 34,
                            "name": "danger",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Danger style button"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 27,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L27"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 31,
                            "name": "flat",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Flat style button"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 21,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L21"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 36,
                            "name": "hover",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Hover state"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 31,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L31"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 27,
                            "name": "icon",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "An icon name"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 13,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L13"
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "AdwaitaIcon"
                            }
                          },
                          {
                            "id": 38,
                            "name": "image",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Button containing an image only"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 35,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L35"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 32,
                            "name": "link",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Link style button"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 23,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L23"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 29,
                            "name": "loading",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Shows a spinner and disables the button"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 17,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L17"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 33,
                            "name": "primary",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Primary style button"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 25,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L25"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 26,
                            "name": "size",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 11,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L11"
                              }
                            ],
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "literal",
                                  "value": "small"
                                },
                                {
                                  "type": "literal",
                                  "value": "mini"
                                },
                                {
                                  "type": "literal",
                                  "value": "medium"
                                },
                                {
                                  "type": "literal",
                                  "value": "large"
                                },
                                {
                                  "type": "literal",
                                  "value": "huge"
                                },
                                {
                                  "type": "literal",
                                  "value": "mega"
                                }
                              ]
                            }
                          },
                          {
                            "id": 37,
                            "name": "text",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Button containing text"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 33,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L33"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 28,
                            "name": "type",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "HTML button type"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "Button.tsx",
                                "line": 15,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L15"
                              }
                            ],
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "literal",
                                  "value": "button"
                                },
                                {
                                  "type": "literal",
                                  "value": "submit"
                                },
                                {
                                  "type": "literal",
                                  "value": "reset"
                                }
                              ]
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              35,
                              30,
                              25,
                              34,
                              31,
                              36,
                              27,
                              38,
                              32,
                              29,
                              33,
                              26,
                              37,
                              28
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "Button.tsx",
                            "line": 9,
                            "character": 2,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L9"
                          }
                        ]
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "HTMLButtonElement",
                                  "qualifiedName": "HTMLButtonElement",
                                  "package": "typescript"
                                }
                              ],
                              "name": "ButtonHTMLAttributes",
                              "qualifiedName": "React.ButtonHTMLAttributes",
                              "package": "@types/react"
                            },
                            {
                              "type": "reference",
                              "name": "HTMLButtonElement",
                              "qualifiedName": "HTMLButtonElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DetailedHTMLProps",
                          "qualifiedName": "React.DetailedHTMLProps",
                          "package": "@types/react"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "link"
                            },
                            {
                              "type": "literal",
                              "value": "image"
                            },
                            {
                              "type": "literal",
                              "value": "text"
                            },
                            {
                              "type": "literal",
                              "value": "ref"
                            },
                            {
                              "type": "literal",
                              "value": "className"
                            },
                            {
                              "type": "literal",
                              "value": "type"
                            },
                            {
                              "type": "literal",
                              "value": "size"
                            },
                            {
                              "type": "literal",
                              "value": "icon"
                            },
                            {
                              "type": "literal",
                              "value": "loading"
                            },
                            {
                              "type": "literal",
                              "value": "circular"
                            },
                            {
                              "type": "literal",
                              "value": "flat"
                            },
                            {
                              "type": "literal",
                              "value": "primary"
                            },
                            {
                              "type": "literal",
                              "value": "danger"
                            },
                            {
                              "type": "literal",
                              "value": "active"
                            },
                            {
                              "type": "literal",
                              "value": "hover"
                            }
                          ]
                        }
                      ],
                      "name": "Omit",
                      "qualifiedName": "Omit",
                      "package": "typescript"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLButtonElement",
                          "qualifiedName": "HTMLButtonElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "RefAttributes",
                      "qualifiedName": "React.RefAttributes",
                      "package": "@types/react"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ],
                          "name": "JSXElementConstructor",
                          "qualifiedName": "React.JSXElementConstructor",
                          "package": "@types/react"
                        }
                      ]
                    }
                  ],
                  "name": "ReactElement",
                  "qualifiedName": "React.ReactElement",
                  "package": "@types/react"
                }
              ]
            }
          }
        ]
      },
      {
        "id": 1,
        "name": "ButtonImpl",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Button.tsx",
            "line": 44,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Button.tsx#L44"
          }
        ],
        "signatures": [
          {
            "id": 2,
            "name": "ButtonImpl",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "This is a button component."
                }
              ],
              "blockTags": [
                {
                  "tag": "@Group",
                  "content": [
                    {
                      "kind": "text",
                      "text": "Components"
                    }
                  ]
                }
              ]
            },
            "parameters": [
              {
                "id": 3,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 5,
                  "name": "ButtonProps"
                }
              },
              {
                "id": 4,
                "name": "ref",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "HTMLButtonElement",
                      "qualifiedName": "HTMLButtonElement",
                      "package": "typescript"
                    }
                  ],
                  "name": "ForwardedRef",
                  "qualifiedName": "React.ForwardedRef",
                  "package": "@types/react"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Calendar": [
      {
        "id": 8,
        "name": "Calendar",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 10,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 472,
                "character": 8
              },
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 477,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 11,
                "name": "new Calendar",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 12,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CalendarProps"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 1,
                              "name": "CalendarProps"
                            }
                          ],
                          "name": "Readonly",
                          "qualifiedName": "Readonly",
                          "package": "typescript"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 8,
                  "name": "Calendar"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component<CalendarProps>.constructor"
                }
              },
              {
                "id": 13,
                "name": "new Calendar",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": []
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/docs/legacy-context.html"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 14,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 1,
                      "name": "CalendarProps"
                    }
                  },
                  {
                    "id": 15,
                    "name": "context",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 8,
                  "name": "Calendar"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component<CalendarProps>.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component<CalendarProps>.constructor"
            }
          },
          {
            "id": 57,
            "name": "context",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If using the new style context, re-declare this in your class to be the\n"
                },
                {
                  "kind": "code",
                  "text": "`React.ContextType`"
                },
                {
                  "kind": "text",
                  "text": " of your "
                },
                {
                  "kind": "code",
                  "text": "`static contextType`"
                },
                {
                  "kind": "text",
                  "text": ".\nShould be used with type annotation or static contextType.\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 470,
                "character": 8
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.context"
            }
          },
          {
            "id": 79,
            "name": "props",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 490,
                "character": 17
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 1,
                  "name": "CalendarProps"
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.props"
            }
          },
          {
            "id": 80,
            "name": "refs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@deprecated",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 496,
                "character": 8
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 81,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "node_modules/@types/react/index.d.ts",
                    "line": 496,
                    "character": 14
                  }
                ],
                "indexSignature": {
                  "id": 82,
                  "name": "__index",
                  "kind": 8192,
                  "kindString": "Index signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 83,
                      "name": "key",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactInstance",
                    "qualifiedName": "React.ReactInstance",
                    "package": "@types/react"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.refs"
            }
          },
          {
            "id": 16,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 35,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L35"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 17,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 20,
                    "name": "current",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Calendar.tsx",
                        "line": 38,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L38"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Date",
                      "qualifiedName": "Date",
                      "package": "typescript"
                    },
                    "defaultValue": "..."
                  },
                  {
                    "id": 18,
                    "name": "mode",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Calendar.tsx",
                        "line": 36,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L36"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "MODE"
                    },
                    "defaultValue": "MODE.DAY"
                  },
                  {
                    "id": 19,
                    "name": "value",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Calendar.tsx",
                        "line": 37,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L37"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Date",
                      "qualifiedName": "Date",
                      "package": "typescript"
                    },
                    "defaultValue": "..."
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      20,
                      18,
                      19
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Calendar.tsx",
                    "line": 35,
                    "character": 19,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L35"
                  }
                ]
              }
            },
            "defaultValue": "...",
            "overwrites": {
              "type": "reference",
              "name": "React.Component.state"
            }
          },
          {
            "id": 9,
            "name": "contextType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isExternal": true,
              "isOptional": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, "
                },
                {
                  "kind": "code",
                  "text": "`this.context`"
                },
                {
                  "kind": "text",
                  "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html#classcontexttype"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 453,
                "character": 15
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Context",
              "qualifiedName": "React.Context",
              "package": "@types/react"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.contextType"
            }
          },
          {
            "id": 111,
            "name": "UNSAFE_componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 687,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 112,
                "name": "UNSAFE_componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillMount"
            }
          },
          {
            "id": 117,
            "name": "UNSAFE_componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 719,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 118,
                "name": "UNSAFE_componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 119,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CalendarProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 120,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillReceiveProps"
            }
          },
          {
            "id": 127,
            "name": "UNSAFE_componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 747,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 128,
                "name": "UNSAFE_componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 129,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CalendarProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 130,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 131,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 132,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillUpdate"
            }
          },
          {
            "id": 33,
            "name": "changeYear",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 61,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L61"
              }
            ],
            "signatures": [
              {
                "id": 34,
                "name": "changeYear",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 35,
                    "name": "year",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 94,
            "name": "componentDidCatch",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 616,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 95,
                "name": "componentDidCatch",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 96,
                    "name": "error",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "Error",
                      "qualifiedName": "Error",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 97,
                    "name": "errorInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "ErrorInfo",
                      "qualifiedName": "React.ErrorInfo",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidCatch"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidCatch"
            }
          },
          {
            "id": 84,
            "name": "componentDidMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 595,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 85,
                "name": "componentDidMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidMount"
            }
          },
          {
            "id": 103,
            "name": "componentDidUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 658,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 104,
                "name": "componentDidUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 105,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CalendarProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 106,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 107,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 108,
                    "name": "snapshot",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidUpdate"
            }
          },
          {
            "id": 109,
            "name": "componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 673,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 110,
                "name": "componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillMount"
            }
          },
          {
            "id": 113,
            "name": "componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 702,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 114,
                "name": "componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 115,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CalendarProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 116,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillReceiveProps"
            }
          },
          {
            "id": 92,
            "name": "componentWillUnmount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 611,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 93,
                "name": "componentWillUnmount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidMount`"
                    },
                    {
                      "kind": "text",
                      "text": "."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUnmount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUnmount"
            }
          },
          {
            "id": 121,
            "name": "componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 732,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 122,
                "name": "componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 123,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CalendarProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 124,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 125,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 126,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUpdate"
            }
          },
          {
            "id": 74,
            "name": "forceUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 487,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 75,
                "name": "forceUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 76,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 77,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 487,
                            "character": 31
                          }
                        ],
                        "signatures": [
                          {
                            "id": 78,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.forceUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.forceUpdate"
            }
          },
          {
            "id": 98,
            "name": "getSnapshotBeforeUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 652,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 99,
                "name": "getSnapshotBeforeUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Runs before React applies the result of "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 100,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CalendarProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 101,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 102,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.getSnapshotBeforeUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.getSnapshotBeforeUpdate"
            }
          },
          {
            "id": 47,
            "name": "getValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 81,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L81"
              }
            ],
            "signatures": [
              {
                "id": 48,
                "name": "getValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Date",
                  "qualifiedName": "Date",
                  "package": "typescript"
                }
              }
            ]
          },
          {
            "id": 38,
            "name": "onNext",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 71,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L71"
              }
            ],
            "signatures": [
              {
                "id": 39,
                "name": "onNext",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 36,
            "name": "onPrevious",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 67,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L67"
              }
            ],
            "signatures": [
              {
                "id": 37,
                "name": "onPrevious",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 55,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 160,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L160"
              }
            ],
            "signatures": [
              {
                "id": 56,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.render"
            }
          },
          {
            "id": 49,
            "name": "renderDays",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 85,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L85"
              }
            ],
            "signatures": [
              {
                "id": 50,
                "name": "renderDays",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                }
              }
            ]
          },
          {
            "id": 51,
            "name": "renderMonths",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 126,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L126"
              }
            ],
            "signatures": [
              {
                "id": 52,
                "name": "renderMonths",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                }
              }
            ]
          },
          {
            "id": 53,
            "name": "renderYears",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 146,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L146"
              }
            ],
            "signatures": [
              {
                "id": 54,
                "name": "renderYears",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                }
              }
            ]
          },
          {
            "id": 40,
            "name": "select",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 75,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L75"
              }
            ],
            "signatures": [
              {
                "id": 41,
                "name": "select",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 42,
                    "name": "item",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 43,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 44,
                            "name": "date",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Calendar.tsx",
                                "line": 75,
                                "character": 20,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L75"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          },
                          {
                            "id": 45,
                            "name": "month",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Calendar.tsx",
                                "line": 75,
                                "character": 34,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L75"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          },
                          {
                            "id": 46,
                            "name": "year",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Calendar.tsx",
                                "line": 75,
                                "character": 49,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L75"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              44,
                              45,
                              46
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/components/Calendar.tsx",
                            "line": 75,
                            "character": 18,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L75"
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 24,
            "name": "setCurrent",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 45,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L45"
              }
            ],
            "signatures": [
              {
                "id": 25,
                "name": "setCurrent",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 26,
                    "name": "current",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Date",
                      "qualifiedName": "Date",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 21,
            "name": "setMode",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 41,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L41"
              }
            ],
            "signatures": [
              {
                "id": 22,
                "name": "setMode",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 23,
                    "name": "mode",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "MODE"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 27,
            "name": "setMonth",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 49,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L49"
              }
            ],
            "signatures": [
              {
                "id": 28,
                "name": "setMonth",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 29,
                    "name": "month",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 58,
            "name": "setState",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 482,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 59,
                "name": "setState",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "typeParameter": [
                  {
                    "id": 60,
                    "name": "K",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 61,
                    "name": "state",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 62,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 63,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 483,
                                "character": 20
                              }
                            ],
                            "signatures": [
                              {
                                "id": 64,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {
                                  "isExternal": true
                                },
                                "parameters": [
                                  {
                                    "id": 65,
                                    "name": "prevState",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 66,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  },
                                  {
                                    "id": 67,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 1,
                                          "name": "CalendarProps"
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 68,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                          "isExternal": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 69,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "reference",
                                          "id": 60,
                                          "name": "K",
                                          "qualifiedName": "K",
                                          "package": "@types/react"
                                        }
                                      ],
                                      "name": "Pick",
                                      "qualifiedName": "Pick",
                                      "package": "typescript"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 70,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {
                                  "isExternal": true
                                }
                              }
                            },
                            {
                              "type": "reference",
                              "id": 60,
                              "name": "K",
                              "qualifiedName": "K",
                              "package": "@types/react"
                            }
                          ],
                          "name": "Pick",
                          "qualifiedName": "Pick",
                          "package": "typescript"
                        }
                      ]
                    }
                  },
                  {
                    "id": 71,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 72,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 484,
                            "character": 23
                          }
                        ],
                        "signatures": [
                          {
                            "id": 73,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.setState"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.setState"
            }
          },
          {
            "id": 30,
            "name": "setYear",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 56,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L56"
              }
            ],
            "signatures": [
              {
                "id": 31,
                "name": "setYear",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 32,
                    "name": "year",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 86,
            "name": "shouldComponentUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 606,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 87,
                "name": "shouldComponentUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                    },
                    {
                      "kind": "code",
                      "text": "`Component`"
                    },
                    {
                      "kind": "text",
                      "text": " always returns true.\n"
                    },
                    {
                      "kind": "code",
                      "text": "`PureComponent`"
                    },
                    {
                      "kind": "text",
                      "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "code",
                      "text": "`componentWillUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": "\nand "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": " will not be called."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 88,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CalendarProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 89,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 90,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 91,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.shouldComponentUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.shouldComponentUpdate"
            }
          }
        ],
        "groups": [
          "Classes"
        ],
        "sources": [
          {
            "fileName": "src/components/Calendar.tsx",
            "line": 34,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L34"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 1,
                "name": "CalendarProps"
              }
            ],
            "name": "Component",
            "qualifiedName": "React.Component",
            "package": "@types/react"
          }
        ]
      },
      {
        "id": 1,
        "name": "CalendarProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Calendar.tsx",
            "line": 29,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L29"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 2,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 4,
                "name": "onChange",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Calendar.tsx",
                    "line": 31,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L31"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 5,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Calendar.tsx",
                        "line": 31,
                        "character": 13,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L31"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 6,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 7,
                            "name": "date",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "name": "Date",
                              "qualifiedName": "Date",
                              "package": "typescript"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 3,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Calendar.tsx",
                    "line": 30,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L30"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Date",
                  "qualifiedName": "Date",
                  "package": "typescript"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  4,
                  3
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/components/Calendar.tsx",
                "line": 29,
                "character": 28,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Calendar.tsx#L29"
              }
            ]
          }
        }
      }
    ],
    "Checkbox": [
      {
        "id": 14,
        "name": "Checkbox",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 23,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Checkbox.tsx",
                "line": 38,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L38"
              }
            ],
            "signatures": [
              {
                "id": 24,
                "name": "new Checkbox",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 25,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1,
                      "name": "CheckboxProps"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 14,
                  "name": "Checkbox"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component<CheckboxProps>.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component<CheckboxProps>.constructor"
            }
          },
          {
            "id": 32,
            "name": "context",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If using the new style context, re-declare this in your class to be the\n"
                },
                {
                  "kind": "code",
                  "text": "`React.ContextType`"
                },
                {
                  "kind": "text",
                  "text": " of your "
                },
                {
                  "kind": "code",
                  "text": "`static contextType`"
                },
                {
                  "kind": "text",
                  "text": ".\nShould be used with type annotation or static contextType.\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 470,
                "character": 8
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.context"
            }
          },
          {
            "id": 26,
            "name": "id",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Checkbox.tsx",
                "line": 36,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L36"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 54,
            "name": "props",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 490,
                "character": 17
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 1,
                  "name": "CheckboxProps"
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.props"
            }
          },
          {
            "id": 57,
            "name": "refs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@deprecated",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 496,
                "character": 8
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 58,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "node_modules/@types/react/index.d.ts",
                    "line": 496,
                    "character": 14
                  }
                ],
                "indexSignature": {
                  "id": 59,
                  "name": "__index",
                  "kind": 8192,
                  "kindString": "Index signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 60,
                      "name": "key",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactInstance",
                    "qualifiedName": "React.ReactInstance",
                    "package": "@types/react"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.refs"
            }
          },
          {
            "id": 55,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 491,
                "character": 8
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 56,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {}
                  }
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.state"
            }
          },
          {
            "id": 22,
            "name": "contextType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isExternal": true,
              "isOptional": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, "
                },
                {
                  "kind": "code",
                  "text": "`this.context`"
                },
                {
                  "kind": "text",
                  "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html#classcontexttype"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 453,
                "character": 15
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Context",
              "qualifiedName": "React.Context",
              "package": "@types/react"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.contextType"
            }
          },
          {
            "id": 15,
            "name": "defaultProps",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Checkbox.tsx",
                "line": 30,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L30"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 16,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 19,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 33,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L33"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 20,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Checkbox.tsx",
                            "line": 5,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L5"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 21,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 17,
                    "name": "showLabel",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 31,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L31"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "true"
                  },
                  {
                    "id": 18,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 32,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L32"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"medium\""
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      19,
                      17,
                      18
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Checkbox.tsx",
                    "line": 30,
                    "character": 24,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L30"
                  }
                ]
              }
            },
            "defaultValue": "..."
          },
          {
            "id": 88,
            "name": "UNSAFE_componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 687,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 89,
                "name": "UNSAFE_componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillMount"
            }
          },
          {
            "id": 94,
            "name": "UNSAFE_componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 719,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 95,
                "name": "UNSAFE_componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 96,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CheckboxProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 97,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillReceiveProps"
            }
          },
          {
            "id": 104,
            "name": "UNSAFE_componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 747,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 105,
                "name": "UNSAFE_componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 106,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CheckboxProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 107,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 108,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 109,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillUpdate"
            }
          },
          {
            "id": 71,
            "name": "componentDidCatch",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 616,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 72,
                "name": "componentDidCatch",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 73,
                    "name": "error",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "Error",
                      "qualifiedName": "Error",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 74,
                    "name": "errorInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "ErrorInfo",
                      "qualifiedName": "React.ErrorInfo",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidCatch"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidCatch"
            }
          },
          {
            "id": 61,
            "name": "componentDidMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 595,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 62,
                "name": "componentDidMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidMount"
            }
          },
          {
            "id": 80,
            "name": "componentDidUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 658,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 81,
                "name": "componentDidUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 82,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CheckboxProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 83,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 84,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 85,
                    "name": "snapshot",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidUpdate"
            }
          },
          {
            "id": 86,
            "name": "componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 673,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 87,
                "name": "componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillMount"
            }
          },
          {
            "id": 90,
            "name": "componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 702,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 91,
                "name": "componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 92,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CheckboxProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 93,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillReceiveProps"
            }
          },
          {
            "id": 69,
            "name": "componentWillUnmount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 611,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 70,
                "name": "componentWillUnmount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidMount`"
                    },
                    {
                      "kind": "text",
                      "text": "."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUnmount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUnmount"
            }
          },
          {
            "id": 98,
            "name": "componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 732,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 99,
                "name": "componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 100,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CheckboxProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 101,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 102,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 103,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUpdate"
            }
          },
          {
            "id": 49,
            "name": "forceUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 487,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 50,
                "name": "forceUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 51,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 52,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 487,
                            "character": 31
                          }
                        ],
                        "signatures": [
                          {
                            "id": 53,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.forceUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.forceUpdate"
            }
          },
          {
            "id": 75,
            "name": "getSnapshotBeforeUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 652,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 76,
                "name": "getSnapshotBeforeUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Runs before React applies the result of "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 77,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CheckboxProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 78,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 79,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.getSnapshotBeforeUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.getSnapshotBeforeUpdate"
            }
          },
          {
            "id": 27,
            "name": "onChange",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Checkbox.tsx",
                "line": 43,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L43"
              }
            ],
            "signatures": [
              {
                "id": 28,
                "name": "onChange",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 29,
                    "name": "ev",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLInputElement",
                          "qualifiedName": "HTMLInputElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "ChangeEvent",
                      "qualifiedName": "React.ChangeEvent",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 30,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Checkbox.tsx",
                "line": 49,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L49"
              }
            ],
            "signatures": [
              {
                "id": 31,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.render"
            }
          },
          {
            "id": 33,
            "name": "setState",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 482,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 34,
                "name": "setState",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "typeParameter": [
                  {
                    "id": 35,
                    "name": "K",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 36,
                    "name": "state",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 37,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 38,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 483,
                                "character": 20
                              }
                            ],
                            "signatures": [
                              {
                                "id": 39,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {
                                  "isExternal": true
                                },
                                "parameters": [
                                  {
                                    "id": 40,
                                    "name": "prevState",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 41,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  },
                                  {
                                    "id": 42,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 1,
                                          "name": "CheckboxProps"
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 43,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                          "isExternal": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 44,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "reference",
                                          "id": 35,
                                          "name": "K",
                                          "qualifiedName": "K",
                                          "package": "@types/react"
                                        }
                                      ],
                                      "name": "Pick",
                                      "qualifiedName": "Pick",
                                      "package": "typescript"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 45,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {
                                  "isExternal": true
                                }
                              }
                            },
                            {
                              "type": "reference",
                              "id": 35,
                              "name": "K",
                              "qualifiedName": "K",
                              "package": "@types/react"
                            }
                          ],
                          "name": "Pick",
                          "qualifiedName": "Pick",
                          "package": "typescript"
                        }
                      ]
                    }
                  },
                  {
                    "id": 46,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 47,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 484,
                            "character": 23
                          }
                        ],
                        "signatures": [
                          {
                            "id": 48,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.setState"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.setState"
            }
          },
          {
            "id": 63,
            "name": "shouldComponentUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 606,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 64,
                "name": "shouldComponentUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                    },
                    {
                      "kind": "code",
                      "text": "`Component`"
                    },
                    {
                      "kind": "text",
                      "text": " always returns true.\n"
                    },
                    {
                      "kind": "code",
                      "text": "`PureComponent`"
                    },
                    {
                      "kind": "text",
                      "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "code",
                      "text": "`componentWillUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": "\nand "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": " will not be called."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 65,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 1,
                          "name": "CheckboxProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 66,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 67,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 68,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.shouldComponentUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.shouldComponentUpdate"
            }
          }
        ],
        "groups": [
          "Classes"
        ],
        "sources": [
          {
            "fileName": "src/components/Checkbox.tsx",
            "line": 29,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L29"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 1,
                "name": "CheckboxProps"
              }
            ],
            "name": "Component",
            "qualifiedName": "React.Component",
            "package": "@types/react"
          }
        ]
      },
      {
        "id": 1,
        "name": "CheckboxProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Checkbox.tsx",
            "line": 9,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L9"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "label"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 2,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 7,
                    "name": "defaultValue",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Default value of the checkbox."
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 21,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L21"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 8,
                    "name": "disabled",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Whether the checkbox is disabled."
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 23,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L23"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 3,
                    "name": "label",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "The checkbox label"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 13,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L13"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 9,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 25,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L25"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 10,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Checkbox.tsx",
                            "line": 25,
                            "character": 15,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L25"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 11,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "A callback function that is called when the checkbox is changed."
                                }
                              ]
                            },
                            "parameters": [
                              {
                                "id": 12,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              },
                              {
                                "id": 13,
                                "name": "ev",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reference",
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "name": "HTMLInputElement",
                                      "qualifiedName": "HTMLInputElement",
                                      "package": "typescript"
                                    }
                                  ],
                                  "name": "React.ChangeEvent",
                                  "qualifiedName": "React.ChangeEvent",
                                  "package": "@types/react"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 5,
                    "name": "showLabel",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Whether to show the checkbox label."
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 17,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 4,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Size of the checkbox."
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 15,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L15"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "mini"
                        },
                        {
                          "type": "literal",
                          "value": "small"
                        },
                        {
                          "type": "literal",
                          "value": "medium"
                        },
                        {
                          "type": "literal",
                          "value": "large"
                        },
                        {
                          "type": "literal",
                          "value": "huge"
                        },
                        {
                          "type": "literal",
                          "value": "mega"
                        }
                      ]
                    }
                  },
                  {
                    "id": 6,
                    "name": "value",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "The current value of the checkbox."
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Checkbox.tsx",
                        "line": 19,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L19"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      7,
                      8,
                      3,
                      9,
                      5,
                      4,
                      6
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Checkbox.tsx",
                    "line": 11,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Checkbox.tsx#L11"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      }
    ],
    "DatePicker": [
      {
        "id": 4,
        "name": "DatePickerProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "DatePicker.tsx",
            "line": 12,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/DatePicker.tsx#L12"
          }
        ],
        "type": {
          "type": "intersection",
          "types": [
            {
              "type": "reflection",
              "declaration": {
                "id": 5,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 7,
                    "name": "defaultValue",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "A date object"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "DatePicker.tsx",
                        "line": 16,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/DatePicker.tsx#L16"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Date",
                      "qualifiedName": "Date",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 12,
                    "name": "format",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "A string that represents the date format"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "DatePicker.tsx",
                        "line": 20,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/DatePicker.tsx#L20"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 8,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "DatePicker.tsx",
                        "line": 18,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/DatePicker.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 9,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "DatePicker.tsx",
                            "line": 18,
                            "character": 12,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/DatePicker.tsx#L18"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 10,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "A function that receives a date object"
                                }
                              ]
                            },
                            "parameters": [
                              {
                                "id": 11,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "reference",
                                      "name": "Date",
                                      "qualifiedName": "Date",
                                      "package": "typescript"
                                    },
                                    {
                                      "type": "literal",
                                      "value": null
                                    }
                                  ]
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 6,
                    "name": "value",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "A date object"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "DatePicker.tsx",
                        "line": 14,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/DatePicker.tsx#L14"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Date",
                      "qualifiedName": "Date",
                      "package": "typescript"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      7,
                      12,
                      8,
                      6
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "DatePicker.tsx",
                    "line": 12,
                    "character": 30,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/DatePicker.tsx#L12"
                  }
                ]
              }
            },
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "InputProps"
                },
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "onChange"
                    },
                    {
                      "type": "literal",
                      "value": "iconAfter"
                    },
                    {
                      "type": "literal",
                      "value": "value"
                    },
                    {
                      "type": "literal",
                      "value": "onFocus"
                    },
                    {
                      "type": "literal",
                      "value": "onBlur"
                    },
                    {
                      "type": "literal",
                      "value": "defaultValue"
                    }
                  ]
                }
              ],
              "name": "Omit",
              "qualifiedName": "Omit",
              "package": "typescript"
            }
          ]
        }
      },
      {
        "id": 1,
        "name": "DatePicker",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "DatePicker.tsx",
            "line": 26,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/DatePicker.tsx#L26"
          }
        ],
        "signatures": [
          {
            "id": 2,
            "name": "DatePicker",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 3,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 4,
                  "name": "DatePickerProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Dropdown": [
      {
        "id": 67,
        "name": "Dropdown",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 92,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 89,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L89"
              }
            ],
            "signatures": [
              {
                "id": 93,
                "name": "new Dropdown",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 94,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ]
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 95,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 34,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 94,
                          "name": "T"
                        }
                      ],
                      "name": "DropdownProps"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 67,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 94,
                      "name": "T"
                    }
                  ],
                  "name": "Dropdown"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component<\n  DropdownProps<T>\n>.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component<\n  DropdownProps<T>\n>.constructor"
            }
          },
          {
            "id": 148,
            "name": "context",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If using the new style context, re-declare this in your class to be the\n"
                },
                {
                  "kind": "code",
                  "text": "`React.ContextType`"
                },
                {
                  "kind": "text",
                  "text": " of your "
                },
                {
                  "kind": "code",
                  "text": "`static contextType`"
                },
                {
                  "kind": "text",
                  "text": ".\nShould be used with type annotation or static contextType.\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 470,
                "character": 8
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.context"
            }
          },
          {
            "id": 96,
            "name": "domNode",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 63,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L63"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLDivElement",
              "qualifiedName": "HTMLDivElement",
              "package": "typescript"
            }
          },
          {
            "id": 99,
            "name": "lastOption",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 67,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L67"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 28,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 94,
                      "name": "T"
                    }
                  ],
                  "name": "DropdownOption"
                }
              ]
            }
          },
          {
            "id": 100,
            "name": "lastOptions",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 68,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L68"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 28,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 94,
                        "name": "T"
                      }
                    ],
                    "name": "DropdownOption"
                  }
                }
              ]
            }
          },
          {
            "id": 101,
            "name": "lastRenderedOptions",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 69,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L69"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 28,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 94,
                        "name": "T"
                      }
                    ],
                    "name": "DropdownOption"
                  }
                }
              ]
            }
          },
          {
            "id": 102,
            "name": "lastRenderedOptionsArgs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 70,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L70"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 28,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 94,
                          "name": "T"
                        }
                      ],
                      "name": "DropdownOption"
                    }
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 103,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/components/Dropdown.tsx",
                          "line": 72,
                          "character": 7,
                          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L72"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 104,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 105,
                              "name": "option",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            },
                            {
                              "id": 106,
                              "name": "filter",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 98,
            "name": "lastValue",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 66,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L66"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 94,
                  "name": "T"
                }
              ]
            }
          },
          {
            "id": 170,
            "name": "props",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 490,
                "character": 17
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 34,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 94,
                      "name": "T"
                    }
                  ],
                  "name": "DropdownProps"
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.props"
            }
          },
          {
            "id": 171,
            "name": "refs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@deprecated",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 496,
                "character": 8
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 172,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "node_modules/@types/react/index.d.ts",
                    "line": 496,
                    "character": 14
                  }
                ],
                "indexSignature": {
                  "id": 173,
                  "name": "__index",
                  "kind": 8192,
                  "kindString": "Index signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 174,
                      "name": "key",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactInstance",
                    "qualifiedName": "React.ReactInstance",
                    "package": "@types/react"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.refs"
            }
          },
          {
            "id": 107,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 77,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L77"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 108,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 116,
                    "name": "inputValue",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 85,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L85"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 111,
                    "name": "open",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 80,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L80"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 112,
                    "name": "position",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 81,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L81"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 113,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 115,
                            "name": "left",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Dropdown.tsx",
                                "line": 83,
                                "character": 6,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L83"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          },
                          {
                            "id": 114,
                            "name": "top",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Dropdown.tsx",
                                "line": 82,
                                "character": 6,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L82"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              115,
                              114
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/components/Dropdown.tsx",
                            "line": 81,
                            "character": 14,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L81"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 117,
                    "name": "previousInputValue",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 86,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L86"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 110,
                    "name": "selectedOption",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 79,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L79"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 28,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 94,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownOption"
                        }
                      ]
                    }
                  },
                  {
                    "id": 109,
                    "name": "value",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 78,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L78"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 94,
                          "name": "T"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      116,
                      111,
                      112,
                      117,
                      110,
                      109
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 77,
                    "character": 18,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L77"
                  }
                ]
              }
            },
            "overwrites": {
              "type": "reference",
              "name": "React.Component.state"
            }
          },
          {
            "id": 97,
            "name": "trigger",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 64,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L64"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "HTMLDivElement",
                  "qualifiedName": "HTMLDivElement",
                  "package": "typescript"
                },
                {
                  "type": "reference",
                  "name": "HTMLButtonElement",
                  "qualifiedName": "HTMLButtonElement",
                  "package": "typescript"
                }
              ]
            }
          },
          {
            "id": 72,
            "name": "Button",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 48,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L48"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 73,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/Menu.tsx",
                    "line": 42,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L42"
                  }
                ],
                "signatures": [
                  {
                    "id": 74,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 75,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "MenuButtonProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            },
            "defaultValue": "Menu.Button"
          },
          {
            "id": 68,
            "name": "Item",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 47,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L47"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 69,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/Menu.tsx",
                    "line": 135,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L135"
                  }
                ],
                "signatures": [
                  {
                    "id": 70,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 71,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "BoxProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            },
            "defaultValue": "Menu.Item"
          },
          {
            "id": 76,
            "name": "Separator",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 49,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L49"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 77,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/Separator.tsx",
                    "line": 5,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Separator.tsx#L5"
                  }
                ],
                "signatures": [
                  {
                    "id": 78,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 79,
                        "name": "props",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "SeparatorProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            },
            "defaultValue": "Separator"
          },
          {
            "id": 91,
            "name": "contextType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isExternal": true,
              "isOptional": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, "
                },
                {
                  "kind": "code",
                  "text": "`this.context`"
                },
                {
                  "kind": "text",
                  "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html#classcontexttype"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 453,
                "character": 15
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Context",
              "qualifiedName": "React.Context",
              "package": "@types/react"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.contextType"
            }
          },
          {
            "id": 80,
            "name": "defaultProps",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 51,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L51"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 81,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 83,
                    "name": "align",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 53,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L53"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"right\""
                  },
                  {
                    "id": 84,
                    "name": "disabled",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 54,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L54"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "false"
                  },
                  {
                    "id": 85,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 55,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L55"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    },
                    "defaultValue": "[]"
                  },
                  {
                    "id": 82,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 52,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L52"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"medium\""
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      83,
                      84,
                      85,
                      82
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 51,
                    "character": 24,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L51"
                  }
                ]
              }
            },
            "defaultValue": "..."
          },
          {
            "id": 200,
            "name": "UNSAFE_componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 687,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 201,
                "name": "UNSAFE_componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillMount"
            }
          },
          {
            "id": 206,
            "name": "UNSAFE_componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 719,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 207,
                "name": "UNSAFE_componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 208,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 34,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 94,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 209,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillReceiveProps"
            }
          },
          {
            "id": 216,
            "name": "UNSAFE_componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 747,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 217,
                "name": "UNSAFE_componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 218,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 34,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 94,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 219,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 220,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 221,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillUpdate"
            }
          },
          {
            "id": 131,
            "name": "close",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 140,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L140"
              }
            ],
            "signatures": [
              {
                "id": 132,
                "name": "close",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 183,
            "name": "componentDidCatch",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 616,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 184,
                "name": "componentDidCatch",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 185,
                    "name": "error",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "Error",
                      "qualifiedName": "Error",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 186,
                    "name": "errorInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "ErrorInfo",
                      "qualifiedName": "React.ErrorInfo",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidCatch"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidCatch"
            }
          },
          {
            "id": 175,
            "name": "componentDidMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 595,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 176,
                "name": "componentDidMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidMount"
            }
          },
          {
            "id": 192,
            "name": "componentDidUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 658,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 193,
                "name": "componentDidUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 194,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 34,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 94,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 195,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 196,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 197,
                    "name": "snapshot",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidUpdate"
            }
          },
          {
            "id": 198,
            "name": "componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 673,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 199,
                "name": "componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillMount"
            }
          },
          {
            "id": 202,
            "name": "componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 702,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 203,
                "name": "componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 204,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 34,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 94,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 205,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillReceiveProps"
            }
          },
          {
            "id": 118,
            "name": "componentWillUnmount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 108,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L108"
              }
            ],
            "signatures": [
              {
                "id": 119,
                "name": "componentWillUnmount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.componentWillUnmount"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.componentWillUnmount"
            }
          },
          {
            "id": 210,
            "name": "componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 732,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 211,
                "name": "componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 212,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 34,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 94,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 213,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 214,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 215,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUpdate"
            }
          },
          {
            "id": 165,
            "name": "forceUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 487,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 166,
                "name": "forceUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 167,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 168,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 487,
                            "character": 31
                          }
                        ],
                        "signatures": [
                          {
                            "id": 169,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.forceUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.forceUpdate"
            }
          },
          {
            "id": 142,
            "name": "getRenderedOptions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 172,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L172"
              }
            ],
            "signatures": [
              {
                "id": 143,
                "name": "getRenderedOptions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 28,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 94,
                        "name": "T"
                      }
                    ],
                    "name": "DropdownOption"
                  }
                }
              }
            ]
          },
          {
            "id": 144,
            "name": "getSelectedOption",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 208,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L208"
              }
            ],
            "signatures": [
              {
                "id": 145,
                "name": "getSelectedOption",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reference",
                      "id": 28,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 94,
                          "name": "T"
                        }
                      ],
                      "name": "DropdownOption"
                    }
                  ]
                }
              }
            ]
          },
          {
            "id": 187,
            "name": "getSnapshotBeforeUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 652,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 188,
                "name": "getSnapshotBeforeUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Runs before React applies the result of "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 189,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 34,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 94,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 190,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 191,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.getSnapshotBeforeUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.getSnapshotBeforeUpdate"
            }
          },
          {
            "id": 140,
            "name": "getValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 167,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L167"
              }
            ],
            "signatures": [
              {
                "id": 141,
                "name": "getValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reference",
                      "id": 94,
                      "name": "T"
                    }
                  ]
                }
              }
            ]
          },
          {
            "id": 135,
            "name": "isControlled",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 153,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L153"
              }
            ],
            "signatures": [
              {
                "id": 136,
                "name": "isControlled",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ]
          },
          {
            "id": 133,
            "name": "isOpen",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 149,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L149"
              }
            ],
            "signatures": [
              {
                "id": 134,
                "name": "isOpen",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ]
                }
              }
            ]
          },
          {
            "id": 125,
            "name": "onInputAccept",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 120,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L120"
              }
            ],
            "signatures": [
              {
                "id": 126,
                "name": "onInputAccept",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 120,
            "name": "onInputBlur",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 112,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L112"
              }
            ],
            "signatures": [
              {
                "id": 121,
                "name": "onInputBlur",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 122,
            "name": "onInputChange",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 116,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L116"
              }
            ],
            "signatures": [
              {
                "id": 123,
                "name": "onInputChange",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 124,
                    "name": "inputValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 127,
            "name": "onToggle",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 130,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L130"
              }
            ],
            "signatures": [
              {
                "id": 128,
                "name": "onToggle",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 129,
            "name": "open",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 135,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L135"
              }
            ],
            "signatures": [
              {
                "id": 130,
                "name": "open",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 146,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 222,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L222"
              }
            ],
            "signatures": [
              {
                "id": 147,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.render"
            }
          },
          {
            "id": 137,
            "name": "select",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 157,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L157"
              }
            ],
            "signatures": [
              {
                "id": 138,
                "name": "select",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 139,
                    "name": "option",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reference",
                          "id": 28,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 94,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownOption"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 149,
            "name": "setState",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 482,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 150,
                "name": "setState",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "typeParameter": [
                  {
                    "id": 151,
                    "name": "K",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 152,
                    "name": "state",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 153,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 154,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 483,
                                "character": 20
                              }
                            ],
                            "signatures": [
                              {
                                "id": 155,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {
                                  "isExternal": true
                                },
                                "parameters": [
                                  {
                                    "id": 156,
                                    "name": "prevState",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 157,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  },
                                  {
                                    "id": 158,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 34,
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 94,
                                              "name": "T"
                                            }
                                          ],
                                          "name": "DropdownProps"
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 159,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                          "isExternal": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 160,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "reference",
                                          "id": 151,
                                          "name": "K",
                                          "qualifiedName": "K",
                                          "package": "@types/react"
                                        }
                                      ],
                                      "name": "Pick",
                                      "qualifiedName": "Pick",
                                      "package": "typescript"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 161,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {
                                  "isExternal": true
                                }
                              }
                            },
                            {
                              "type": "reference",
                              "id": 151,
                              "name": "K",
                              "qualifiedName": "K",
                              "package": "@types/react"
                            }
                          ],
                          "name": "Pick",
                          "qualifiedName": "Pick",
                          "package": "typescript"
                        }
                      ]
                    }
                  },
                  {
                    "id": 162,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 163,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 484,
                            "character": 23
                          }
                        ],
                        "signatures": [
                          {
                            "id": 164,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.setState"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.setState"
            }
          },
          {
            "id": 177,
            "name": "shouldComponentUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 606,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 178,
                "name": "shouldComponentUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                    },
                    {
                      "kind": "code",
                      "text": "`Component`"
                    },
                    {
                      "kind": "text",
                      "text": " always returns true.\n"
                    },
                    {
                      "kind": "code",
                      "text": "`PureComponent`"
                    },
                    {
                      "kind": "text",
                      "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "code",
                      "text": "`componentWillUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": "\nand "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": " will not be called."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 179,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 34,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 94,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 180,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 181,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 182,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.shouldComponentUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.shouldComponentUpdate"
            }
          },
          {
            "id": 86,
            "name": "getDerivedStateFromProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 58,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L58"
              }
            ],
            "signatures": [
              {
                "id": 87,
                "name": "getDerivedStateFromProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 88,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 34,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ],
                      "name": "DropdownProps"
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 89,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 90,
                            "name": "open",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Dropdown.tsx",
                                "line": 59,
                                "character": 34,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L59"
                              }
                            ],
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "undefined"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              ]
                            },
                            "defaultValue": "props.open"
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              90
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/components/Dropdown.tsx",
                            "line": 59,
                            "character": 32,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L59"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        ],
        "groups": [
          "Classes"
        ],
        "sources": [
          {
            "fileName": "src/components/Dropdown.tsx",
            "line": 44,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L44"
          }
        ],
        "typeParameters": [
          {
            "id": 222,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ]
            }
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 34,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 94,
                    "name": "T"
                  }
                ],
                "name": "DropdownProps"
              }
            ],
            "name": "Component",
            "qualifiedName": "React.Component",
            "package": "@types/react"
          }
        ]
      },
      {
        "id": 28,
        "name": "DropdownOption",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Dropdown.tsx",
            "line": 16,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L16"
          }
        ],
        "typeParameters": [
          {
            "id": 33,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 29,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 32,
                "name": "data",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 19,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L19"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              },
              {
                "id": 31,
                "name": "label",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 18,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L18"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.ReactNode",
                  "qualifiedName": "React.ReactNode",
                  "package": "@types/react"
                }
              },
              {
                "id": 30,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 17,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L17"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 33,
                  "name": "T"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  32,
                  31,
                  30
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 16,
                "character": 32,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L16"
              }
            ]
          }
        }
      },
      {
        "id": 34,
        "name": "DropdownProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Dropdown.tsx",
            "line": 22,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L22"
          }
        ],
        "typeParameters": [
          {
            "id": 66,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 35,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 41,
                "name": "align",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 28,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L28"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "left"
                    },
                    {
                      "type": "literal",
                      "value": "right"
                    }
                  ]
                }
              },
              {
                "id": 48,
                "name": "allowClear",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 35,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L35"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 37,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 24,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L24"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 45,
                "name": "disabled",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 32,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L32"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 51,
                "name": "filter",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 38,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L38"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 52,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 38,
                        "character": 11,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L38"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 53,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 54,
                            "name": "option",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          },
                          {
                            "id": 55,
                            "name": "filter",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                              "isOptional": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 50,
                "name": "filterKey",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 37,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L37"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 36,
                "name": "id",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 23,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L23"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 49,
                "name": "input",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 36,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L36"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 42,
                "name": "label",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 29,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L29"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.ReactNode",
                  "qualifiedName": "React.ReactNode",
                  "package": "@types/react"
                }
              },
              {
                "id": 46,
                "name": "loading",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 33,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L33"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 62,
                "name": "onChange",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 41,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L41"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 63,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 41,
                        "character": 13,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L41"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 64,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 65,
                            "name": "value",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "reference",
                                  "id": 66,
                                  "name": "T"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "undefined"
                                }
                              ]
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 56,
                "name": "onClose",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 39,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L39"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 57,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 39,
                        "character": 12,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L39"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 58,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 59,
                "name": "onOpen",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 40,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L40"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 60,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Dropdown.tsx",
                        "line": 40,
                        "character": 11,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L40"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 61,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 47,
                "name": "open",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 34,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L34"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 44,
                "name": "options",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 31,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L31"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 28,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 66,
                        "name": "T"
                      }
                    ],
                    "name": "DropdownOption"
                  }
                }
              },
              {
                "id": 39,
                "name": "placeholder",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 26,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L26"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 40,
                "name": "size",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 27,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L27"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "mini"
                    },
                    {
                      "type": "literal",
                      "value": "small"
                    },
                    {
                      "type": "literal",
                      "value": "medium"
                    },
                    {
                      "type": "literal",
                      "value": "large"
                    },
                    {
                      "type": "literal",
                      "value": "huge"
                    },
                    {
                      "type": "literal",
                      "value": "mega"
                    },
                    {
                      "type": "literal",
                      "value": "mega"
                    }
                  ]
                }
              },
              {
                "id": 38,
                "name": "triggerClassName",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 25,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L25"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 43,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Dropdown.tsx",
                    "line": 30,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L30"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 66,
                  "name": "T"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  41,
                  48,
                  37,
                  45,
                  51,
                  50,
                  36,
                  49,
                  42,
                  46,
                  62,
                  56,
                  59,
                  47,
                  44,
                  39,
                  40,
                  38,
                  43
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/components/Dropdown.tsx",
                "line": 22,
                "character": 31,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Dropdown.tsx#L22"
              }
            ]
          }
        }
      }
    ],
    "Expander": [
      {
        "id": 49,
        "name": "Expander",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 56,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 50,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L50"
              }
            ],
            "signatures": [
              {
                "id": 57,
                "name": "new Expander",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 58,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 26,
                      "name": "ExpanderProps"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 49,
                  "name": "Expander"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component<ExpanderProps>.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component<ExpanderProps>.constructor"
            }
          },
          {
            "id": 59,
            "name": "contentRef",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 47,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L47"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "HTMLDivElement",
                      "qualifiedName": "HTMLDivElement",
                      "package": "typescript"
                    }
                  ]
                }
              ],
              "name": "MutableRefObject",
              "qualifiedName": "React.MutableRefObject",
              "package": "@types/react"
            }
          },
          {
            "id": 79,
            "name": "context",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If using the new style context, re-declare this in your class to be the\n"
                },
                {
                  "kind": "code",
                  "text": "`React.ContextType`"
                },
                {
                  "kind": "text",
                  "text": " of your "
                },
                {
                  "kind": "code",
                  "text": "`static contextType`"
                },
                {
                  "kind": "text",
                  "text": ".\nShould be used with type annotation or static contextType.\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 470,
                "character": 8
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.context"
            }
          },
          {
            "id": 101,
            "name": "props",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 490,
                "character": 17
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 26,
                  "name": "ExpanderProps"
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.props"
            }
          },
          {
            "id": 102,
            "name": "refs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@deprecated",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 496,
                "character": 8
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 103,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "node_modules/@types/react/index.d.ts",
                    "line": 496,
                    "character": 14
                  }
                ],
                "indexSignature": {
                  "id": 104,
                  "name": "__index",
                  "kind": 8192,
                  "kindString": "Index signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 105,
                      "name": "key",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactInstance",
                    "qualifiedName": "React.ReactInstance",
                    "package": "@types/react"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.refs"
            }
          },
          {
            "id": 60,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 48,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L48"
              }
            ],
            "type": {
              "type": "reference",
              "name": "ExpanderState"
            },
            "overwrites": {
              "type": "reference",
              "name": "React.Component.state"
            }
          },
          {
            "id": 55,
            "name": "contextType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isExternal": true,
              "isOptional": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, "
                },
                {
                  "kind": "code",
                  "text": "`this.context`"
                },
                {
                  "kind": "text",
                  "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html#classcontexttype"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 453,
                "character": 15
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Context",
              "qualifiedName": "React.Context",
              "package": "@types/react"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.contextType"
            }
          },
          {
            "id": 50,
            "name": "defaultProps",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 41,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L41"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 51,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 54,
                    "name": "contents",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 44,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L44"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "false"
                  },
                  {
                    "id": 53,
                    "name": "iconPosition",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 43,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L43"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"after\""
                  },
                  {
                    "id": 52,
                    "name": "transition",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 42,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L42"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"vertical\""
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      54,
                      53,
                      52
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Expander.tsx",
                    "line": 41,
                    "character": 24,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L41"
                  }
                ]
              }
            },
            "defaultValue": "..."
          },
          {
            "id": 127,
            "name": "UNSAFE_componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 687,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 128,
                "name": "UNSAFE_componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillMount"
            }
          },
          {
            "id": 133,
            "name": "UNSAFE_componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 719,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 134,
                "name": "UNSAFE_componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 135,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 26,
                          "name": "ExpanderProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 136,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillReceiveProps"
            }
          },
          {
            "id": 143,
            "name": "UNSAFE_componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 747,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 144,
                "name": "UNSAFE_componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 145,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 26,
                          "name": "ExpanderProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 146,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 147,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 148,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillUpdate"
            }
          },
          {
            "id": 116,
            "name": "componentDidCatch",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 616,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 117,
                "name": "componentDidCatch",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 118,
                    "name": "error",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "Error",
                      "qualifiedName": "Error",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 119,
                    "name": "errorInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "ErrorInfo",
                      "qualifiedName": "React.ErrorInfo",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidCatch"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidCatch"
            }
          },
          {
            "id": 106,
            "name": "componentDidMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 595,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 107,
                "name": "componentDidMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidMount"
            }
          },
          {
            "id": 64,
            "name": "componentDidUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 64,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L64"
              }
            ],
            "signatures": [
              {
                "id": 65,
                "name": "componentDidUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.componentDidUpdate"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.componentDidUpdate"
            }
          },
          {
            "id": 125,
            "name": "componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 673,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 126,
                "name": "componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillMount"
            }
          },
          {
            "id": 129,
            "name": "componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 702,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 130,
                "name": "componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 131,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 26,
                          "name": "ExpanderProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 132,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillReceiveProps"
            }
          },
          {
            "id": 114,
            "name": "componentWillUnmount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 611,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 115,
                "name": "componentWillUnmount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidMount`"
                    },
                    {
                      "kind": "text",
                      "text": "."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUnmount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUnmount"
            }
          },
          {
            "id": 137,
            "name": "componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 732,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 138,
                "name": "componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 139,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 26,
                          "name": "ExpanderProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 140,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 141,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 142,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUpdate"
            }
          },
          {
            "id": 96,
            "name": "forceUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 487,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 97,
                "name": "forceUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 98,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 99,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 487,
                            "character": 31
                          }
                        ],
                        "signatures": [
                          {
                            "id": 100,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.forceUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.forceUpdate"
            }
          },
          {
            "id": 72,
            "name": "getContainerStyle",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 107,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L107"
              }
            ],
            "signatures": [
              {
                "id": 73,
                "name": "getContainerStyle",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "CSSProperties",
                  "qualifiedName": "React.CSSProperties",
                  "package": "@types/react"
                }
              }
            ]
          },
          {
            "id": 70,
            "name": "getProperty",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 95,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L95"
              }
            ],
            "signatures": [
              {
                "id": 71,
                "name": "getProperty",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "width"
                    },
                    {
                      "type": "literal",
                      "value": "height"
                    }
                  ]
                }
              }
            ]
          },
          {
            "id": 120,
            "name": "getSnapshotBeforeUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 652,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 121,
                "name": "getSnapshotBeforeUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Runs before React applies the result of "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 122,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 26,
                          "name": "ExpanderProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 123,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 124,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.getSnapshotBeforeUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.getSnapshotBeforeUpdate"
            }
          },
          {
            "id": 68,
            "name": "isOpen",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 91,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L91"
              }
            ],
            "signatures": [
              {
                "id": 69,
                "name": "isOpen",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ]
          },
          {
            "id": 74,
            "name": "onRef",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 115,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L115"
              }
            ],
            "signatures": [
              {
                "id": 75,
                "name": "onRef",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 76,
                    "name": "ref",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLDivElement",
                      "qualifiedName": "HTMLDivElement",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 77,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 120,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L120"
              }
            ],
            "signatures": [
              {
                "id": 78,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.render"
            }
          },
          {
            "id": 61,
            "name": "setOpen",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 60,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L60"
              }
            ],
            "signatures": [
              {
                "id": 62,
                "name": "setOpen",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 63,
                    "name": "open",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 80,
            "name": "setState",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 482,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 81,
                "name": "setState",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "typeParameter": [
                  {
                    "id": 82,
                    "name": "K",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 83,
                    "name": "state",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 84,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 85,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 483,
                                "character": 20
                              }
                            ],
                            "signatures": [
                              {
                                "id": 86,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {
                                  "isExternal": true
                                },
                                "parameters": [
                                  {
                                    "id": 87,
                                    "name": "prevState",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 88,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  },
                                  {
                                    "id": 89,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 26,
                                          "name": "ExpanderProps"
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 90,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                          "isExternal": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 91,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "reference",
                                          "id": 82,
                                          "name": "K",
                                          "qualifiedName": "K",
                                          "package": "@types/react"
                                        }
                                      ],
                                      "name": "Pick",
                                      "qualifiedName": "Pick",
                                      "package": "typescript"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 92,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {
                                  "isExternal": true
                                }
                              }
                            },
                            {
                              "type": "reference",
                              "id": 82,
                              "name": "K",
                              "qualifiedName": "K",
                              "package": "@types/react"
                            }
                          ],
                          "name": "Pick",
                          "qualifiedName": "Pick",
                          "package": "typescript"
                        }
                      ]
                    }
                  },
                  {
                    "id": 93,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 94,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 484,
                            "character": 23
                          }
                        ],
                        "signatures": [
                          {
                            "id": 95,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.setState"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.setState"
            }
          },
          {
            "id": 108,
            "name": "shouldComponentUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 606,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 109,
                "name": "shouldComponentUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                    },
                    {
                      "kind": "code",
                      "text": "`Component`"
                    },
                    {
                      "kind": "text",
                      "text": " always returns true.\n"
                    },
                    {
                      "kind": "code",
                      "text": "`PureComponent`"
                    },
                    {
                      "kind": "text",
                      "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "code",
                      "text": "`componentWillUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": "\nand "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": " will not be called."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 110,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 26,
                          "name": "ExpanderProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 111,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 112,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 113,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.shouldComponentUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.shouldComponentUpdate"
            }
          },
          {
            "id": 66,
            "name": "updateDimensions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Expander.tsx",
                "line": 68,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L68"
              }
            ],
            "signatures": [
              {
                "id": 67,
                "name": "updateDimensions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          }
        ],
        "groups": [
          "Classes"
        ],
        "sources": [
          {
            "fileName": "src/components/Expander.tsx",
            "line": 40,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L40"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 26,
                "name": "ExpanderProps"
              }
            ],
            "name": "Component",
            "qualifiedName": "React.Component",
            "package": "@types/react"
          }
        ]
      },
      {
        "id": 26,
        "name": "ExpanderProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Expander.tsx",
            "line": 8,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L8"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reflection",
              "declaration": {
                "id": 27,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 28,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 9,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L9"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 43,
                    "name": "contents",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "If true, the trigger is rendered outside the Expander container"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 28,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L28"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 31,
                    "name": "defaultOpen",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 13,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L13"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 44,
                    "name": "fitContent",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "If true, the container fits its content size"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 30,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L30"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 42,
                    "name": "iconPosition",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Arrow position"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 26,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L26"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "before"
                        },
                        {
                          "type": "literal",
                          "value": "after"
                        },
                        {
                          "type": "literal",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "id": 40,
                    "name": "label",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "The label for the default button trigger element (only if "
                        },
                        {
                          "kind": "code",
                          "text": "`trigger`"
                        },
                        {
                          "kind": "text",
                          "text": " is not set)"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 23,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L23"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "React.ReactNode",
                      "qualifiedName": "React.ReactNode",
                      "package": "@types/react"
                    }
                  },
                  {
                    "id": 45,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 32,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L32"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 46,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Expander.tsx",
                            "line": 32,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L32"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 47,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Called when the open state changes"
                                }
                              ]
                            },
                            "parameters": [
                              {
                                "id": 48,
                                "name": "open",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 30,
                    "name": "open",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Expanded state"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 12,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L12"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 29,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 10,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L10"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 41,
                    "name": "transition",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 24,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L24"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "horizontal"
                        },
                        {
                          "type": "literal",
                          "value": "vertical"
                        }
                      ]
                    }
                  },
                  {
                    "id": 32,
                    "name": "trigger",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "The element that triggers toggling the expander. If not set, a default unstyled\nbutton will be displayed. If it's a render function, it received an argument: ({\ntoggle: Fn })"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Expander.tsx",
                        "line": 19,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L19"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "React.ReactElement",
                          "qualifiedName": "React.ReactElement",
                          "package": "@types/react"
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 33,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Expander.tsx",
                                "line": 21,
                                "character": 7,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L21"
                              }
                            ],
                            "signatures": [
                              {
                                "id": 34,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 35,
                                    "name": "param",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 36,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 37,
                                            "name": "toggle",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/components/Expander.tsx",
                                                "line": 21,
                                                "character": 17,
                                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L21"
                                              }
                                            ],
                                            "type": {
                                              "type": "reflection",
                                              "declaration": {
                                                "id": 38,
                                                "name": "__type",
                                                "kind": 65536,
                                                "kindString": "Type literal",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/components/Expander.tsx",
                                                    "line": 21,
                                                    "character": 25,
                                                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L21"
                                                  }
                                                ],
                                                "signatures": [
                                                  {
                                                    "id": 39,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {},
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "void"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "children": [
                                              37
                                            ]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/components/Expander.tsx",
                                            "line": 21,
                                            "character": 15,
                                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L21"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "name": "React.ReactElement",
                                  "qualifiedName": "React.ReactElement",
                                  "package": "@types/react"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      28,
                      43,
                      31,
                      44,
                      42,
                      40,
                      45,
                      30,
                      29,
                      41,
                      32
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Expander.tsx",
                    "line": 8,
                    "character": 52,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Expander.tsx#L8"
                  }
                ]
              }
            }
          ],
          "name": "React.PropsWithChildren",
          "qualifiedName": "React.PropsWithChildren",
          "package": "@types/react"
        }
      }
    ],
    "Frame": [
      {
        "id": 17,
        "name": "Frame",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 18,
            "name": "defaultProps",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Frame.tsx",
                "line": 62,
                "character": 6,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L62"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 19,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 20,
                    "name": "border",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Frame.tsx",
                        "line": 24,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L24"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "true"
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      20
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Frame.tsx",
                    "line": 23,
                    "character": 21,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L23"
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "Frame.tsx",
            "line": 27,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L27"
          },
          {
            "fileName": "Frame.tsx",
            "line": 62,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L62"
          }
        ]
      },
      {
        "id": 21,
        "name": "FrameProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Frame.tsx",
            "line": 5,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L5"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 22,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 25,
                    "name": "background",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "The background color"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Frame.tsx",
                        "line": 12,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L12"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "low"
                        },
                        {
                          "type": "literal",
                          "value": "default"
                        },
                        {
                          "type": "literal",
                          "value": "medium"
                        },
                        {
                          "type": "literal",
                          "value": "high"
                        }
                      ]
                    }
                  },
                  {
                    "id": 28,
                    "name": "border",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "If true, shows a border"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Frame.tsx",
                        "line": 18,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 23,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Frame.tsx",
                        "line": 8,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L8"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 26,
                    "name": "inline",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "If true, is displayed as an inline element"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Frame.tsx",
                        "line": 14,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L14"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 24,
                    "name": "label",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "The label of the frame (using <fieldset>/<legend>)"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Frame.tsx",
                        "line": 10,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L10"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "React.ReactNode",
                      "qualifiedName": "React.ReactNode",
                      "package": "@types/react"
                    }
                  },
                  {
                    "id": 29,
                    "name": "padded",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Frame.tsx",
                        "line": 19,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L19"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 27,
                    "name": "scrollable",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "If true, is scrollable"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "Frame.tsx",
                        "line": 16,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L16"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      25,
                      28,
                      23,
                      26,
                      24,
                      29,
                      27
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Frame.tsx",
                    "line": 7,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L7"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 14,
        "name": "Frame",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Frame.tsx",
            "line": 27,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L27"
          },
          {
            "fileName": "Frame.tsx",
            "line": 62,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Frame.tsx#L62"
          }
        ],
        "signatures": [
          {
            "id": 15,
            "name": "Frame",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 16,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 21,
                  "name": "FrameProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "HeaderBar": [
      {
        "id": 43,
        "name": "HeaderBar",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 48,
            "name": "Controls",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/HeaderBar.tsx",
                "line": 59,
                "character": 10,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L59"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 49,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/HeaderBar.tsx",
                    "line": 50,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L50"
                  }
                ],
                "signatures": [
                  {
                    "id": 50,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 51,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reflection",
                          "declaration": {
                            "id": 52,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "children": [
                              {
                                "id": 53,
                                "name": "children",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {
                                  "isExternal": true,
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "node_modules/@types/react/index.d.ts",
                                    "line": 799,
                                    "character": 48
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "name": "ReactNode",
                                  "qualifiedName": "React.ReactNode",
                                  "package": "@types/react"
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "children": [
                                  53
                                ]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 799,
                                "character": 46
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 44,
            "name": "Title",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/HeaderBar.tsx",
                "line": 58,
                "character": 10,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L58"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 45,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/HeaderBar.tsx",
                    "line": 35,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L35"
                  }
                ],
                "signatures": [
                  {
                    "id": 46,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 47,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 65,
                          "name": "HeaderBarTitleProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 14,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L14"
          },
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 58,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L58"
          },
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 59,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L59"
          }
        ]
      },
      {
        "id": 62,
        "name": "HeaderBarProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 7,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L7"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 63,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 64,
                    "name": "titlebar",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/HeaderBar.tsx",
                        "line": 10,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L10"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      64
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/HeaderBar.tsx",
                    "line": 9,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L9"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 65,
        "name": "HeaderBarTitleProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 29,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L29"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reflection",
              "declaration": {
                "id": 66,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 68,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/HeaderBar.tsx",
                        "line": 31,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L31"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 69,
                    "name": "fill",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/HeaderBar.tsx",
                        "line": 32,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L32"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 67,
                    "name": "subtitle",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/HeaderBar.tsx",
                        "line": 30,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L30"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      68,
                      69,
                      67
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/HeaderBar.tsx",
                    "line": 29,
                    "character": 58,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L29"
                  }
                ]
              }
            }
          ],
          "name": "React.PropsWithChildren",
          "qualifiedName": "React.PropsWithChildren",
          "package": "@types/react"
        }
      },
      {
        "id": 57,
        "name": "Controls",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 50,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L50"
          }
        ],
        "signatures": [
          {
            "id": 58,
            "name": "Controls",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 59,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 60,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 61,
                        "name": "children",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 799,
                            "character": 48
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "ReactNode",
                          "qualifiedName": "React.ReactNode",
                          "package": "@types/react"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          61
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "node_modules/@types/react/index.d.ts",
                        "line": 799,
                        "character": 46
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 40,
        "name": "HeaderBar",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 14,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L14"
          },
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 58,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L58"
          },
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 59,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L59"
          }
        ],
        "signatures": [
          {
            "id": 41,
            "name": "HeaderBar",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 42,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 62,
                  "name": "HeaderBarProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 54,
        "name": "Title",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "src/components/HeaderBar.tsx",
            "line": 35,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/HeaderBar.tsx#L35"
          }
        ],
        "signatures": [
          {
            "id": 55,
            "name": "Title",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 56,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 65,
                  "name": "HeaderBarTitleProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Heading": [
      {
        "id": 138,
        "name": "Heading",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 139,
            "name": "defaultProps",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Heading.tsx",
                "line": 47,
                "character": 8,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L47"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 140,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 142,
                    "name": "anchor",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Heading.tsx",
                        "line": 18,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "true"
                  },
                  {
                    "id": 141,
                    "name": "as",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Heading.tsx",
                        "line": 17,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"h1\""
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      142,
                      141
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Heading.tsx",
                    "line": 16,
                    "character": 21,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L16"
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "Heading.tsx",
            "line": 21,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L21"
          },
          {
            "fileName": "Heading.tsx",
            "line": 47,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L47"
          }
        ]
      },
      {
        "id": 143,
        "name": "HeadingProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Heading.tsx",
            "line": 6,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L6"
          }
        ],
        "typeParameters": [
          {
            "id": 149,
            "name": "A",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "typeOperator",
              "operator": "keyof",
              "target": {
                "type": "reference",
                "name": "JSX.IntrinsicElements",
                "qualifiedName": "global.JSX.IntrinsicElements",
                "package": "@types/react"
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 149,
              "name": "A"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 144,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 148,
                    "name": "anchor",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Heading.tsx",
                        "line": 12,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L12"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 145,
                    "name": "as",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Heading.tsx",
                        "line": 9,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L9"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 149,
                      "name": "A"
                    }
                  },
                  {
                    "id": 146,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Heading.tsx",
                        "line": 10,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L10"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 147,
                    "name": "weight",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Heading.tsx",
                        "line": 11,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L11"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": 100
                        },
                        {
                          "type": "literal",
                          "value": 300
                        },
                        {
                          "type": "literal",
                          "value": 400
                        },
                        {
                          "type": "literal",
                          "value": 700
                        },
                        {
                          "type": "literal",
                          "value": 900
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      148,
                      145,
                      146,
                      147
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Heading.tsx",
                    "line": 8,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L8"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 134,
        "name": "Heading",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Heading.tsx",
            "line": 21,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L21"
          },
          {
            "fileName": "Heading.tsx",
            "line": 47,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Heading.tsx#L47"
          }
        ],
        "signatures": [
          {
            "id": 135,
            "name": "Heading",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 136,
                "name": "A",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "name": "IntrinsicElements",
                    "qualifiedName": "global.JSX.IntrinsicElements",
                    "package": "@types/react"
                  }
                }
              }
            ],
            "parameters": [
              {
                "id": 137,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 143,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 136,
                      "name": "A"
                    }
                  ],
                  "name": "HeadingProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "InfoBar": [
      {
        "id": 31,
        "name": "InfoBarProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "InfoBar.tsx",
            "line": 9,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L9"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 32,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 35,
                    "name": "activatable",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InfoBar.tsx",
                        "line": 14,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L14"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 33,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InfoBar.tsx",
                        "line": 12,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L12"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 34,
                    "name": "closable",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InfoBar.tsx",
                        "line": 13,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L13"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 40,
                    "name": "close",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InfoBar.tsx",
                        "line": 19,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L19"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 39,
                    "name": "danger",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InfoBar.tsx",
                        "line": 18,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 36,
                    "name": "info",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InfoBar.tsx",
                        "line": 15,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L15"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 41,
                    "name": "onClose",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InfoBar.tsx",
                        "line": 20,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L20"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 42,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "InfoBar.tsx",
                            "line": 20,
                            "character": 14,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L20"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 43,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 37,
                    "name": "success",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InfoBar.tsx",
                        "line": 16,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L16"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 38,
                    "name": "warning",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InfoBar.tsx",
                        "line": 17,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      35,
                      33,
                      34,
                      40,
                      39,
                      36,
                      41,
                      37,
                      38
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "InfoBar.tsx",
                    "line": 11,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L11"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 28,
        "name": "InfoBar",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "InfoBar.tsx",
            "line": 24,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InfoBar.tsx#L24"
          }
        ],
        "signatures": [
          {
            "id": 29,
            "name": "InfoBar",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 30,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 31,
                  "name": "InfoBarProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Input": [
      {
        "id": 139,
        "name": "GroupProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Input.tsx",
            "line": 182,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L182"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reflection",
              "declaration": {
                "id": 140,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 141,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 183,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L183"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      141
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Input.tsx",
                    "line": 182,
                    "character": 49,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L182"
                  }
                ]
              }
            }
          ],
          "name": "React.PropsWithChildren",
          "qualifiedName": "React.PropsWithChildren",
          "package": "@types/react"
        }
      },
      {
        "id": 111,
        "name": "InputProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Input.tsx",
            "line": 14,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L14"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "input"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 112,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 127,
                    "name": "allowClear",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Show a button to clear the input value"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 45,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L45"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 116,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 21,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L21"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 115,
                    "name": "defaultValue",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 20,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L20"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 122,
                    "name": "disabled",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Disable the input"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 32,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L32"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 124,
                    "name": "error",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Error style input"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 36,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L36"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 123,
                    "name": "flat",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Flat style input"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 34,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L34"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 119,
                    "name": "icon",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Icon name or node (left)"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 27,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L27"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "AdwaitaIcon"
                    }
                  },
                  {
                    "id": 120,
                    "name": "iconAfter",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Icon name or node (right)"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 29,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L29"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "AdwaitaIcon"
                    }
                  },
                  {
                    "id": 118,
                    "name": "loading",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Shows a loading indicator"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 25,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L25"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 132,
                    "name": "onAccept",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 49,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L49"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 133,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Input.tsx",
                            "line": 49,
                            "character": 15,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L49"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 134,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Called when Enter is pressed (prevents default behavior)"
                                }
                              ]
                            },
                            "parameters": [
                              {
                                "id": 135,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 128,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 47,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L47"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 129,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Input.tsx",
                            "line": 47,
                            "character": 15,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L47"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 130,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Called when the input value changes, with the new value"
                                }
                              ]
                            },
                            "parameters": [
                              {
                                "id": 131,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 136,
                    "name": "onClickIconAfter",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 51,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L51"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 137,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Input.tsx",
                            "line": 51,
                            "character": 23,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L51"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 138,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Called when the "
                                },
                                {
                                  "kind": "code",
                                  "text": "`iconAfter`"
                                },
                                {
                                  "kind": "text",
                                  "text": " is clicked"
                                }
                              ]
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 121,
                    "name": "placeholder",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 30,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L30"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 126,
                    "name": "progress",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Show a progress bar of "
                        },
                        {
                          "kind": "code",
                          "text": "`progress`"
                        },
                        {
                          "kind": "text",
                          "text": " percent size if it's a number, or an\nundeterminate (loading) bar if "
                        },
                        {
                          "kind": "code",
                          "text": "`true`"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 43,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L43"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  },
                  {
                    "id": 117,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Size of the input"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 23,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L23"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "mini"
                        },
                        {
                          "type": "literal",
                          "value": "small"
                        },
                        {
                          "type": "literal",
                          "value": "medium"
                        },
                        {
                          "type": "literal",
                          "value": "large"
                        },
                        {
                          "type": "literal",
                          "value": "huge"
                        },
                        {
                          "type": "literal",
                          "value": "mega"
                        }
                      ]
                    }
                  },
                  {
                    "id": 113,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "The HTML input type"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 18,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 114,
                    "name": "value",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 19,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L19"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 125,
                    "name": "warning",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Warning style input"
                        }
                      ]
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Input.tsx",
                        "line": 38,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L38"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      127,
                      116,
                      115,
                      122,
                      124,
                      123,
                      119,
                      120,
                      118,
                      132,
                      128,
                      136,
                      121,
                      126,
                      117,
                      113,
                      114,
                      125
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Input.tsx",
                    "line": 16,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L16"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 142,
        "name": "Group",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "src/components/Input.tsx",
            "line": 186,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L186"
          }
        ],
        "signatures": [
          {
            "id": 143,
            "name": "Group",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "**NOTE**: Exotic components are not callable."
                }
              ]
            },
            "parameters": [
              {
                "id": 144,
                "name": "props",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 145,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 146,
                            "name": "className",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 183,
                                "character": 2,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L183"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              146
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/components/Input.tsx",
                            "line": 182,
                            "character": 49,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L182"
                          }
                        ]
                      }
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 147,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 148,
                            "name": "children",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isExternal": true,
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 799,
                                "character": 48
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "ReactNode",
                              "qualifiedName": "React.ReactNode",
                              "package": "@types/react"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              148
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 799,
                            "character": 46
                          }
                        ]
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLDivElement",
                          "qualifiedName": "HTMLDivElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "RefAttributes",
                      "qualifiedName": "React.RefAttributes",
                      "package": "@types/react"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ],
                          "name": "JSXElementConstructor",
                          "qualifiedName": "React.JSXElementConstructor",
                          "package": "@types/react"
                        }
                      ]
                    }
                  ],
                  "name": "ReactElement",
                  "qualifiedName": "React.ReactElement",
                  "package": "@types/react"
                }
              ]
            }
          }
        ]
      },
      {
        "id": 149,
        "name": "Input",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "src/components/Input.tsx",
            "line": 199,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L199"
          }
        ],
        "signatures": [
          {
            "id": 150,
            "name": "Input",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "**NOTE**: Exotic components are not callable."
                }
              ]
            },
            "parameters": [
              {
                "id": 151,
                "name": "props",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 152,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 167,
                            "name": "allowClear",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Show a button to clear the input value"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 45,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L45"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 156,
                            "name": "className",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 21,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L21"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 155,
                            "name": "defaultValue",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 20,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L20"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 162,
                            "name": "disabled",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Disable the input"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 32,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L32"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 164,
                            "name": "error",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Error style input"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 36,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L36"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 163,
                            "name": "flat",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Flat style input"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 34,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L34"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 159,
                            "name": "icon",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Icon name or node (left)"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 27,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L27"
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "AdwaitaIcon"
                            }
                          },
                          {
                            "id": 160,
                            "name": "iconAfter",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Icon name or node (right)"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 29,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L29"
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "AdwaitaIcon"
                            }
                          },
                          {
                            "id": 158,
                            "name": "loading",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Shows a loading indicator"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 25,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L25"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 172,
                            "name": "onAccept",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 49,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L49"
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 173,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/components/Input.tsx",
                                    "line": 49,
                                    "character": 15,
                                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L49"
                                  }
                                ],
                                "signatures": [
                                  {
                                    "id": 174,
                                    "name": "__type",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "comment": {
                                      "summary": [
                                        {
                                          "kind": "text",
                                          "text": "Called when Enter is pressed (prevents default behavior)"
                                        }
                                      ]
                                    },
                                    "parameters": [
                                      {
                                        "id": 175,
                                        "name": "value",
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "flags": {},
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "void"
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 168,
                            "name": "onChange",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 47,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L47"
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 169,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/components/Input.tsx",
                                    "line": 47,
                                    "character": 15,
                                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L47"
                                  }
                                ],
                                "signatures": [
                                  {
                                    "id": 170,
                                    "name": "__type",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "comment": {
                                      "summary": [
                                        {
                                          "kind": "text",
                                          "text": "Called when the input value changes, with the new value"
                                        }
                                      ]
                                    },
                                    "parameters": [
                                      {
                                        "id": 171,
                                        "name": "value",
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "flags": {},
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "void"
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 176,
                            "name": "onClickIconAfter",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 51,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L51"
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 177,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/components/Input.tsx",
                                    "line": 51,
                                    "character": 23,
                                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L51"
                                  }
                                ],
                                "signatures": [
                                  {
                                    "id": 178,
                                    "name": "__type",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "comment": {
                                      "summary": [
                                        {
                                          "kind": "text",
                                          "text": "Called when the "
                                        },
                                        {
                                          "kind": "code",
                                          "text": "`iconAfter`"
                                        },
                                        {
                                          "kind": "text",
                                          "text": " is clicked"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "void"
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 161,
                            "name": "placeholder",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 30,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L30"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 166,
                            "name": "progress",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Show a progress bar of "
                                },
                                {
                                  "kind": "code",
                                  "text": "`progress`"
                                },
                                {
                                  "kind": "text",
                                  "text": " percent size if it's a number, or an\nundeterminate (loading) bar if "
                                },
                                {
                                  "kind": "code",
                                  "text": "`true`"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 43,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L43"
                              }
                            ],
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              ]
                            }
                          },
                          {
                            "id": 157,
                            "name": "size",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Size of the input"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 23,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L23"
                              }
                            ],
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "literal",
                                  "value": "small"
                                },
                                {
                                  "type": "literal",
                                  "value": "mini"
                                },
                                {
                                  "type": "literal",
                                  "value": "medium"
                                },
                                {
                                  "type": "literal",
                                  "value": "large"
                                },
                                {
                                  "type": "literal",
                                  "value": "huge"
                                },
                                {
                                  "type": "literal",
                                  "value": "mega"
                                }
                              ]
                            }
                          },
                          {
                            "id": 153,
                            "name": "type",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "The HTML input type"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 18,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L18"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 154,
                            "name": "value",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 19,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L19"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 165,
                            "name": "warning",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "summary": [
                                {
                                  "kind": "text",
                                  "text": "Warning style input"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/components/Input.tsx",
                                "line": 38,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L38"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              167,
                              156,
                              155,
                              162,
                              164,
                              163,
                              159,
                              160,
                              158,
                              172,
                              168,
                              176,
                              161,
                              166,
                              157,
                              153,
                              154,
                              165
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/components/Input.tsx",
                            "line": 16,
                            "character": 2,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Input.tsx#L16"
                          }
                        ]
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "HTMLInputElement",
                                  "qualifiedName": "HTMLInputElement",
                                  "package": "typescript"
                                }
                              ],
                              "name": "InputHTMLAttributes",
                              "qualifiedName": "React.InputHTMLAttributes",
                              "package": "@types/react"
                            },
                            {
                              "type": "reference",
                              "name": "HTMLInputElement",
                              "qualifiedName": "HTMLInputElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DetailedHTMLProps",
                          "qualifiedName": "React.DetailedHTMLProps",
                          "package": "@types/react"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "progress"
                            },
                            {
                              "type": "literal",
                              "value": "ref"
                            },
                            {
                              "type": "literal",
                              "value": "defaultValue"
                            },
                            {
                              "type": "literal",
                              "value": "className"
                            },
                            {
                              "type": "literal",
                              "value": "placeholder"
                            },
                            {
                              "type": "literal",
                              "value": "onChange"
                            },
                            {
                              "type": "literal",
                              "value": "disabled"
                            },
                            {
                              "type": "literal",
                              "value": "type"
                            },
                            {
                              "type": "literal",
                              "value": "value"
                            },
                            {
                              "type": "literal",
                              "value": "size"
                            },
                            {
                              "type": "literal",
                              "value": "icon"
                            },
                            {
                              "type": "literal",
                              "value": "loading"
                            },
                            {
                              "type": "literal",
                              "value": "flat"
                            },
                            {
                              "type": "literal",
                              "value": "warning"
                            },
                            {
                              "type": "literal",
                              "value": "iconAfter"
                            },
                            {
                              "type": "literal",
                              "value": "error"
                            },
                            {
                              "type": "literal",
                              "value": "allowClear"
                            },
                            {
                              "type": "literal",
                              "value": "onAccept"
                            },
                            {
                              "type": "literal",
                              "value": "onClickIconAfter"
                            }
                          ]
                        }
                      ],
                      "name": "Omit",
                      "qualifiedName": "Omit",
                      "package": "typescript"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLDivElement",
                          "qualifiedName": "HTMLDivElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "RefAttributes",
                      "qualifiedName": "React.RefAttributes",
                      "package": "@types/react"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ],
                          "name": "JSXElementConstructor",
                          "qualifiedName": "React.JSXElementConstructor",
                          "package": "@types/react"
                        }
                      ]
                    }
                  ],
                  "name": "ReactElement",
                  "qualifiedName": "React.ReactElement",
                  "package": "@types/react"
                }
              ]
            }
          }
        ]
      }
    ],
    "InputNumber": [
      {
        "id": 227,
        "name": "InputNumber",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 228,
            "name": "defaultProps",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "InputNumber.tsx",
                "line": 90,
                "character": 12,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L90"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 229,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 231,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 92,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L92"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 232,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "InputNumber.tsx",
                            "line": 6,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L6"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 233,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 230,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 91,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L91"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"medium\""
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      231,
                      230
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "InputNumber.tsx",
                    "line": 90,
                    "character": 27,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L90"
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "InputNumber.tsx",
            "line": 29,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L29"
          },
          {
            "fileName": "InputNumber.tsx",
            "line": 90,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L90"
          }
        ]
      },
      {
        "id": 234,
        "name": "InputNumberProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "InputNumber.tsx",
            "line": 13,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L13"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "input"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 235,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 236,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 16,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L16"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 241,
                    "name": "defaultValue",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 21,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L21"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 239,
                    "name": "disabled",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 19,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L19"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 248,
                    "name": "max",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 25,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L25"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 247,
                    "name": "min",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 24,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L24"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 242,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 22,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L22"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 243,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "InputNumber.tsx",
                            "line": 22,
                            "character": 15,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L22"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 244,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 245,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 237,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 17,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "mini"
                        },
                        {
                          "type": "literal",
                          "value": "small"
                        },
                        {
                          "type": "literal",
                          "value": "medium"
                        },
                        {
                          "type": "literal",
                          "value": "large"
                        },
                        {
                          "type": "literal",
                          "value": "huge"
                        },
                        {
                          "type": "literal",
                          "value": "mega"
                        }
                      ]
                    }
                  },
                  {
                    "id": 246,
                    "name": "step",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 23,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L23"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 240,
                    "name": "value",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 20,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L20"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 238,
                    "name": "vertical",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "InputNumber.tsx",
                        "line": 18,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      236,
                      241,
                      239,
                      248,
                      247,
                      242,
                      237,
                      246,
                      240,
                      238
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "InputNumber.tsx",
                    "line": 15,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L15"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 224,
        "name": "InputNumber",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "InputNumber.tsx",
            "line": 29,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L29"
          },
          {
            "fileName": "InputNumber.tsx",
            "line": 90,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/InputNumber.tsx#L90"
          }
        ],
        "signatures": [
          {
            "id": 225,
            "name": "InputNumber",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 226,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 234,
                  "name": "InputNumberProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Label": [
      {
        "id": 292,
        "name": "LabelProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Label.tsx",
            "line": 5,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L5"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "label"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 293,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 295,
                    "name": "align",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 9,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L9"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "left"
                        },
                        {
                          "type": "literal",
                          "value": "center"
                        },
                        {
                          "type": "literal",
                          "value": "right"
                        }
                      ]
                    }
                  },
                  {
                    "id": 306,
                    "name": "bold",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 20,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L20"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 304,
                    "name": "danger",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 18,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 299,
                    "name": "disabled",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 13,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L13"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 297,
                    "name": "ellipsis",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 11,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L11"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 296,
                    "name": "fill",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 10,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L10"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        {
                          "type": "literal",
                          "value": "width"
                        },
                        {
                          "type": "literal",
                          "value": "height"
                        }
                      ]
                    }
                  },
                  {
                    "id": 301,
                    "name": "info",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 15,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L15"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 305,
                    "name": "italic",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 19,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L19"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 300,
                    "name": "muted",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 14,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L14"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 307,
                    "name": "noSelect",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 21,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L21"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 294,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 8,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L8"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "mini"
                        },
                        {
                          "type": "literal",
                          "value": "small"
                        },
                        {
                          "type": "literal",
                          "value": "medium"
                        },
                        {
                          "type": "literal",
                          "value": "large"
                        },
                        {
                          "type": "literal",
                          "value": "huge"
                        },
                        {
                          "type": "literal",
                          "value": "mega"
                        }
                      ]
                    }
                  },
                  {
                    "id": 302,
                    "name": "success",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 16,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L16"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 298,
                    "name": "title",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 12,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L12"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 303,
                    "name": "warning",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 17,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      295,
                      306,
                      304,
                      299,
                      297,
                      296,
                      301,
                      305,
                      300,
                      307,
                      294,
                      302,
                      298,
                      303
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Label.tsx",
                    "line": 7,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L7"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 31,
        "name": "Label",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "src/components/Label.tsx",
            "line": 25,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L25"
          }
        ],
        "signatures": [
          {
            "id": 32,
            "name": "Label",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 33,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 292,
                  "name": "LabelProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 34,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 57,
                        "name": "about",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1876,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 44,
                        "name": "accessKey",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1852,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 79,
                        "name": "aria-activedescendant",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1586,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 80,
                        "name": "aria-atomic",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1588,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 81,
                        "name": "aria-autocomplete",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1593,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "inline"
                            },
                            {
                              "type": "literal",
                              "value": "list"
                            },
                            {
                              "type": "literal",
                              "value": "none"
                            },
                            {
                              "type": "literal",
                              "value": "both"
                            }
                          ]
                        }
                      },
                      {
                        "id": 82,
                        "name": "aria-busy",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1595,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 83,
                        "name": "aria-checked",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-pressed"
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                },
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-selected."
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1600,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            {
                              "type": "literal",
                              "value": "true"
                            },
                            {
                              "type": "literal",
                              "value": "false"
                            },
                            {
                              "type": "literal",
                              "value": "mixed"
                            }
                          ]
                        }
                      },
                      {
                        "id": 84,
                        "name": "aria-colcount",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the total number of columns in a table, grid, or treegrid."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-colindex."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1605,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 85,
                        "name": "aria-colindex",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-colcount"
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                },
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-colspan."
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1610,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 86,
                        "name": "aria-colspan",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-colindex"
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                },
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-rowspan."
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1615,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 87,
                        "name": "aria-controls",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-owns."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1620,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 88,
                        "name": "aria-current",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates the element that represents the current item within a container or set of related elements."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1622,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            {
                              "type": "literal",
                              "value": "time"
                            },
                            {
                              "type": "literal",
                              "value": "true"
                            },
                            {
                              "type": "literal",
                              "value": "false"
                            },
                            {
                              "type": "literal",
                              "value": "page"
                            },
                            {
                              "type": "literal",
                              "value": "step"
                            },
                            {
                              "type": "literal",
                              "value": "location"
                            },
                            {
                              "type": "literal",
                              "value": "date"
                            }
                          ]
                        }
                      },
                      {
                        "id": 89,
                        "name": "aria-describedby",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Identifies the element (or elements) that describes the object."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-labelledby"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1627,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 90,
                        "name": "aria-details",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Identifies the element that provides a detailed, extended description for the object."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-describedby."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1632,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 91,
                        "name": "aria-disabled",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-hidden"
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                },
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-readonly."
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1637,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 92,
                        "name": "aria-dropeffect",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@deprecated",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "in ARIA 1.1"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1642,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "link"
                            },
                            {
                              "type": "literal",
                              "value": "none"
                            },
                            {
                              "type": "literal",
                              "value": "copy"
                            },
                            {
                              "type": "literal",
                              "value": "execute"
                            },
                            {
                              "type": "literal",
                              "value": "move"
                            },
                            {
                              "type": "literal",
                              "value": "popup"
                            }
                          ]
                        }
                      },
                      {
                        "id": 93,
                        "name": "aria-errormessage",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Identifies the element that provides an error message for the object."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-invalid"
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                },
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-describedby."
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1647,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 94,
                        "name": "aria-expanded",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1649,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 95,
                        "name": "aria-flowto",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1654,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 96,
                        "name": "aria-grabbed",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@deprecated",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "in ARIA 1.1"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1659,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 97,
                        "name": "aria-haspopup",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1661,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            {
                              "type": "literal",
                              "value": "dialog"
                            },
                            {
                              "type": "literal",
                              "value": "menu"
                            },
                            {
                              "type": "literal",
                              "value": "true"
                            },
                            {
                              "type": "literal",
                              "value": "false"
                            },
                            {
                              "type": "literal",
                              "value": "grid"
                            },
                            {
                              "type": "literal",
                              "value": "listbox"
                            },
                            {
                              "type": "literal",
                              "value": "tree"
                            }
                          ]
                        }
                      },
                      {
                        "id": 98,
                        "name": "aria-hidden",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates whether the element is exposed to an accessibility API."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-disabled."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1666,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 99,
                        "name": "aria-invalid",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates the entered value does not conform to the format expected by the application."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-errormessage."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1671,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            {
                              "type": "literal",
                              "value": "true"
                            },
                            {
                              "type": "literal",
                              "value": "false"
                            },
                            {
                              "type": "literal",
                              "value": "grammar"
                            },
                            {
                              "type": "literal",
                              "value": "spelling"
                            }
                          ]
                        }
                      },
                      {
                        "id": 100,
                        "name": "aria-keyshortcuts",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1673,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 101,
                        "name": "aria-label",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines a string value that labels the current element."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-labelledby."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1678,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 102,
                        "name": "aria-labelledby",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Identifies the element (or elements) that labels the current element."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-describedby."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1683,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 103,
                        "name": "aria-level",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the hierarchical level of an element within a structure."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1685,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 104,
                        "name": "aria-live",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1687,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "off"
                            },
                            {
                              "type": "literal",
                              "value": "assertive"
                            },
                            {
                              "type": "literal",
                              "value": "polite"
                            }
                          ]
                        }
                      },
                      {
                        "id": 105,
                        "name": "aria-modal",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates whether an element is modal when displayed."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1689,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 106,
                        "name": "aria-multiline",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1691,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 107,
                        "name": "aria-multiselectable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates that the user may select more than one item from the current selectable descendants."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1693,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 108,
                        "name": "aria-orientation",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1695,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "horizontal"
                            },
                            {
                              "type": "literal",
                              "value": "vertical"
                            }
                          ]
                        }
                      },
                      {
                        "id": 109,
                        "name": "aria-owns",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-controls."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1701,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 110,
                        "name": "aria-placeholder",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1706,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 111,
                        "name": "aria-posinset",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-setsize."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1711,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 112,
                        "name": "aria-pressed",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates the current \"pressed\" state of toggle buttons."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-checked"
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                },
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-selected."
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1716,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            {
                              "type": "literal",
                              "value": "true"
                            },
                            {
                              "type": "literal",
                              "value": "false"
                            },
                            {
                              "type": "literal",
                              "value": "mixed"
                            }
                          ]
                        }
                      },
                      {
                        "id": 113,
                        "name": "aria-readonly",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates that the element is not editable, but is otherwise operable."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-disabled."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1721,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 114,
                        "name": "aria-relevant",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-atomic."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1726,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "text"
                            },
                            {
                              "type": "literal",
                              "value": "additions"
                            },
                            {
                              "type": "literal",
                              "value": "additions removals"
                            },
                            {
                              "type": "literal",
                              "value": "additions text"
                            },
                            {
                              "type": "literal",
                              "value": "all"
                            },
                            {
                              "type": "literal",
                              "value": "removals"
                            },
                            {
                              "type": "literal",
                              "value": "removals additions"
                            },
                            {
                              "type": "literal",
                              "value": "removals text"
                            },
                            {
                              "type": "literal",
                              "value": "text additions"
                            },
                            {
                              "type": "literal",
                              "value": "text removals"
                            }
                          ]
                        }
                      },
                      {
                        "id": 115,
                        "name": "aria-required",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates that user input is required on the element before a form may be submitted."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1728,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 116,
                        "name": "aria-roledescription",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines a human-readable, author-localized description for the role of an element."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1730,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 117,
                        "name": "aria-rowcount",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the total number of rows in a table, grid, or treegrid."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-rowindex."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1735,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 118,
                        "name": "aria-rowindex",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-rowcount"
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                },
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-rowspan."
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1740,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 119,
                        "name": "aria-rowspan",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-rowindex"
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                },
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-colspan."
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1745,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 120,
                        "name": "aria-selected",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates the current \"selected\" state of various widgets."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-checked"
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                },
                                {
                                  "kind": "text",
                                  "text": " - "
                                },
                                {
                                  "kind": "text",
                                  "text": "aria-pressed."
                                },
                                {
                                  "kind": "text",
                                  "text": "\n"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1750,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 121,
                        "name": "aria-setsize",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-posinset."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1755,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 122,
                        "name": "aria-sort",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1757,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "none"
                            },
                            {
                              "type": "literal",
                              "value": "ascending"
                            },
                            {
                              "type": "literal",
                              "value": "descending"
                            },
                            {
                              "type": "literal",
                              "value": "other"
                            }
                          ]
                        }
                      },
                      {
                        "id": 123,
                        "name": "aria-valuemax",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the maximum allowed value for a range widget."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1759,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 124,
                        "name": "aria-valuemin",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the minimum allowed value for a range widget."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1761,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 125,
                        "name": "aria-valuenow",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the current value for a range widget."
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "aria-valuetext."
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1766,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 126,
                        "name": "aria-valuetext",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1768,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 65,
                        "name": "autoCapitalize",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1886,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 66,
                        "name": "autoCorrect",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1887,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 67,
                        "name": "autoSave",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1888,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 291,
                        "name": "className",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Label.tsx",
                            "line": 48,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L48"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "defaultValue": "..."
                      },
                      {
                        "id": 68,
                        "name": "color",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1889,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 45,
                        "name": "contentEditable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1854,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Booleanish",
                              "qualifiedName": "Booleanish",
                              "package": "@types/react"
                            },
                            {
                              "type": "literal",
                              "value": "inherit"
                            }
                          ]
                        }
                      },
                      {
                        "id": 46,
                        "name": "contextMenu",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1855,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 127,
                        "name": "dangerouslySetInnerHTML",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1375,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reflection",
                          "declaration": {
                            "id": 128,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "children": [
                              {
                                "id": 129,
                                "name": "__html",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {
                                  "isExternal": true
                                },
                                "sources": [
                                  {
                                    "fileName": "node_modules/@types/react/index.d.ts",
                                    "line": 1376,
                                    "character": 12
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "children": [
                                  129
                                ]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 1375,
                                "character": 34
                              }
                            ]
                          }
                        }
                      },
                      {
                        "id": 58,
                        "name": "datatype",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1877,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 40,
                        "name": "defaultChecked",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1846,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 41,
                        "name": "defaultValue",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1847,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "typeOperator",
                              "operator": "readonly",
                              "target": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 36,
                        "name": "dir",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1856,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 47,
                        "name": "draggable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1857,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 37,
                        "name": "form",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 2268,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 48,
                        "name": "hidden",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1858,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 290,
                        "name": "htmlFor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 2269,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 49,
                        "name": "id",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1859,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 59,
                        "name": "inlist",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1878,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      },
                      {
                        "id": 77,
                        "name": "inputMode",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1904,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "search"
                            },
                            {
                              "type": "literal",
                              "value": "text"
                            },
                            {
                              "type": "literal",
                              "value": "none"
                            },
                            {
                              "type": "literal",
                              "value": "tel"
                            },
                            {
                              "type": "literal",
                              "value": "url"
                            },
                            {
                              "type": "literal",
                              "value": "email"
                            },
                            {
                              "type": "literal",
                              "value": "numeric"
                            },
                            {
                              "type": "literal",
                              "value": "decimal"
                            }
                          ]
                        }
                      },
                      {
                        "id": 78,
                        "name": "is",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Specify that a standard HTML element should behave like a defined custom built-in element"
                            }
                          ],
                          "blockTags": [
                            {
                              "tag": "@see",
                              "content": [
                                {
                                  "kind": "text",
                                  "text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
                                }
                              ]
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1909,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 72,
                        "name": "itemID",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1893,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 69,
                        "name": "itemProp",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1890,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 73,
                        "name": "itemRef",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1894,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 70,
                        "name": "itemScope",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1891,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 71,
                        "name": "itemType",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1892,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 39,
                        "name": "key",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 131,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "reference",
                              "name": "Key",
                              "qualifiedName": "React.Key",
                              "package": "@types/react"
                            }
                          ]
                        }
                      },
                      {
                        "id": 50,
                        "name": "lang",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1860,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 168,
                        "name": "onAbort",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1432,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 169,
                        "name": "onAbortCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1433,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 284,
                        "name": "onAnimationEnd",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1562,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "AnimationEventHandler",
                          "qualifiedName": "React.AnimationEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 285,
                        "name": "onAnimationEndCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1563,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "AnimationEventHandler",
                          "qualifiedName": "React.AnimationEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 286,
                        "name": "onAnimationIteration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1564,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "AnimationEventHandler",
                          "qualifiedName": "React.AnimationEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 287,
                        "name": "onAnimationIterationCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1565,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "AnimationEventHandler",
                          "qualifiedName": "React.AnimationEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 282,
                        "name": "onAnimationStart",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1560,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "AnimationEventHandler",
                          "qualifiedName": "React.AnimationEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 283,
                        "name": "onAnimationStartCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1561,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "AnimationEventHandler",
                          "qualifiedName": "React.AnimationEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 212,
                        "name": "onAuxClick",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1478,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 213,
                        "name": "onAuxClickCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1479,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 148,
                        "name": "onBeforeInput",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1404,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 149,
                        "name": "onBeforeInputCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1405,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 144,
                        "name": "onBlur",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1398,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FocusEventHandler",
                          "qualifiedName": "React.FocusEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 145,
                        "name": "onBlurCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1399,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FocusEventHandler",
                          "qualifiedName": "React.FocusEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 170,
                        "name": "onCanPlay",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1434,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 171,
                        "name": "onCanPlayCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1435,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 172,
                        "name": "onCanPlayThrough",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1436,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 173,
                        "name": "onCanPlayThroughCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1437,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 146,
                        "name": "onChange",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1402,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 147,
                        "name": "onChangeCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1403,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 214,
                        "name": "onClick",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1480,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 215,
                        "name": "onClickCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1481,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 136,
                        "name": "onCompositionEnd",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1388,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "CompositionEventHandler",
                          "qualifiedName": "React.CompositionEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 137,
                        "name": "onCompositionEndCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1389,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "CompositionEventHandler",
                          "qualifiedName": "React.CompositionEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 138,
                        "name": "onCompositionStart",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1390,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "CompositionEventHandler",
                          "qualifiedName": "React.CompositionEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 139,
                        "name": "onCompositionStartCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1391,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "CompositionEventHandler",
                          "qualifiedName": "React.CompositionEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 140,
                        "name": "onCompositionUpdate",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1392,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "CompositionEventHandler",
                          "qualifiedName": "React.CompositionEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 141,
                        "name": "onCompositionUpdateCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1393,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "CompositionEventHandler",
                          "qualifiedName": "React.CompositionEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 216,
                        "name": "onContextMenu",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1482,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 217,
                        "name": "onContextMenuCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1483,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 130,
                        "name": "onCopy",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1380,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ClipboardEventHandler",
                          "qualifiedName": "React.ClipboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 131,
                        "name": "onCopyCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1381,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ClipboardEventHandler",
                          "qualifiedName": "React.ClipboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 132,
                        "name": "onCut",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1382,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ClipboardEventHandler",
                          "qualifiedName": "React.ClipboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 133,
                        "name": "onCutCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1383,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ClipboardEventHandler",
                          "qualifiedName": "React.ClipboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 218,
                        "name": "onDoubleClick",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1484,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 219,
                        "name": "onDoubleClickCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1485,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 220,
                        "name": "onDrag",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1486,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 221,
                        "name": "onDragCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1487,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 222,
                        "name": "onDragEnd",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1488,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 223,
                        "name": "onDragEndCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1489,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 224,
                        "name": "onDragEnter",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1490,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 225,
                        "name": "onDragEnterCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1491,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 226,
                        "name": "onDragExit",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1492,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 227,
                        "name": "onDragExitCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1493,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 228,
                        "name": "onDragLeave",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1494,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 229,
                        "name": "onDragLeaveCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1495,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 230,
                        "name": "onDragOver",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1496,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 231,
                        "name": "onDragOverCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1497,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 232,
                        "name": "onDragStart",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1498,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 233,
                        "name": "onDragStartCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1499,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 234,
                        "name": "onDrop",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1500,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 235,
                        "name": "onDropCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1501,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DragEventHandler",
                          "qualifiedName": "React.DragEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 174,
                        "name": "onDurationChange",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1438,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 175,
                        "name": "onDurationChangeCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1439,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 176,
                        "name": "onEmptied",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1440,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 177,
                        "name": "onEmptiedCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1441,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 178,
                        "name": "onEncrypted",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1442,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 179,
                        "name": "onEncryptedCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1443,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 180,
                        "name": "onEnded",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1444,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 181,
                        "name": "onEndedCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1445,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 160,
                        "name": "onError",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1418,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 161,
                        "name": "onErrorCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1419,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 142,
                        "name": "onFocus",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1396,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FocusEventHandler",
                          "qualifiedName": "React.FocusEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 143,
                        "name": "onFocusCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1397,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FocusEventHandler",
                          "qualifiedName": "React.FocusEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 274,
                        "name": "onGotPointerCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1546,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 275,
                        "name": "onGotPointerCaptureCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1547,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 150,
                        "name": "onInput",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1406,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 151,
                        "name": "onInputCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1407,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 156,
                        "name": "onInvalid",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1412,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 157,
                        "name": "onInvalidCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1413,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 162,
                        "name": "onKeyDown",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1422,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "KeyboardEventHandler",
                          "qualifiedName": "React.KeyboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 163,
                        "name": "onKeyDownCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1423,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "KeyboardEventHandler",
                          "qualifiedName": "React.KeyboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 164,
                        "name": "onKeyPress",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [],
                          "blockTags": [
                            {
                              "tag": "@deprecated",
                              "content": []
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1425,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "KeyboardEventHandler",
                          "qualifiedName": "React.KeyboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 165,
                        "name": "onKeyPressCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "comment": {
                          "summary": [],
                          "blockTags": [
                            {
                              "tag": "@deprecated",
                              "content": []
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1427,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "KeyboardEventHandler",
                          "qualifiedName": "React.KeyboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 166,
                        "name": "onKeyUp",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1428,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "KeyboardEventHandler",
                          "qualifiedName": "React.KeyboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 167,
                        "name": "onKeyUpCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1429,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "KeyboardEventHandler",
                          "qualifiedName": "React.KeyboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 158,
                        "name": "onLoad",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1416,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 159,
                        "name": "onLoadCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1417,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 186,
                        "name": "onLoadStart",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1450,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 187,
                        "name": "onLoadStartCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1451,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 182,
                        "name": "onLoadedData",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1446,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 183,
                        "name": "onLoadedDataCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1447,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 184,
                        "name": "onLoadedMetadata",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1448,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 185,
                        "name": "onLoadedMetadataCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1449,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 276,
                        "name": "onLostPointerCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1548,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 277,
                        "name": "onLostPointerCaptureCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1549,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 236,
                        "name": "onMouseDown",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1502,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 237,
                        "name": "onMouseDownCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1503,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 238,
                        "name": "onMouseEnter",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1504,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 239,
                        "name": "onMouseLeave",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1505,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 240,
                        "name": "onMouseMove",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1506,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 241,
                        "name": "onMouseMoveCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1507,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 242,
                        "name": "onMouseOut",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1508,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 243,
                        "name": "onMouseOutCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1509,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 244,
                        "name": "onMouseOver",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1510,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 245,
                        "name": "onMouseOverCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1511,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 246,
                        "name": "onMouseUp",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1512,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 247,
                        "name": "onMouseUpCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1513,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "MouseEventHandler",
                          "qualifiedName": "React.MouseEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 134,
                        "name": "onPaste",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1384,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ClipboardEventHandler",
                          "qualifiedName": "React.ClipboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 135,
                        "name": "onPasteCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1385,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ClipboardEventHandler",
                          "qualifiedName": "React.ClipboardEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 188,
                        "name": "onPause",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1452,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 189,
                        "name": "onPauseCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1453,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 190,
                        "name": "onPlay",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1454,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 191,
                        "name": "onPlayCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1455,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 192,
                        "name": "onPlaying",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1456,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 193,
                        "name": "onPlayingCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1457,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 264,
                        "name": "onPointerCancel",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1536,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 265,
                        "name": "onPointerCancelCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1537,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 258,
                        "name": "onPointerDown",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1530,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 259,
                        "name": "onPointerDownCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1531,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 266,
                        "name": "onPointerEnter",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1538,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 267,
                        "name": "onPointerEnterCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1539,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 268,
                        "name": "onPointerLeave",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1540,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 269,
                        "name": "onPointerLeaveCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1541,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 260,
                        "name": "onPointerMove",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1532,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 261,
                        "name": "onPointerMoveCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1533,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 272,
                        "name": "onPointerOut",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1544,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 273,
                        "name": "onPointerOutCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1545,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 270,
                        "name": "onPointerOver",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1542,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 271,
                        "name": "onPointerOverCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1543,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 262,
                        "name": "onPointerUp",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1534,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 263,
                        "name": "onPointerUpCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1535,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "PointerEventHandler",
                          "qualifiedName": "React.PointerEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 194,
                        "name": "onProgress",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1458,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 195,
                        "name": "onProgressCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1459,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 196,
                        "name": "onRateChange",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1460,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 197,
                        "name": "onRateChangeCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1461,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 152,
                        "name": "onReset",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1408,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 153,
                        "name": "onResetCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1409,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 278,
                        "name": "onScroll",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1552,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "UIEventHandler",
                          "qualifiedName": "React.UIEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 279,
                        "name": "onScrollCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1553,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "UIEventHandler",
                          "qualifiedName": "React.UIEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 198,
                        "name": "onSeeked",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1462,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 199,
                        "name": "onSeekedCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1463,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 200,
                        "name": "onSeeking",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1464,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 201,
                        "name": "onSeekingCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1465,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 248,
                        "name": "onSelect",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1516,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 249,
                        "name": "onSelectCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1517,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 202,
                        "name": "onStalled",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1466,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 203,
                        "name": "onStalledCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1467,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 154,
                        "name": "onSubmit",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1410,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 155,
                        "name": "onSubmitCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1411,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "FormEventHandler",
                          "qualifiedName": "React.FormEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 204,
                        "name": "onSuspend",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1468,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 205,
                        "name": "onSuspendCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1469,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 206,
                        "name": "onTimeUpdate",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1470,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 207,
                        "name": "onTimeUpdateCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1471,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 250,
                        "name": "onTouchCancel",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1520,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TouchEventHandler",
                          "qualifiedName": "React.TouchEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 251,
                        "name": "onTouchCancelCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1521,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TouchEventHandler",
                          "qualifiedName": "React.TouchEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 252,
                        "name": "onTouchEnd",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1522,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TouchEventHandler",
                          "qualifiedName": "React.TouchEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 253,
                        "name": "onTouchEndCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1523,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TouchEventHandler",
                          "qualifiedName": "React.TouchEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 254,
                        "name": "onTouchMove",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1524,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TouchEventHandler",
                          "qualifiedName": "React.TouchEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 255,
                        "name": "onTouchMoveCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1525,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TouchEventHandler",
                          "qualifiedName": "React.TouchEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 256,
                        "name": "onTouchStart",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1526,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TouchEventHandler",
                          "qualifiedName": "React.TouchEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 257,
                        "name": "onTouchStartCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1527,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TouchEventHandler",
                          "qualifiedName": "React.TouchEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 288,
                        "name": "onTransitionEnd",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1568,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TransitionEventHandler",
                          "qualifiedName": "React.TransitionEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 289,
                        "name": "onTransitionEndCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1569,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "TransitionEventHandler",
                          "qualifiedName": "React.TransitionEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 208,
                        "name": "onVolumeChange",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1472,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 209,
                        "name": "onVolumeChangeCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1473,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 210,
                        "name": "onWaiting",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1474,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 211,
                        "name": "onWaitingCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1475,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "ReactEventHandler",
                          "qualifiedName": "React.ReactEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 280,
                        "name": "onWheel",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1556,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "WheelEventHandler",
                          "qualifiedName": "React.WheelEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 281,
                        "name": "onWheelCapture",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1557,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLLabelElement",
                              "qualifiedName": "HTMLLabelElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "WheelEventHandler",
                          "qualifiedName": "React.WheelEventHandler",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 51,
                        "name": "placeholder",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1861,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 60,
                        "name": "prefix",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1879,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 61,
                        "name": "property",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1880,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 55,
                        "name": "radioGroup",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1870,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 62,
                        "name": "resource",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1881,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 74,
                        "name": "results",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1895,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 56,
                        "name": "role",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1873,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "AriaRole",
                          "qualifiedName": "React.AriaRole",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 75,
                        "name": "security",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1896,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 38,
                        "name": "slot",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1862,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 52,
                        "name": "spellCheck",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1863,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Booleanish",
                          "qualifiedName": "Booleanish",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 35,
                        "name": "style",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1864,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "CSSProperties",
                          "qualifiedName": "React.CSSProperties",
                          "package": "@types/react"
                        }
                      },
                      {
                        "id": 42,
                        "name": "suppressContentEditableWarning",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1848,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 43,
                        "name": "suppressHydrationWarning",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1849,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 53,
                        "name": "tabIndex",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1865,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      },
                      {
                        "id": 54,
                        "name": "translate",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1867,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "yes"
                            },
                            {
                              "type": "literal",
                              "value": "no"
                            }
                          ]
                        }
                      },
                      {
                        "id": 63,
                        "name": "typeof",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1882,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 76,
                        "name": "unselectable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1897,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "on"
                            },
                            {
                              "type": "literal",
                              "value": "off"
                            }
                          ]
                        }
                      },
                      {
                        "id": 64,
                        "name": "vocab",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isExternal": true,
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 1883,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          57,
                          44,
                          79,
                          80,
                          81,
                          82,
                          83,
                          84,
                          85,
                          86,
                          87,
                          88,
                          89,
                          90,
                          91,
                          92,
                          93,
                          94,
                          95,
                          96,
                          97,
                          98,
                          99,
                          100,
                          101,
                          102,
                          103,
                          104,
                          105,
                          106,
                          107,
                          108,
                          109,
                          110,
                          111,
                          112,
                          113,
                          114,
                          115,
                          116,
                          117,
                          118,
                          119,
                          120,
                          121,
                          122,
                          123,
                          124,
                          125,
                          126,
                          65,
                          66,
                          67,
                          291,
                          68,
                          45,
                          46,
                          127,
                          58,
                          40,
                          41,
                          36,
                          47,
                          37,
                          48,
                          290,
                          49,
                          59,
                          77,
                          78,
                          72,
                          69,
                          73,
                          70,
                          71,
                          39,
                          50,
                          168,
                          169,
                          284,
                          285,
                          286,
                          287,
                          282,
                          283,
                          212,
                          213,
                          148,
                          149,
                          144,
                          145,
                          170,
                          171,
                          172,
                          173,
                          146,
                          147,
                          214,
                          215,
                          136,
                          137,
                          138,
                          139,
                          140,
                          141,
                          216,
                          217,
                          130,
                          131,
                          132,
                          133,
                          218,
                          219,
                          220,
                          221,
                          222,
                          223,
                          224,
                          225,
                          226,
                          227,
                          228,
                          229,
                          230,
                          231,
                          232,
                          233,
                          234,
                          235,
                          174,
                          175,
                          176,
                          177,
                          178,
                          179,
                          180,
                          181,
                          160,
                          161,
                          142,
                          143,
                          274,
                          275,
                          150,
                          151,
                          156,
                          157,
                          162,
                          163,
                          164,
                          165,
                          166,
                          167,
                          158,
                          159,
                          186,
                          187,
                          182,
                          183,
                          184,
                          185,
                          276,
                          277,
                          236,
                          237,
                          238,
                          239,
                          240,
                          241,
                          242,
                          243,
                          244,
                          245,
                          246,
                          247,
                          134,
                          135,
                          188,
                          189,
                          190,
                          191,
                          192,
                          193,
                          264,
                          265,
                          258,
                          259,
                          266,
                          267,
                          268,
                          269,
                          260,
                          261,
                          272,
                          273,
                          270,
                          271,
                          262,
                          263,
                          194,
                          195,
                          196,
                          197,
                          152,
                          153,
                          278,
                          279,
                          198,
                          199,
                          200,
                          201,
                          248,
                          249,
                          202,
                          203,
                          154,
                          155,
                          204,
                          205,
                          206,
                          207,
                          250,
                          251,
                          252,
                          253,
                          254,
                          255,
                          256,
                          257,
                          288,
                          289,
                          208,
                          209,
                          210,
                          211,
                          280,
                          281,
                          51,
                          60,
                          61,
                          55,
                          62,
                          74,
                          56,
                          75,
                          38,
                          52,
                          35,
                          42,
                          43,
                          53,
                          54,
                          63,
                          76,
                          64
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/components/Label.tsx",
                        "line": 47,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Label.tsx#L47"
                      }
                    ]
                  }
                },
                {
                  "type": "reference",
                  "name": "HTMLElement",
                  "qualifiedName": "HTMLElement",
                  "package": "typescript"
                }
              ],
              "name": "DetailedReactHTMLElement",
              "qualifiedName": "React.DetailedReactHTMLElement",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "LevelBar": [
      {
        "id": 150,
        "name": "LevelBarProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "LevelBar.tsx",
            "line": 5,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/LevelBar.tsx#L5"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 151,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 152,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "LevelBar.tsx",
                    "line": 6,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/LevelBar.tsx#L6"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 156,
                "name": "level",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The coloration of the active segments"
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "LevelBar.tsx",
                    "line": 13,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/LevelBar.tsx#L13"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "empty"
                    },
                    {
                      "type": "literal",
                      "value": "danger"
                    },
                    {
                      "type": "literal",
                      "value": "warning"
                    },
                    {
                      "type": "literal",
                      "value": "info"
                    },
                    {
                      "type": "literal",
                      "value": "success"
                    }
                  ]
                }
              },
              {
                "id": 155,
                "name": "segments",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The number of segments"
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "LevelBar.tsx",
                    "line": 11,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/LevelBar.tsx#L11"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              },
              {
                "id": 154,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The number active of segments"
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "LevelBar.tsx",
                    "line": 9,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/LevelBar.tsx#L9"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              },
              {
                "id": 153,
                "name": "vertical",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "LevelBar.tsx",
                    "line": 7,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/LevelBar.tsx#L7"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  152,
                  156,
                  155,
                  154,
                  153
                ]
              }
            ],
            "sources": [
              {
                "fileName": "LevelBar.tsx",
                "line": 5,
                "character": 28,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/LevelBar.tsx#L5"
              }
            ]
          }
        }
      },
      {
        "id": 157,
        "name": "LevelBar",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "LevelBar.tsx",
            "line": 16,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/LevelBar.tsx#L16"
          }
        ],
        "signatures": [
          {
            "id": 158,
            "name": "LevelBar",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "**NOTE**: Exotic components are not callable."
                }
              ]
            },
            "parameters": [
              {
                "id": 159,
                "name": "props",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reference",
                      "id": 150,
                      "name": "LevelBarProps"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLSpanElement",
                          "qualifiedName": "HTMLSpanElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "RefAttributes",
                      "qualifiedName": "React.RefAttributes",
                      "package": "@types/react"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ],
                          "name": "JSXElementConstructor",
                          "qualifiedName": "React.JSXElementConstructor",
                          "package": "@types/react"
                        }
                      ]
                    }
                  ],
                  "name": "ReactElement",
                  "qualifiedName": "React.ReactElement",
                  "package": "@types/react"
                }
              ]
            }
          }
        ]
      }
    ],
    "List": [
      {
        "id": 154,
        "name": "List",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 155,
            "name": "Item",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "List.tsx",
                "line": 112,
                "character": 5,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L112"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 156,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "List.tsx",
                    "line": 80,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L80"
                  }
                ],
                "signatures": [
                  {
                    "id": 157,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 158,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 178,
                          "name": "ItemProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 159,
            "name": "Separator",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "List.tsx",
                "line": 113,
                "character": 5,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L113"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 160,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Separator.tsx",
                    "line": 5,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Separator.tsx#L5"
                  }
                ],
                "signatures": [
                  {
                    "id": 161,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 162,
                        "name": "props",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "SeparatorProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "List.tsx",
            "line": 23,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L23"
          },
          {
            "fileName": "List.tsx",
            "line": 112,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L112"
          },
          {
            "fileName": "List.tsx",
            "line": 113,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L113"
          }
        ]
      },
      {
        "id": 178,
        "name": "ItemProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "List.tsx",
            "line": 67,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L67"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 179,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 183,
                        "name": "activatable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 73,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L73"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 185,
                        "name": "as",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 75,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L75"
                          }
                        ],
                        "type": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "name": "JSX.IntrinsicElements",
                            "qualifiedName": "global.JSX.IntrinsicElements",
                            "package": "@types/react"
                          }
                        }
                      },
                      {
                        "id": 180,
                        "name": "className",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 70,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L70"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 184,
                        "name": "expandable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 74,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L74"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 186,
                        "name": "needsAttention",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 76,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L76"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 182,
                        "name": "selected",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 72,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L72"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 181,
                        "name": "title",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 71,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L71"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          183,
                          185,
                          180,
                          184,
                          186,
                          182,
                          181
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "List.tsx",
                        "line": 69,
                        "character": 26,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L69"
                      }
                    ]
                  }
                }
              ],
              "name": "React.PropsWithChildren",
              "qualifiedName": "React.PropsWithChildren",
              "package": "@types/react"
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 166,
        "name": "ListProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "List.tsx",
            "line": 7,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L7"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 167,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 173,
                        "name": "border",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 15,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L15"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 168,
                        "name": "className",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 10,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L10"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 175,
                        "name": "fill",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 17,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L17"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            {
                              "type": "literal",
                              "value": "width"
                            },
                            {
                              "type": "literal",
                              "value": "height"
                            }
                          ]
                        }
                      },
                      {
                        "id": 171,
                        "name": "horizontal",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 13,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L13"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 172,
                        "name": "rich",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 14,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L14"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 174,
                        "name": "rounded",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 16,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L16"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 170,
                        "name": "separators",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 12,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L12"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 176,
                        "name": "sidebar",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 18,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L18"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            {
                              "type": "literal",
                              "value": "stack"
                            },
                            {
                              "type": "literal",
                              "value": "navigation"
                            }
                          ]
                        }
                      },
                      {
                        "id": 169,
                        "name": "size",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 11,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L11"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "medium"
                            },
                            {
                              "type": "literal",
                              "value": "large"
                            }
                          ]
                        }
                      },
                      {
                        "id": 177,
                        "name": "sublist",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "List.tsx",
                            "line": 19,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L19"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          173,
                          168,
                          175,
                          171,
                          172,
                          174,
                          170,
                          176,
                          169,
                          177
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "List.tsx",
                        "line": 9,
                        "character": 26,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L9"
                      }
                    ]
                  }
                }
              ],
              "name": "React.PropsWithChildren",
              "qualifiedName": "React.PropsWithChildren",
              "package": "@types/react"
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 163,
        "name": "Item",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "List.tsx",
            "line": 80,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L80"
          }
        ],
        "signatures": [
          {
            "id": 164,
            "name": "Item",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 165,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 178,
                  "name": "ItemProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 151,
        "name": "List",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "List.tsx",
            "line": 23,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L23"
          },
          {
            "fileName": "List.tsx",
            "line": 112,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L112"
          },
          {
            "fileName": "List.tsx",
            "line": 113,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/List.tsx#L113"
          }
        ],
        "signatures": [
          {
            "id": 152,
            "name": "List",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 153,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 166,
                  "name": "ListProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Menu": [
      {
        "id": 74,
        "name": "Menu",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 83,
            "name": "Back",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Menu.tsx",
                "line": 155,
                "character": 5,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L155"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 84,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Menu.tsx",
                    "line": 77,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L77"
                  }
                ],
                "signatures": [
                  {
                    "id": 85,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 86,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 134,
                          "name": "MenuBackProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 75,
            "name": "Button",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Menu.tsx",
                "line": 153,
                "character": 5,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L153"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 76,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Menu.tsx",
                    "line": 42,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L42"
                  }
                ],
                "signatures": [
                  {
                    "id": 77,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 78,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 125,
                          "name": "MenuButtonProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 91,
            "name": "CircularButtons",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Menu.tsx",
                "line": 157,
                "character": 5,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L157"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 92,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Menu.tsx",
                    "line": 116,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L116"
                  }
                ],
                "signatures": [
                  {
                    "id": 93,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 94,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "BoxProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 95,
            "name": "InlineButtons",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Menu.tsx",
                "line": 158,
                "character": 5,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L158"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 96,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Menu.tsx",
                    "line": 93,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L93"
                  }
                ],
                "signatures": [
                  {
                    "id": 97,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 98,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 137,
                          "name": "MenuInlineButtonProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 79,
            "name": "Item",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Menu.tsx",
                "line": 154,
                "character": 5,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L154"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 80,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Menu.tsx",
                    "line": 135,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L135"
                  }
                ],
                "signatures": [
                  {
                    "id": 81,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 82,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "BoxProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 99,
            "name": "Separator",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Menu.tsx",
                "line": 159,
                "character": 5,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L159"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 100,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Separator.tsx",
                    "line": 5,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Separator.tsx#L5"
                  }
                ],
                "signatures": [
                  {
                    "id": 101,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 102,
                        "name": "props",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "SeparatorProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 87,
            "name": "Title",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Menu.tsx",
                "line": 156,
                "character": 5,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L156"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 88,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Menu.tsx",
                    "line": 145,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L145"
                  }
                ],
                "signatures": [
                  {
                    "id": 89,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 90,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "LabelProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 21,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L21"
          },
          {
            "fileName": "Menu.tsx",
            "line": 153,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L153"
          },
          {
            "fileName": "Menu.tsx",
            "line": 154,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L154"
          },
          {
            "fileName": "Menu.tsx",
            "line": 155,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L155"
          },
          {
            "fileName": "Menu.tsx",
            "line": 156,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L156"
          },
          {
            "fileName": "Menu.tsx",
            "line": 157,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L157"
          },
          {
            "fileName": "Menu.tsx",
            "line": 158,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L158"
          },
          {
            "fileName": "Menu.tsx",
            "line": 159,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L159"
          }
        ]
      },
      {
        "id": 134,
        "name": "MenuBackProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 70,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L70"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "button"
            },
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 135,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 136,
                        "name": "className",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Menu.tsx",
                            "line": 73,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L73"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          136
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 72,
                        "character": 26,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L72"
                      }
                    ]
                  }
                }
              ],
              "name": "React.PropsWithChildren",
              "qualifiedName": "React.PropsWithChildren",
              "package": "@types/react"
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 125,
        "name": "MenuButtonProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 29,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L29"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "button"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 126,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 131,
                    "name": "accelerator",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 36,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L36"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 130,
                    "name": "checkbox",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 35,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L35"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 127,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 32,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L32"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 128,
                    "name": "icon",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 33,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L33"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "AdwaitaIcon"
                    }
                  },
                  {
                    "id": 132,
                    "name": "menu",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 37,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L37"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 129,
                    "name": "radio",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 34,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L34"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 133,
                    "name": "selected",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 38,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L38"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      131,
                      130,
                      127,
                      128,
                      132,
                      129,
                      133
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Menu.tsx",
                    "line": 31,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L31"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 140,
        "name": "MenuCircularButtonProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 114,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L114"
          }
        ],
        "type": {
          "type": "reference",
          "name": "BoxProps"
        }
      },
      {
        "id": 137,
        "name": "MenuInlineButtonProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 89,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L89"
          }
        ],
        "type": {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "BoxProps"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 138,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 139,
                    "name": "label",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 90,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L90"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      139
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Menu.tsx",
                    "line": 89,
                    "character": 47,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L89"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "id": 141,
        "name": "MenuItemProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 133,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L133"
          }
        ],
        "type": {
          "type": "reference",
          "name": "BoxProps"
        }
      },
      {
        "id": 121,
        "name": "MenuProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 13,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L13"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 122,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 123,
                        "name": "className",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Menu.tsx",
                            "line": 16,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L16"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 124,
                        "name": "icons",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Menu.tsx",
                            "line": 17,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L17"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          123,
                          124
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "Menu.tsx",
                        "line": 15,
                        "character": 26,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L15"
                      }
                    ]
                  }
                }
              ],
              "name": "React.PropsWithChildren",
              "qualifiedName": "React.PropsWithChildren",
              "package": "@types/react"
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 142,
        "name": "MenuTitleProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 143,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L143"
          }
        ],
        "type": {
          "type": "reference",
          "name": "LabelProps"
        }
      },
      {
        "id": 106,
        "name": "Back",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 77,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L77"
          }
        ],
        "signatures": [
          {
            "id": 107,
            "name": "Back",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 108,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 134,
                  "name": "MenuBackProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 103,
        "name": "Button",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 42,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L42"
          }
        ],
        "signatures": [
          {
            "id": 104,
            "name": "Button",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 105,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 125,
                  "name": "MenuButtonProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 112,
        "name": "CircularButtons",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 116,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L116"
          }
        ],
        "signatures": [
          {
            "id": 113,
            "name": "CircularButtons",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 114,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "BoxProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 109,
        "name": "InlineButtons",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 93,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L93"
          }
        ],
        "signatures": [
          {
            "id": 110,
            "name": "InlineButtons",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 111,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 137,
                  "name": "MenuInlineButtonProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 115,
        "name": "Item",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 135,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L135"
          }
        ],
        "signatures": [
          {
            "id": 116,
            "name": "Item",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 117,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "BoxProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 71,
        "name": "Menu",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 21,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L21"
          },
          {
            "fileName": "Menu.tsx",
            "line": 153,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L153"
          },
          {
            "fileName": "Menu.tsx",
            "line": 154,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L154"
          },
          {
            "fileName": "Menu.tsx",
            "line": 155,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L155"
          },
          {
            "fileName": "Menu.tsx",
            "line": 156,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L156"
          },
          {
            "fileName": "Menu.tsx",
            "line": 157,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L157"
          },
          {
            "fileName": "Menu.tsx",
            "line": 158,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L158"
          },
          {
            "fileName": "Menu.tsx",
            "line": 159,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L159"
          }
        ],
        "signatures": [
          {
            "id": 72,
            "name": "Menu",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 73,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 121,
                  "name": "MenuProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 118,
        "name": "Title",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Menu.tsx",
            "line": 145,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Menu.tsx#L145"
          }
        ],
        "signatures": [
          {
            "id": 119,
            "name": "Title",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 120,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "LabelProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "MenuBar": [
      {
        "id": 48,
        "name": "MenuBar",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 49,
            "name": "Button",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "MenuBar.tsx",
                "line": 58,
                "character": 8,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L58"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 50,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "MenuBar.tsx",
                    "line": 30,
                    "character": 16,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L30"
                  }
                ],
                "signatures": [
                  {
                    "id": 51,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 52,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 58,
                          "name": "MenuBarButtonProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "MenuBar.tsx",
            "line": 15,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L15"
          },
          {
            "fileName": "MenuBar.tsx",
            "line": 58,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L58"
          }
        ]
      },
      {
        "id": 58,
        "name": "MenuBarButtonProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "MenuBar.tsx",
            "line": 23,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L23"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "button"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 59,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 60,
                    "name": "label",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "MenuBar.tsx",
                        "line": 26,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L26"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      60
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "MenuBar.tsx",
                    "line": 25,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L25"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 56,
        "name": "MenuBarProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "MenuBar.tsx",
            "line": 13,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L13"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 57,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "MenuBar.tsx",
                    "line": 13,
                    "character": 53,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L13"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 53,
        "name": "Button",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "MenuBar.tsx",
            "line": 30,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L30"
          }
        ],
        "signatures": [
          {
            "id": 54,
            "name": "Button",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 55,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 58,
                  "name": "MenuBarButtonProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      },
      {
        "id": 45,
        "name": "MenuBar",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "MenuBar.tsx",
            "line": 15,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L15"
          },
          {
            "fileName": "MenuBar.tsx",
            "line": 58,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/MenuBar.tsx#L58"
          }
        ],
        "signatures": [
          {
            "id": 46,
            "name": "MenuBar",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 47,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "HTMLDivElement",
                              "qualifiedName": "HTMLDivElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "HTMLAttributes",
                          "qualifiedName": "React.HTMLAttributes",
                          "package": "@types/react"
                        },
                        {
                          "type": "reference",
                          "name": "HTMLDivElement",
                          "qualifiedName": "HTMLDivElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "DetailedHTMLProps",
                      "qualifiedName": "React.DetailedHTMLProps",
                      "package": "@types/react"
                    },
                    {
                      "type": "literal",
                      "value": "ref"
                    }
                  ],
                  "name": "Omit",
                  "qualifiedName": "Omit",
                  "package": "typescript"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Notebook": [
      {
        "id": 183,
        "name": "Notebook",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 184,
            "name": "defaultProps",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Notebook.tsx",
                "line": 116,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L116"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 185,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 187,
                    "name": "arrows",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 118,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L118"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "false"
                  },
                  {
                    "id": 188,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 119,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L119"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 189,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "Notebook.tsx",
                            "line": 11,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L11"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 190,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 191,
                    "name": "onClose",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 120,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L120"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 192,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "Notebook.tsx",
                            "line": 11,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L11"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 193,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 186,
                    "name": "position",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 117,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L117"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"top\""
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      187,
                      188,
                      191,
                      186
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Notebook.tsx",
                    "line": 116,
                    "character": 24,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L116"
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "Notebook.tsx",
            "line": 28,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L28"
          },
          {
            "fileName": "Notebook.tsx",
            "line": 116,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L116"
          }
        ]
      },
      {
        "id": 194,
        "name": "NotebookProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Notebook.tsx",
            "line": 13,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L13"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "div"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 195,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 202,
                    "name": "action",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 22,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L22"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "React.ReactNode",
                      "qualifiedName": "React.ReactNode",
                      "package": "@types/react"
                    }
                  },
                  {
                    "id": 198,
                    "name": "arrows",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 18,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 199,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 19,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L19"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 203,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 23,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L23"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 204,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "Notebook.tsx",
                            "line": 23,
                            "character": 14,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L23"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 205,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 206,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 207,
                    "name": "onClose",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 24,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L24"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 208,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "Notebook.tsx",
                            "line": 24,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L24"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 209,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 210,
                                "name": "pageIndex",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 201,
                    "name": "pages",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 21,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L21"
                      }
                    ],
                    "type": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "literal",
                        "value": "pages"
                      },
                      "objectType": {
                        "type": "reference",
                        "name": "PageSwitcherProps"
                      }
                    }
                  },
                  {
                    "id": 196,
                    "name": "position",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 16,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L16"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "top"
                        },
                        {
                          "type": "literal",
                          "value": "bottom"
                        },
                        {
                          "type": "literal",
                          "value": "left"
                        },
                        {
                          "type": "literal",
                          "value": "right"
                        }
                      ]
                    }
                  },
                  {
                    "id": 197,
                    "name": "transition",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 17,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "literal",
                        "value": "transition"
                      },
                      "objectType": {
                        "type": "reference",
                        "name": "PageSwitcherProps"
                      }
                    }
                  },
                  {
                    "id": 200,
                    "name": "value",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Notebook.tsx",
                        "line": 20,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L20"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      202,
                      198,
                      199,
                      203,
                      207,
                      201,
                      196,
                      197,
                      200
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Notebook.tsx",
                    "line": 15,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L15"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 180,
        "name": "Notebook",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Notebook.tsx",
            "line": 28,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L28"
          },
          {
            "fileName": "Notebook.tsx",
            "line": 116,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Notebook.tsx#L116"
          }
        ],
        "signatures": [
          {
            "id": 181,
            "name": "Notebook",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 182,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 194,
                  "name": "NotebookProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "PageSwitcher": [
      {
        "id": 267,
        "name": "PageSwitcher",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 274,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 40,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L40"
              }
            ],
            "signatures": [
              {
                "id": 275,
                "name": "new PageSwitcher",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 276,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 256,
                      "name": "PageSwitcherProps"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 267,
                  "name": "PageSwitcher"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component<PageSwitcherProps>.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component<PageSwitcherProps>.constructor"
            }
          },
          {
            "id": 277,
            "name": "activePage",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 30,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L30"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "HTMLDivElement",
                      "qualifiedName": "HTMLDivElement",
                      "package": "typescript"
                    }
                  ]
                }
              ],
              "name": "MutableRefObject",
              "qualifiedName": "React.MutableRefObject",
              "package": "@types/react"
            }
          },
          {
            "id": 296,
            "name": "context",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If using the new style context, re-declare this in your class to be the\n"
                },
                {
                  "kind": "code",
                  "text": "`React.ContextType`"
                },
                {
                  "kind": "text",
                  "text": " of your "
                },
                {
                  "kind": "code",
                  "text": "`static contextType`"
                },
                {
                  "kind": "text",
                  "text": ".\nShould be used with type annotation or static contextType.\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 470,
                "character": 8
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.context"
            }
          },
          {
            "id": 278,
            "name": "mustSetIsSwitching",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 31,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L31"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          },
          {
            "id": 318,
            "name": "props",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 490,
                "character": 17
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 256,
                  "name": "PageSwitcherProps"
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.props"
            }
          },
          {
            "id": 319,
            "name": "refs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@deprecated",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 496,
                "character": 8
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 320,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "node_modules/@types/react/index.d.ts",
                    "line": 496,
                    "character": 14
                  }
                ],
                "indexSignature": {
                  "id": 321,
                  "name": "__index",
                  "kind": 8192,
                  "kindString": "Index signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 322,
                      "name": "key",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactInstance",
                    "qualifiedName": "React.ReactInstance",
                    "package": "@types/react"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.refs"
            }
          },
          {
            "id": 279,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 33,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L33"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 280,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 281,
                    "name": "activePage",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/PageSwitcher.tsx",
                        "line": 34,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L34"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 284,
                    "name": "height",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/PageSwitcher.tsx",
                        "line": 37,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L37"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 282,
                    "name": "isSwitching",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/PageSwitcher.tsx",
                        "line": 35,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L35"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 283,
                    "name": "width",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/PageSwitcher.tsx",
                        "line": 36,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L36"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      281,
                      284,
                      282,
                      283
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 33,
                    "character": 18,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L33"
                  }
                ]
              }
            },
            "overwrites": {
              "type": "reference",
              "name": "React.Component.state"
            }
          },
          {
            "id": 273,
            "name": "contextType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isExternal": true,
              "isOptional": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, "
                },
                {
                  "kind": "code",
                  "text": "`this.context`"
                },
                {
                  "kind": "text",
                  "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html#classcontexttype"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 453,
                "character": 15
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Context",
              "qualifiedName": "React.Context",
              "package": "@types/react"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.contextType"
            }
          },
          {
            "id": 268,
            "name": "defaultProps",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 24,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L24"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 269,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 271,
                    "name": "expand",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/PageSwitcher.tsx",
                        "line": 26,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L26"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "false"
                  },
                  {
                    "id": 270,
                    "name": "transition",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/PageSwitcher.tsx",
                        "line": 25,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L25"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"horizontal\""
                  },
                  {
                    "id": 272,
                    "name": "useMainPageDimensions",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/PageSwitcher.tsx",
                        "line": 27,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L27"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "false"
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      271,
                      270,
                      272
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 24,
                    "character": 24,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L24"
                  }
                ]
              }
            },
            "defaultValue": "..."
          },
          {
            "id": 344,
            "name": "UNSAFE_componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 687,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 345,
                "name": "UNSAFE_componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillMount"
            }
          },
          {
            "id": 350,
            "name": "UNSAFE_componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 719,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 351,
                "name": "UNSAFE_componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 352,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 256,
                          "name": "PageSwitcherProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 353,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillReceiveProps"
            }
          },
          {
            "id": 360,
            "name": "UNSAFE_componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 747,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 361,
                "name": "UNSAFE_componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 362,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 256,
                          "name": "PageSwitcherProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 363,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 364,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 365,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillUpdate"
            }
          },
          {
            "id": 333,
            "name": "componentDidCatch",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 616,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 334,
                "name": "componentDidCatch",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 335,
                    "name": "error",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "Error",
                      "qualifiedName": "Error",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 336,
                    "name": "errorInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "ErrorInfo",
                      "qualifiedName": "React.ErrorInfo",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidCatch"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidCatch"
            }
          },
          {
            "id": 323,
            "name": "componentDidMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 595,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 324,
                "name": "componentDidMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidMount"
            }
          },
          {
            "id": 287,
            "name": "componentDidUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 68,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L68"
              }
            ],
            "signatures": [
              {
                "id": 288,
                "name": "componentDidUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.componentDidUpdate"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.componentDidUpdate"
            }
          },
          {
            "id": 342,
            "name": "componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 673,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 343,
                "name": "componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillMount"
            }
          },
          {
            "id": 346,
            "name": "componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 702,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 347,
                "name": "componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 348,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 256,
                          "name": "PageSwitcherProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 349,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillReceiveProps"
            }
          },
          {
            "id": 331,
            "name": "componentWillUnmount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 611,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 332,
                "name": "componentWillUnmount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidMount`"
                    },
                    {
                      "kind": "text",
                      "text": "."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUnmount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUnmount"
            }
          },
          {
            "id": 354,
            "name": "componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 732,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 355,
                "name": "componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 356,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 256,
                          "name": "PageSwitcherProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 357,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 358,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 359,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUpdate"
            }
          },
          {
            "id": 313,
            "name": "forceUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 487,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 314,
                "name": "forceUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 315,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 316,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 487,
                            "character": 31
                          }
                        ],
                        "signatures": [
                          {
                            "id": 317,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.forceUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.forceUpdate"
            }
          },
          {
            "id": 285,
            "name": "getPagesToRender",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 51,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L51"
              }
            ],
            "signatures": [
              {
                "id": 286,
                "name": "getPagesToRender",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              }
            ]
          },
          {
            "id": 337,
            "name": "getSnapshotBeforeUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 652,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 338,
                "name": "getSnapshotBeforeUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Runs before React applies the result of "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 339,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 256,
                          "name": "PageSwitcherProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 340,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 341,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.getSnapshotBeforeUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.getSnapshotBeforeUpdate"
            }
          },
          {
            "id": 291,
            "name": "onRef",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 84,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L84"
              }
            ],
            "signatures": [
              {
                "id": 292,
                "name": "onRef",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 293,
                    "name": "ref",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLDivElement",
                      "qualifiedName": "HTMLDivElement",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 289,
            "name": "onTransitionEnd",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 77,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L77"
              }
            ],
            "signatures": [
              {
                "id": 290,
                "name": "onTransitionEnd",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 294,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 109,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L109"
              }
            ],
            "signatures": [
              {
                "id": 295,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.render"
            }
          },
          {
            "id": 297,
            "name": "setState",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 482,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 298,
                "name": "setState",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "typeParameter": [
                  {
                    "id": 299,
                    "name": "K",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 300,
                    "name": "state",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 301,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 302,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 483,
                                "character": 20
                              }
                            ],
                            "signatures": [
                              {
                                "id": 303,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {
                                  "isExternal": true
                                },
                                "parameters": [
                                  {
                                    "id": 304,
                                    "name": "prevState",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 305,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  },
                                  {
                                    "id": 306,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 256,
                                          "name": "PageSwitcherProps"
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 307,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                          "isExternal": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 308,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "reference",
                                          "id": 299,
                                          "name": "K",
                                          "qualifiedName": "K",
                                          "package": "@types/react"
                                        }
                                      ],
                                      "name": "Pick",
                                      "qualifiedName": "Pick",
                                      "package": "typescript"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 309,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {
                                  "isExternal": true
                                }
                              }
                            },
                            {
                              "type": "reference",
                              "id": 299,
                              "name": "K",
                              "qualifiedName": "K",
                              "package": "@types/react"
                            }
                          ],
                          "name": "Pick",
                          "qualifiedName": "Pick",
                          "package": "typescript"
                        }
                      ]
                    }
                  },
                  {
                    "id": 310,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 311,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 484,
                            "character": 23
                          }
                        ],
                        "signatures": [
                          {
                            "id": 312,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.setState"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.setState"
            }
          },
          {
            "id": 325,
            "name": "shouldComponentUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 606,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 326,
                "name": "shouldComponentUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                    },
                    {
                      "kind": "code",
                      "text": "`Component`"
                    },
                    {
                      "kind": "text",
                      "text": " always returns true.\n"
                    },
                    {
                      "kind": "code",
                      "text": "`PureComponent`"
                    },
                    {
                      "kind": "text",
                      "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "code",
                      "text": "`componentWillUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": "\nand "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": " will not be called."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 327,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 256,
                          "name": "PageSwitcherProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 328,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 329,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 330,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.shouldComponentUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.shouldComponentUpdate"
            }
          }
        ],
        "groups": [
          "Classes"
        ],
        "sources": [
          {
            "fileName": "src/components/PageSwitcher.tsx",
            "line": 23,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L23"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 256,
                "name": "PageSwitcherProps"
              }
            ],
            "name": "Component",
            "qualifiedName": "React.Component",
            "package": "@types/react"
          }
        ]
      },
      {
        "id": 250,
        "name": "PageSwitcherPage",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/PageSwitcher.tsx",
            "line": 4,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L4"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 251,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 255,
                "name": "closable",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 8,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L8"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 254,
                "name": "content",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 7,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L7"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.ReactNode",
                  "qualifiedName": "React.ReactNode",
                  "package": "@types/react"
                }
              },
              {
                "id": 252,
                "name": "key",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 5,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L5"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              },
              {
                "id": 253,
                "name": "label",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 6,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L6"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.ReactNode",
                  "qualifiedName": "React.ReactNode",
                  "package": "@types/react"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  255,
                  254,
                  252,
                  253
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 4,
                "character": 31,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L4"
              }
            ]
          }
        }
      },
      {
        "id": 256,
        "name": "PageSwitcherProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/PageSwitcher.tsx",
            "line": 11,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L11"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 257,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 261,
                "name": "activePage",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 15,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L15"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              },
              {
                "id": 258,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 12,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L12"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 263,
                "name": "expand",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 17,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L17"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 260,
                "name": "mainPage",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 14,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L14"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              },
              {
                "id": 264,
                "name": "padded",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 18,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L18"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 259,
                "name": "pages",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 13,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L13"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 250,
                    "name": "PageSwitcherPage"
                  }
                }
              },
              {
                "id": 266,
                "name": "style",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 20,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L20"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.CSSProperties",
                  "qualifiedName": "React.CSSProperties",
                  "package": "@types/react"
                }
              },
              {
                "id": 262,
                "name": "transition",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 16,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L16"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "horizontal"
                    },
                    {
                      "type": "literal",
                      "value": "vertical"
                    },
                    {
                      "type": "literal",
                      "value": "opacity"
                    },
                    {
                      "type": "literal",
                      "value": false
                    }
                  ]
                }
              },
              {
                "id": 265,
                "name": "useMainPageDimensions",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/PageSwitcher.tsx",
                    "line": 19,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L19"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    {
                      "type": "literal",
                      "value": "width"
                    },
                    {
                      "type": "literal",
                      "value": "height"
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  261,
                  258,
                  263,
                  260,
                  264,
                  259,
                  266,
                  262,
                  265
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/components/PageSwitcher.tsx",
                "line": 11,
                "character": 32,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PageSwitcher.tsx#L11"
              }
            ]
          }
        }
      }
    ],
    "Paned": [
      {
        "id": 317,
        "name": "Paned",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 323,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 44,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L44"
              }
            ],
            "signatures": [
              {
                "id": 324,
                "name": "new Paned",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 325,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 309,
                      "name": "PanedProps"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 317,
                  "name": "Paned"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component<PanedProps>.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component<PanedProps>.constructor"
            }
          },
          {
            "id": 356,
            "name": "context",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If using the new style context, re-declare this in your class to be the\n"
                },
                {
                  "kind": "code",
                  "text": "`React.ContextType`"
                },
                {
                  "kind": "text",
                  "text": " of your "
                },
                {
                  "kind": "code",
                  "text": "`static contextType`"
                },
                {
                  "kind": "text",
                  "text": ".\nShould be used with type annotation or static contextType.\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 470,
                "character": 8
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.context"
            }
          },
          {
            "id": 326,
            "name": "handle",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 36,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L36"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "HTMLDivElement",
                      "qualifiedName": "HTMLDivElement",
                      "package": "typescript"
                    }
                  ]
                }
              ],
              "name": "MutableRefObject",
              "qualifiedName": "React.MutableRefObject",
              "package": "@types/react"
            }
          },
          {
            "id": 378,
            "name": "props",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 490,
                "character": 17
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 309,
                  "name": "PanedProps"
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.props"
            }
          },
          {
            "id": 379,
            "name": "refs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@deprecated",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 496,
                "character": 8
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 380,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "node_modules/@types/react/index.d.ts",
                    "line": 496,
                    "character": 14
                  }
                ],
                "indexSignature": {
                  "id": 381,
                  "name": "__index",
                  "kind": 8192,
                  "kindString": "Index signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 382,
                      "name": "key",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactInstance",
                    "qualifiedName": "React.ReactInstance",
                    "package": "@types/react"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.refs"
            }
          },
          {
            "id": 328,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 39,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L39"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 329,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 331,
                    "name": "containerSize",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 41,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L41"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 330,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 40,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L40"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      331,
                      330
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Paned.tsx",
                    "line": 39,
                    "character": 18,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L39"
                  }
                ]
              }
            },
            "overwrites": {
              "type": "reference",
              "name": "React.Component.state"
            }
          },
          {
            "id": 327,
            "name": "touchId",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 37,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L37"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          },
          {
            "id": 322,
            "name": "contextType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isExternal": true,
              "isOptional": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, "
                },
                {
                  "kind": "code",
                  "text": "`this.context`"
                },
                {
                  "kind": "text",
                  "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html#classcontexttype"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 453,
                "character": 15
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Context",
              "qualifiedName": "React.Context",
              "package": "@types/react"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.contextType"
            }
          },
          {
            "id": 318,
            "name": "defaultProps",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 31,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L31"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 319,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 321,
                    "name": "border",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 33,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L33"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "true"
                  },
                  {
                    "id": 320,
                    "name": "orientation",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 32,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L32"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"horizontal\""
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      321,
                      320
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Paned.tsx",
                    "line": 31,
                    "character": 24,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L31"
                  }
                ]
              }
            },
            "defaultValue": "..."
          },
          {
            "id": 410,
            "name": "UNSAFE_componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 687,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 411,
                "name": "UNSAFE_componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillMount"
            }
          },
          {
            "id": 416,
            "name": "UNSAFE_componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 719,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 417,
                "name": "UNSAFE_componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 418,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 309,
                          "name": "PanedProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 419,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillReceiveProps"
            }
          },
          {
            "id": 426,
            "name": "UNSAFE_componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 747,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 427,
                "name": "UNSAFE_componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 428,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 309,
                          "name": "PanedProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 429,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 430,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 431,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillUpdate"
            }
          },
          {
            "id": 393,
            "name": "componentDidCatch",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 616,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 394,
                "name": "componentDidCatch",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 395,
                    "name": "error",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "Error",
                      "qualifiedName": "Error",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 396,
                    "name": "errorInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "ErrorInfo",
                      "qualifiedName": "React.ErrorInfo",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidCatch"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidCatch"
            }
          },
          {
            "id": 383,
            "name": "componentDidMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 595,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 384,
                "name": "componentDidMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidMount"
            }
          },
          {
            "id": 402,
            "name": "componentDidUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 658,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 403,
                "name": "componentDidUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 404,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 309,
                          "name": "PanedProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 405,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 406,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 407,
                    "name": "snapshot",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidUpdate"
            }
          },
          {
            "id": 408,
            "name": "componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 673,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 409,
                "name": "componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillMount"
            }
          },
          {
            "id": 412,
            "name": "componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 702,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 413,
                "name": "componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 414,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 309,
                          "name": "PanedProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 415,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillReceiveProps"
            }
          },
          {
            "id": 391,
            "name": "componentWillUnmount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 611,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 392,
                "name": "componentWillUnmount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidMount`"
                    },
                    {
                      "kind": "text",
                      "text": "."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUnmount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUnmount"
            }
          },
          {
            "id": 420,
            "name": "componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 732,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 421,
                "name": "componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 422,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 309,
                          "name": "PanedProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 423,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 424,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 425,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUpdate"
            }
          },
          {
            "id": 373,
            "name": "forceUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 487,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 374,
                "name": "forceUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 375,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 376,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 487,
                            "character": 31
                          }
                        ],
                        "signatures": [
                          {
                            "id": 377,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.forceUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.forceUpdate"
            }
          },
          {
            "id": 397,
            "name": "getSnapshotBeforeUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 652,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 398,
                "name": "getSnapshotBeforeUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Runs before React applies the result of "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 399,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 309,
                          "name": "PanedProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 400,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 401,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.getSnapshotBeforeUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.getSnapshotBeforeUpdate"
            }
          },
          {
            "id": 345,
            "name": "onKeyDown",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 106,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L106"
              }
            ],
            "signatures": [
              {
                "id": 346,
                "name": "onKeyDown",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 347,
                    "name": "ev",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "Element",
                          "qualifiedName": "Element",
                          "package": "typescript"
                        }
                      ],
                      "name": "KeyboardEvent",
                      "qualifiedName": "React.KeyboardEvent",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 342,
            "name": "onMouseDown",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 98,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L98"
              }
            ],
            "signatures": [
              {
                "id": 343,
                "name": "onMouseDown",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 344,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "Element",
                          "qualifiedName": "Element",
                          "package": "typescript"
                        },
                        {
                          "type": "reference",
                          "name": "MouseEvent",
                          "qualifiedName": "MouseEvent",
                          "package": "typescript"
                        }
                      ],
                      "name": "MouseEvent",
                      "qualifiedName": "React.MouseEvent",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 337,
            "name": "onTouchEnd",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 83,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L83"
              }
            ],
            "signatures": [
              {
                "id": 338,
                "name": "onTouchEnd",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 334,
            "name": "onTouchMove",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 61,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L61"
              }
            ],
            "signatures": [
              {
                "id": 335,
                "name": "onTouchMove",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 336,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "MouseEvent",
                          "qualifiedName": "MouseEvent",
                          "package": "typescript"
                        },
                        {
                          "type": "reference",
                          "name": "TouchEvent",
                          "qualifiedName": "TouchEvent",
                          "package": "typescript"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 339,
            "name": "onTouchStart",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 88,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L88"
              }
            ],
            "signatures": [
              {
                "id": 340,
                "name": "onTouchStart",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 341,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "Element",
                          "qualifiedName": "Element",
                          "package": "typescript"
                        }
                      ],
                      "name": "TouchEvent",
                      "qualifiedName": "React.TouchEvent",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 332,
            "name": "removeEventListeners",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 54,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L54"
              }
            ],
            "signatures": [
              {
                "id": 333,
                "name": "removeEventListeners",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 354,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 142,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L142"
              }
            ],
            "signatures": [
              {
                "id": 355,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.render"
            }
          },
          {
            "id": 357,
            "name": "setState",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 482,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 358,
                "name": "setState",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "typeParameter": [
                  {
                    "id": 359,
                    "name": "K",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 360,
                    "name": "state",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 361,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 362,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 483,
                                "character": 20
                              }
                            ],
                            "signatures": [
                              {
                                "id": 363,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {
                                  "isExternal": true
                                },
                                "parameters": [
                                  {
                                    "id": 364,
                                    "name": "prevState",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 365,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  },
                                  {
                                    "id": 366,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 309,
                                          "name": "PanedProps"
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 367,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                          "isExternal": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 368,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "reference",
                                          "id": 359,
                                          "name": "K",
                                          "qualifiedName": "K",
                                          "package": "@types/react"
                                        }
                                      ],
                                      "name": "Pick",
                                      "qualifiedName": "Pick",
                                      "package": "typescript"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 369,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {
                                  "isExternal": true
                                }
                              }
                            },
                            {
                              "type": "reference",
                              "id": 359,
                              "name": "K",
                              "qualifiedName": "K",
                              "package": "@types/react"
                            }
                          ],
                          "name": "Pick",
                          "qualifiedName": "Pick",
                          "package": "typescript"
                        }
                      ]
                    }
                  },
                  {
                    "id": 370,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 371,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 484,
                            "character": 23
                          }
                        ],
                        "signatures": [
                          {
                            "id": 372,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.setState"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.setState"
            }
          },
          {
            "id": 385,
            "name": "shouldComponentUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 606,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 386,
                "name": "shouldComponentUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                    },
                    {
                      "kind": "code",
                      "text": "`Component`"
                    },
                    {
                      "kind": "text",
                      "text": " always returns true.\n"
                    },
                    {
                      "kind": "code",
                      "text": "`PureComponent`"
                    },
                    {
                      "kind": "text",
                      "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "code",
                      "text": "`componentWillUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": "\nand "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": " will not be called."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 387,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 309,
                          "name": "PanedProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 388,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 389,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 390,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.shouldComponentUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.shouldComponentUpdate"
            }
          },
          {
            "id": 348,
            "name": "updateContainerSize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Paned.tsx",
                "line": 129,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L129"
              }
            ],
            "signatures": [
              {
                "id": 349,
                "name": "updateContainerSize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 350,
                    "name": "dimensions",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 351,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 353,
                            "name": "height",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Paned.tsx",
                                "line": 129,
                                "character": 51,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L129"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          },
                          {
                            "id": 352,
                            "name": "width",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Paned.tsx",
                                "line": 129,
                                "character": 36,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L129"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              353,
                              352
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/components/Paned.tsx",
                            "line": 129,
                            "character": 34,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L129"
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          }
        ],
        "groups": [
          "Classes"
        ],
        "sources": [
          {
            "fileName": "src/components/Paned.tsx",
            "line": 30,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L30"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 309,
                "name": "PanedProps"
              }
            ],
            "name": "Component",
            "qualifiedName": "React.Component",
            "package": "@types/react"
          }
        ]
      },
      {
        "id": 309,
        "name": "PanedProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Paned.tsx",
            "line": 21,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L21"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reflection",
              "declaration": {
                "id": 310,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 315,
                    "name": "border",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 26,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L26"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        {
                          "type": "literal",
                          "value": "handle"
                        }
                      ]
                    }
                  },
                  {
                    "id": 311,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 22,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L22"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 314,
                    "name": "defaultSize",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 25,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L25"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 316,
                    "name": "fill",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 27,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L27"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        {
                          "type": "literal",
                          "value": "width"
                        },
                        {
                          "type": "literal",
                          "value": "height"
                        }
                      ]
                    }
                  },
                  {
                    "id": 312,
                    "name": "orientation",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 23,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L23"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Orientation"
                    }
                  },
                  {
                    "id": 313,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/components/Paned.tsx",
                        "line": 24,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L24"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      315,
                      311,
                      314,
                      316,
                      312,
                      313
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Paned.tsx",
                    "line": 21,
                    "character": 49,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Paned.tsx#L21"
                  }
                ]
              }
            }
          ],
          "name": "React.PropsWithChildren",
          "qualifiedName": "React.PropsWithChildren",
          "package": "@types/react"
        }
      }
    ],
    "Popover": [
      {
        "id": 189,
        "name": "Popover",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 211,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 85,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L85"
              }
            ],
            "signatures": [
              {
                "id": 212,
                "name": "new Popover",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 213,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 161,
                      "name": "PopoverProps"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 189,
                  "name": "Popover"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.PureComponent<PopoverProps>.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.PureComponent<PopoverProps>.constructor"
            }
          },
          {
            "id": 221,
            "name": "arrowRef",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 78,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L78"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "HTMLDivElement",
                      "qualifiedName": "HTMLDivElement",
                      "package": "typescript"
                    }
                  ]
                }
              ],
              "name": "MutableRefObject",
              "qualifiedName": "React.MutableRefObject",
              "package": "@types/react"
            }
          },
          {
            "id": 218,
            "name": "closeTimeout",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 74,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L74"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          },
          {
            "id": 298,
            "name": "context",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If using the new style context, re-declare this in your class to be the\n"
                },
                {
                  "kind": "code",
                  "text": "`React.ContextType`"
                },
                {
                  "kind": "text",
                  "text": " of your "
                },
                {
                  "kind": "code",
                  "text": "`static contextType`"
                },
                {
                  "kind": "text",
                  "text": ".\nShould be used with type annotation or static contextType.\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 470,
                "character": 8
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.context"
            }
          },
          {
            "id": 214,
            "name": "domNode",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 70,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L70"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "qualifiedName": "HTMLElement",
              "package": "typescript"
            }
          },
          {
            "id": 215,
            "name": "isDomNodeAttached",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 71,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L71"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          },
          {
            "id": 216,
            "name": "isEventListening",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 72,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L72"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          },
          {
            "id": 222,
            "name": "observer",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 80,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L80"
              }
            ],
            "type": {
              "type": "reference",
              "name": "ResizeObserver",
              "qualifiedName": "ResizeObserver",
              "package": "typescript"
            }
          },
          {
            "id": 217,
            "name": "openTimeout",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 73,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L73"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          },
          {
            "id": 220,
            "name": "popoverRef",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 77,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L77"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "qualifiedName": "HTMLElement",
                      "package": "typescript"
                    }
                  ]
                }
              ],
              "name": "MutableRefObject",
              "qualifiedName": "React.MutableRefObject",
              "package": "@types/react"
            }
          },
          {
            "id": 223,
            "name": "popper",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 81,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L81"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "Instance",
                  "qualifiedName": "Instance",
                  "package": "@popperjs/core"
                }
              ]
            }
          },
          {
            "id": 320,
            "name": "props",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 490,
                "character": 17
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 161,
                  "name": "PopoverProps"
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.props"
            }
          },
          {
            "id": 321,
            "name": "refs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@deprecated",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 496,
                "character": 8
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 322,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "node_modules/@types/react/index.d.ts",
                    "line": 496,
                    "character": 14
                  }
                ],
                "indexSignature": {
                  "id": 323,
                  "name": "__index",
                  "kind": 8192,
                  "kindString": "Index signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 324,
                      "name": "key",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactInstance",
                    "qualifiedName": "React.ReactInstance",
                    "package": "@types/react"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.refs"
            }
          },
          {
            "id": 224,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 83,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L83"
              }
            ],
            "type": {
              "type": "reference",
              "name": "PopoverState"
            },
            "overwrites": {
              "type": "reference",
              "name": "React.PureComponent.state"
            }
          },
          {
            "id": 219,
            "name": "triggerRef",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 76,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L76"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "Element",
                      "package": "typescript"
                    }
                  ]
                }
              ],
              "name": "MutableRefObject",
              "qualifiedName": "React.MutableRefObject",
              "package": "@types/react"
            }
          },
          {
            "id": 210,
            "name": "contextType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isExternal": true,
              "isOptional": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, "
                },
                {
                  "kind": "code",
                  "text": "`this.context`"
                },
                {
                  "kind": "text",
                  "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html#classcontexttype"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 453,
                "character": 15
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Context",
              "qualifiedName": "React.Context",
              "package": "@types/react"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.contextType"
            }
          },
          {
            "id": 190,
            "name": "defaultProps",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 57,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L57"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 191,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 194,
                    "name": "align",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 60,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L60"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"right\""
                  },
                  {
                    "id": 192,
                    "name": "arrow",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 58,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L58"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "true"
                  },
                  {
                    "id": 196,
                    "name": "delay",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 62,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L62"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "defaultValue": "200"
                  },
                  {
                    "id": 195,
                    "name": "method",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 61,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L61"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"click\""
                  },
                  {
                    "id": 201,
                    "name": "onClose",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 65,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L65"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 202,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Popover.tsx",
                            "line": 7,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L7"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 203,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 207,
                    "name": "onDidClose",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 67,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L67"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 208,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Popover.tsx",
                            "line": 7,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L7"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 209,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 204,
                    "name": "onDidOpen",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 66,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L66"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 205,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Popover.tsx",
                            "line": 7,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L7"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 206,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 198,
                    "name": "onOpen",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 64,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L64"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 199,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Popover.tsx",
                            "line": 7,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L7"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 200,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 193,
                    "name": "placement",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 59,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L59"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"bottom\""
                  },
                  {
                    "id": 197,
                    "name": "shouldUpdatePlacement",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 63,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L63"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "true"
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      194,
                      192,
                      196,
                      195,
                      201,
                      207,
                      204,
                      198,
                      193,
                      197
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 57,
                    "character": 24,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L57"
                  }
                ]
              }
            },
            "defaultValue": "..."
          },
          {
            "id": 342,
            "name": "UNSAFE_componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 687,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 343,
                "name": "UNSAFE_componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.UNSAFE_componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.UNSAFE_componentWillMount"
            }
          },
          {
            "id": 348,
            "name": "UNSAFE_componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 719,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 349,
                "name": "UNSAFE_componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 350,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 161,
                          "name": "PopoverProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 351,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.UNSAFE_componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.UNSAFE_componentWillReceiveProps"
            }
          },
          {
            "id": 358,
            "name": "UNSAFE_componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 747,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 359,
                "name": "UNSAFE_componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 360,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 161,
                          "name": "PopoverProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 361,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 362,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 363,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.UNSAFE_componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.UNSAFE_componentWillUpdate"
            }
          },
          {
            "id": 233,
            "name": "attachDomNode",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 127,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L127"
              }
            ],
            "signatures": [
              {
                "id": 234,
                "name": "attachDomNode",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 237,
            "name": "attachPopper",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 145,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L145"
              }
            ],
            "signatures": [
              {
                "id": 238,
                "name": "attachPopper",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 269,
            "name": "close",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 347,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L347"
              }
            ],
            "signatures": [
              {
                "id": 270,
                "name": "close",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 331,
            "name": "componentDidCatch",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 616,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 332,
                "name": "componentDidCatch",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 333,
                    "name": "error",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "Error",
                      "qualifiedName": "Error",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 334,
                    "name": "errorInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "ErrorInfo",
                      "qualifiedName": "React.ErrorInfo",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.componentDidCatch"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.componentDidCatch"
            }
          },
          {
            "id": 227,
            "name": "componentDidMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 116,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L116"
              }
            ],
            "signatures": [
              {
                "id": 228,
                "name": "componentDidMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.PureComponent.componentDidMount"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.PureComponent.componentDidMount"
            }
          },
          {
            "id": 229,
            "name": "componentDidUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 121,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L121"
              }
            ],
            "signatures": [
              {
                "id": 230,
                "name": "componentDidUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 231,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 161,
                      "name": "PopoverProps"
                    }
                  },
                  {
                    "id": 232,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PopoverState"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.PureComponent.componentDidUpdate"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.PureComponent.componentDidUpdate"
            }
          },
          {
            "id": 340,
            "name": "componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 673,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 341,
                "name": "componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.componentWillMount"
            }
          },
          {
            "id": 344,
            "name": "componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 702,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 345,
                "name": "componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 346,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 161,
                          "name": "PopoverProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 347,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.componentWillReceiveProps"
            }
          },
          {
            "id": 225,
            "name": "componentWillUnmount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 111,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L111"
              }
            ],
            "signatures": [
              {
                "id": 226,
                "name": "componentWillUnmount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.PureComponent.componentWillUnmount"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.PureComponent.componentWillUnmount"
            }
          },
          {
            "id": 352,
            "name": "componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 732,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 353,
                "name": "componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 354,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 161,
                          "name": "PopoverProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 355,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 356,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 357,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.componentWillUpdate"
            }
          },
          {
            "id": 235,
            "name": "detachDomNode",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 137,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L137"
              }
            ],
            "signatures": [
              {
                "id": 236,
                "name": "detachDomNode",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 239,
            "name": "detachPopper",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 157,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L157"
              }
            ],
            "signatures": [
              {
                "id": 240,
                "name": "detachPopper",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 315,
            "name": "forceUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 487,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 316,
                "name": "forceUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 317,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 318,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 487,
                            "character": 31
                          }
                        ],
                        "signatures": [
                          {
                            "id": 319,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.forceUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.forceUpdate"
            }
          },
          {
            "id": 273,
            "name": "getContent",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 365,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L365"
              }
            ],
            "signatures": [
              {
                "id": 274,
                "name": "getContent",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "ReactNode",
                  "qualifiedName": "React.ReactNode",
                  "package": "@types/react"
                }
              }
            ]
          },
          {
            "id": 275,
            "name": "getEventListeners",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 373,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L373"
              }
            ],
            "signatures": [
              {
                "id": 276,
                "name": "getEventListeners",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 277,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 284,
                            "name": "onClick",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Popover.tsx",
                                "line": 378,
                                "character": 10,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L378"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "undefined"
                            },
                            "defaultValue": "..."
                          },
                          {
                            "id": 281,
                            "name": "onMouseOut",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Popover.tsx",
                                "line": 376,
                                "character": 41,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L376"
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 282,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/components/Popover.tsx",
                                    "line": 305,
                                    "character": 15,
                                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L305"
                                  }
                                ],
                                "signatures": [
                                  {
                                    "id": 283,
                                    "name": "__type",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "void"
                                    }
                                  }
                                ]
                              }
                            },
                            "defaultValue": "..."
                          },
                          {
                            "id": 278,
                            "name": "onMouseOver",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Popover.tsx",
                                "line": 376,
                                "character": 10,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L376"
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 279,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/components/Popover.tsx",
                                    "line": 287,
                                    "character": 16,
                                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L287"
                                  }
                                ],
                                "signatures": [
                                  {
                                    "id": 280,
                                    "name": "__type",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "void"
                                    }
                                  }
                                ]
                              }
                            },
                            "defaultValue": "..."
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              284,
                              281,
                              278
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/components/Popover.tsx",
                            "line": 376,
                            "character": 8,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L376"
                          }
                        ]
                      }
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 285,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 286,
                            "name": "onClick",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Popover.tsx",
                                "line": 378,
                                "character": 10,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L378"
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 287,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/components/Popover.tsx",
                                    "line": 279,
                                    "character": 12,
                                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L279"
                                  }
                                ],
                                "signatures": [
                                  {
                                    "id": 288,
                                    "name": "__type",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                      {
                                        "id": 289,
                                        "name": "ev",
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "flags": {},
                                        "type": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "name": "HTMLElement",
                                              "qualifiedName": "HTMLElement",
                                              "package": "typescript"
                                            },
                                            {
                                              "type": "reference",
                                              "name": "MouseEvent",
                                              "qualifiedName": "MouseEvent",
                                              "package": "typescript"
                                            }
                                          ],
                                          "name": "MouseEvent",
                                          "qualifiedName": "React.MouseEvent",
                                          "package": "@types/react"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "void"
                                    }
                                  }
                                ]
                              }
                            },
                            "defaultValue": "..."
                          },
                          {
                            "id": 291,
                            "name": "onMouseOut",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Popover.tsx",
                                "line": 376,
                                "character": 41,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L376"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "undefined"
                            },
                            "defaultValue": "..."
                          },
                          {
                            "id": 290,
                            "name": "onMouseOver",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Popover.tsx",
                                "line": 376,
                                "character": 10,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L376"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "undefined"
                            },
                            "defaultValue": "..."
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              286,
                              291,
                              290
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/components/Popover.tsx",
                            "line": 378,
                            "character": 8,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L378"
                          }
                        ]
                      }
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 292,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 295,
                            "name": "onClick",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Popover.tsx",
                                "line": 378,
                                "character": 10,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L378"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "undefined"
                            },
                            "defaultValue": "..."
                          },
                          {
                            "id": 294,
                            "name": "onMouseOut",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Popover.tsx",
                                "line": 376,
                                "character": 41,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L376"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "undefined"
                            },
                            "defaultValue": "..."
                          },
                          {
                            "id": 293,
                            "name": "onMouseOver",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/components/Popover.tsx",
                                "line": 376,
                                "character": 10,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L376"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "undefined"
                            },
                            "defaultValue": "..."
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              295,
                              294,
                              293
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/components/Popover.tsx",
                            "line": 379,
                            "character": 8,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L379"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          {
            "id": 243,
            "name": "getPopperOptions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 169,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L169"
              }
            ],
            "signatures": [
              {
                "id": 244,
                "name": "getPopperOptions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "Modifier",
                              "qualifiedName": "Modifier",
                              "package": "@popperjs/core"
                            }
                          ],
                          "name": "Partial",
                          "qualifiedName": "Partial",
                          "package": "typescript"
                        }
                      ],
                      "name": "OptionsGeneric",
                      "qualifiedName": "OptionsGeneric",
                      "package": "@popperjs/core"
                    }
                  ],
                  "name": "Partial",
                  "qualifiedName": "Partial",
                  "package": "typescript"
                }
              }
            ]
          },
          {
            "id": 335,
            "name": "getSnapshotBeforeUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 652,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 336,
                "name": "getSnapshotBeforeUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Runs before React applies the result of "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 337,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 161,
                          "name": "PopoverProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 338,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 339,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.getSnapshotBeforeUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.getSnapshotBeforeUpdate"
            }
          },
          {
            "id": 265,
            "name": "isControlled",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 322,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L322"
              }
            ],
            "signatures": [
              {
                "id": 266,
                "name": "isControlled",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ]
          },
          {
            "id": 271,
            "name": "isOpen",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 361,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L361"
              }
            ],
            "signatures": [
              {
                "id": 272,
                "name": "isOpen",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ]
          },
          {
            "id": 258,
            "name": "onClick",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 279,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L279"
              }
            ],
            "signatures": [
              {
                "id": 259,
                "name": "onClick",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 260,
                    "name": "ev",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLElement",
                          "qualifiedName": "HTMLElement",
                          "package": "typescript"
                        },
                        {
                          "type": "reference",
                          "name": "MouseEvent",
                          "qualifiedName": "MouseEvent",
                          "package": "typescript"
                        }
                      ],
                      "name": "MouseEvent",
                      "qualifiedName": "React.MouseEvent",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 245,
            "name": "onContentResize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 217,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L217"
              }
            ],
            "signatures": [
              {
                "id": 246,
                "name": "onContentResize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 250,
            "name": "onDocumentClick",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 233,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L233"
              }
            ],
            "signatures": [
              {
                "id": 251,
                "name": "onDocumentClick",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 252,
                    "name": "ev",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "MouseEvent",
                      "qualifiedName": "MouseEvent",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 263,
            "name": "onMouseOut",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 305,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L305"
              }
            ],
            "signatures": [
              {
                "id": 264,
                "name": "onMouseOut",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 261,
            "name": "onMouseOver",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 287,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L287"
              }
            ],
            "signatures": [
              {
                "id": 262,
                "name": "onMouseOver",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 247,
            "name": "onRefPopover",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 221,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L221"
              }
            ],
            "signatures": [
              {
                "id": 248,
                "name": "onRefPopover",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 249,
                    "name": "ref",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLDivElement",
                      "qualifiedName": "HTMLDivElement",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 253,
            "name": "onTransitionEnd",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 248,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L248"
              }
            ],
            "signatures": [
              {
                "id": 254,
                "name": "onTransitionEnd",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 255,
            "name": "onUpdatePopper",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 254,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L254"
              }
            ],
            "signatures": [
              {
                "id": 256,
                "name": "onUpdatePopper",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 257,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ],
                      "name": "ModifierArguments",
                      "qualifiedName": "ModifierArguments",
                      "package": "@popperjs/core"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 267,
            "name": "open",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 326,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L326"
              }
            ],
            "signatures": [
              {
                "id": 268,
                "name": "open",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 296,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 382,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L382"
              }
            ],
            "signatures": [
              {
                "id": 297,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.PureComponent.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.PureComponent.render"
            }
          },
          {
            "id": 299,
            "name": "setState",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 482,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 300,
                "name": "setState",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "typeParameter": [
                  {
                    "id": 301,
                    "name": "K",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 302,
                    "name": "state",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 303,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 304,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 483,
                                "character": 20
                              }
                            ],
                            "signatures": [
                              {
                                "id": 305,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {
                                  "isExternal": true
                                },
                                "parameters": [
                                  {
                                    "id": 306,
                                    "name": "prevState",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 307,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  },
                                  {
                                    "id": 308,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 161,
                                          "name": "PopoverProps"
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 309,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                          "isExternal": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 310,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "reference",
                                          "id": 301,
                                          "name": "K",
                                          "qualifiedName": "K",
                                          "package": "@types/react"
                                        }
                                      ],
                                      "name": "Pick",
                                      "qualifiedName": "Pick",
                                      "package": "typescript"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 311,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {
                                  "isExternal": true
                                }
                              }
                            },
                            {
                              "type": "reference",
                              "id": 301,
                              "name": "K",
                              "qualifiedName": "K",
                              "package": "@types/react"
                            }
                          ],
                          "name": "Pick",
                          "qualifiedName": "Pick",
                          "package": "typescript"
                        }
                      ]
                    }
                  },
                  {
                    "id": 312,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 313,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 484,
                            "character": 23
                          }
                        ],
                        "signatures": [
                          {
                            "id": 314,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.setState"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.setState"
            }
          },
          {
            "id": 325,
            "name": "shouldComponentUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 606,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 326,
                "name": "shouldComponentUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                    },
                    {
                      "kind": "code",
                      "text": "`Component`"
                    },
                    {
                      "kind": "text",
                      "text": " always returns true.\n"
                    },
                    {
                      "kind": "code",
                      "text": "`PureComponent`"
                    },
                    {
                      "kind": "text",
                      "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "code",
                      "text": "`componentWillUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": "\nand "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": " will not be called."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 327,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 161,
                          "name": "PopoverProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 328,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 329,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 330,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.PureComponent.shouldComponentUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.PureComponent.shouldComponentUpdate"
            }
          },
          {
            "id": 241,
            "name": "updatePopperOptions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 164,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L164"
              }
            ],
            "signatures": [
              {
                "id": 242,
                "name": "updatePopperOptions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          }
        ],
        "groups": [
          "Classes"
        ],
        "sources": [
          {
            "fileName": "src/components/Popover.tsx",
            "line": 56,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L56"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 161,
                "name": "PopoverProps"
              }
            ],
            "name": "PureComponent",
            "qualifiedName": "React.PureComponent",
            "package": "@types/react"
          }
        ]
      },
      {
        "id": 161,
        "name": "PopoverProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Popover.tsx",
            "line": 18,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L18"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 162,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 171,
                "name": "align",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 37,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L37"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "right"
                    },
                    {
                      "type": "literal",
                      "value": "left"
                    }
                  ]
                }
              },
              {
                "id": 165,
                "name": "arrow",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 21,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L21"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 169,
                "name": "children",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 23,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L23"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.ReactNode",
                  "qualifiedName": "React.ReactNode",
                  "package": "@types/react"
                }
              },
              {
                "id": 163,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 19,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L19"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 166,
                "name": "content",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 22,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L22"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "React.ReactNode",
                      "qualifiedName": "React.ReactNode",
                      "package": "@types/react"
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 167,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Popover.tsx",
                            "line": 22,
                            "character": 30,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L22"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 168,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "name": "React.ReactNode",
                              "qualifiedName": "React.ReactNode",
                              "package": "@types/react"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "id": 174,
                "name": "delay",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 40,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L40"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              },
              {
                "id": 172,
                "name": "method",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 38,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L38"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "mouseover"
                    },
                    {
                      "type": "literal",
                      "value": "click"
                    },
                    {
                      "type": "literal",
                      "value": "click-controlled"
                    },
                    {
                      "type": "literal",
                      "value": "none"
                    }
                  ]
                }
              },
              {
                "id": 180,
                "name": "onClose",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 44,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L44"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 181,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 44,
                        "character": 12,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L44"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 182,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 186,
                "name": "onDidClose",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 46,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L46"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 187,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 46,
                        "character": 15,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L46"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 188,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 183,
                "name": "onDidOpen",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 45,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L45"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 184,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 45,
                        "character": 14,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L45"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 185,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 177,
                "name": "onOpen",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 43,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L43"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 178,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Popover.tsx",
                        "line": 43,
                        "character": 11,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L43"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 179,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 164,
                "name": "open",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 20,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L20"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 170,
                "name": "placement",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 24,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L24"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "top"
                    },
                    {
                      "type": "literal",
                      "value": "top-start"
                    },
                    {
                      "type": "literal",
                      "value": "top-end"
                    },
                    {
                      "type": "literal",
                      "value": "bottom"
                    },
                    {
                      "type": "literal",
                      "value": "bottom-start"
                    },
                    {
                      "type": "literal",
                      "value": "bottom-end"
                    },
                    {
                      "type": "literal",
                      "value": "right"
                    },
                    {
                      "type": "literal",
                      "value": "right-start"
                    },
                    {
                      "type": "literal",
                      "value": "right-end"
                    },
                    {
                      "type": "literal",
                      "value": "left"
                    },
                    {
                      "type": "literal",
                      "value": "left-start"
                    },
                    {
                      "type": "literal",
                      "value": "left-end"
                    }
                  ]
                }
              },
              {
                "id": 176,
                "name": "shouldAttachEarly",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 42,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L42"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 175,
                "name": "shouldUpdatePlacement",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 41,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L41"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 173,
                "name": "width",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Popover.tsx",
                    "line": 39,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L39"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "trigger"
                    },
                    {
                      "type": "literal",
                      "value": "trigger-min"
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  171,
                  165,
                  169,
                  163,
                  166,
                  174,
                  172,
                  180,
                  186,
                  183,
                  177,
                  164,
                  170,
                  176,
                  175,
                  173
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/components/Popover.tsx",
                "line": 18,
                "character": 27,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Popover.tsx#L18"
              }
            ]
          }
        }
      }
    ],
    "PopoverMenu": [
      {
        "id": 147,
        "name": "PopoverMenuProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "PopoverMenu.tsx",
            "line": 10,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L10"
          }
        ],
        "type": {
          "type": "intersection",
          "types": [
            {
              "type": "reflection",
              "declaration": {
                "id": 148,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 162,
                    "name": "onChangeOpen",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "PopoverMenu.tsx",
                        "line": 17,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 163,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "PopoverMenu.tsx",
                            "line": 17,
                            "character": 17,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L17"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 164,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 165,
                                "name": "open",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 161,
                    "name": "open",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "PopoverMenu.tsx",
                        "line": 16,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L16"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 149,
                    "name": "pages",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "PopoverMenu.tsx",
                        "line": 11,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L11"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 150,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "PopoverMenu.tsx",
                            "line": 11,
                            "character": 9,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L11"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 151,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 152,
                                "name": "params",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 153,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 156,
                                        "name": "back",
                                        "kind": 2048,
                                        "kindString": "Method",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "PopoverMenu.tsx",
                                            "line": 13,
                                            "character": 4,
                                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L13"
                                          }
                                        ],
                                        "signatures": [
                                          {
                                            "id": 157,
                                            "name": "back",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {},
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "void"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "id": 158,
                                        "name": "change",
                                        "kind": 2048,
                                        "kindString": "Method",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "PopoverMenu.tsx",
                                            "line": 14,
                                            "character": 4,
                                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L14"
                                          }
                                        ],
                                        "signatures": [
                                          {
                                            "id": 159,
                                            "name": "change",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {},
                                            "parameters": [
                                              {
                                                "id": 160,
                                                "name": "key",
                                                "kind": 32768,
                                                "kindString": "Parameter",
                                                "flags": {},
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "void"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "id": 154,
                                        "name": "close",
                                        "kind": 2048,
                                        "kindString": "Method",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "PopoverMenu.tsx",
                                            "line": 12,
                                            "character": 4,
                                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L12"
                                          }
                                        ],
                                        "signatures": [
                                          {
                                            "id": 155,
                                            "name": "close",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {},
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "void"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Methods",
                                        "children": [
                                          156,
                                          158,
                                          154
                                        ]
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "PopoverMenu.tsx",
                                        "line": 11,
                                        "character": 18,
                                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L11"
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "type": {
                              "type": "array",
                              "elementType": {
                                "type": "reference",
                                "name": "PageSwitcherPage"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      162,
                      161,
                      149
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "PopoverMenu.tsx",
                    "line": 10,
                    "character": 31,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L10"
                  }
                ]
              }
            },
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "PopoverProps"
                },
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "open"
                    },
                    {
                      "type": "literal",
                      "value": "content"
                    },
                    {
                      "type": "literal",
                      "value": "onOpen"
                    },
                    {
                      "type": "literal",
                      "value": "onClose"
                    },
                    {
                      "type": "literal",
                      "value": "onDidClose"
                    }
                  ]
                }
              ],
              "name": "Omit",
              "qualifiedName": "Omit",
              "package": "typescript"
            }
          ]
        }
      },
      {
        "id": 144,
        "name": "PopoverMenu",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "PopoverMenu.tsx",
            "line": 20,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/PopoverMenu.tsx#L20"
          }
        ],
        "signatures": [
          {
            "id": 145,
            "name": "PopoverMenu",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 146,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 147,
                  "name": "PopoverMenuProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Progress": [
      {
        "id": 191,
        "name": "ProgressProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Progress.tsx",
            "line": 10,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L10"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 192,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 193,
                "name": "aria-label",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The label of the slider."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Progress.tsx",
                    "line": 12,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L12"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 194,
                "name": "aria-labelledby",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The id of the element containing a label for the slider."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Progress.tsx",
                    "line": 14,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L14"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 195,
                "name": "aria-valuetext",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "A string value that provides a user-friendly name for the current value of the slider."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Progress.tsx",
                    "line": 16,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L16"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 196,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Progress.tsx",
                    "line": 17,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L17"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 199,
                "name": "label",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "If a label should be shown"
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Progress.tsx",
                    "line": 23,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L23"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    {
                      "type": "reference",
                      "name": "React.ReactNode",
                      "qualifiedName": "React.ReactNode",
                      "package": "@types/react"
                    }
                  ]
                }
              },
              {
                "id": 197,
                "name": "orientation",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The slider orientation."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Progress.tsx",
                    "line": 19,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L19"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "horizontal"
                    },
                    {
                      "type": "literal",
                      "value": "vertical"
                    }
                  ]
                }
              },
              {
                "id": 198,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The value of the slider. For indeterminate pass undefined."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Progress.tsx",
                    "line": 21,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L21"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  193,
                  194,
                  195,
                  196,
                  199,
                  197,
                  198
                ]
              }
            ],
            "sources": [
              {
                "fileName": "Progress.tsx",
                "line": 10,
                "character": 28,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L10"
              }
            ]
          }
        }
      },
      {
        "id": 188,
        "name": "Progress",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Progress.tsx",
            "line": 26,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Progress.tsx#L26"
          }
        ],
        "signatures": [
          {
            "id": 189,
            "name": "Progress",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 190,
                "name": "props",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 191,
                  "name": "ProgressProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Radio": [
      {
        "id": 215,
        "name": "RadioGroup",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 216,
            "name": "defaultProps",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Radio.tsx",
                "line": 133,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L133"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 217,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 218,
                    "name": "compact",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Radio.tsx",
                        "line": 134,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L134"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "false"
                  },
                  {
                    "id": 219,
                    "name": "horizontal",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Radio.tsx",
                        "line": 135,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L135"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "true"
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      218,
                      219
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 133,
                    "character": 26,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L133"
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "src/components/Radio.tsx",
            "line": 100,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L100"
          },
          {
            "fileName": "src/components/Radio.tsx",
            "line": 133,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L133"
          }
        ]
      },
      {
        "id": 237,
        "name": "Radio",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 247,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Radio.tsx",
                "line": 36,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L36"
              }
            ],
            "signatures": [
              {
                "id": 248,
                "name": "new Radio",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 249,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 220,
                      "name": "RadioProps"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 237,
                  "name": "Radio"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component<RadioProps>.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component<RadioProps>.constructor"
            }
          },
          {
            "id": 256,
            "name": "context",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If using the new style context, re-declare this in your class to be the\n"
                },
                {
                  "kind": "code",
                  "text": "`React.ContextType`"
                },
                {
                  "kind": "text",
                  "text": " of your "
                },
                {
                  "kind": "code",
                  "text": "`static contextType`"
                },
                {
                  "kind": "text",
                  "text": ".\nShould be used with type annotation or static contextType.\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 470,
                "character": 8
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.context"
            }
          },
          {
            "id": 250,
            "name": "id",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Radio.tsx",
                "line": 34,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L34"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 278,
            "name": "props",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 490,
                "character": 17
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 220,
                  "name": "RadioProps"
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.props"
            }
          },
          {
            "id": 281,
            "name": "refs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@deprecated",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 496,
                "character": 8
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 282,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "node_modules/@types/react/index.d.ts",
                    "line": 496,
                    "character": 14
                  }
                ],
                "indexSignature": {
                  "id": 283,
                  "name": "__index",
                  "kind": 8192,
                  "kindString": "Index signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 284,
                      "name": "key",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactInstance",
                    "qualifiedName": "React.ReactInstance",
                    "package": "@types/react"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.refs"
            }
          },
          {
            "id": 279,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 491,
                "character": 8
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 280,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {}
                  }
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.state"
            }
          },
          {
            "id": 238,
            "name": "Group",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Radio.tsx",
                "line": 26,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L26"
              }
            ],
            "type": {
              "type": "query",
              "queryType": {
                "type": "reference",
                "id": 212,
                "name": "RadioGroup"
              }
            },
            "defaultValue": "RadioGroup"
          },
          {
            "id": 246,
            "name": "contextType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isExternal": true,
              "isOptional": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, "
                },
                {
                  "kind": "code",
                  "text": "`this.context`"
                },
                {
                  "kind": "text",
                  "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html#classcontexttype"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 453,
                "character": 15
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Context",
              "qualifiedName": "React.Context",
              "package": "@types/react"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.contextType"
            }
          },
          {
            "id": 239,
            "name": "defaultProps",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Radio.tsx",
                "line": 28,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L28"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 240,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 243,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Radio.tsx",
                        "line": 31,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L31"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 244,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Radio.tsx",
                            "line": 7,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L7"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 245,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 241,
                    "name": "showLabel",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Radio.tsx",
                        "line": 29,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L29"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "true"
                  },
                  {
                    "id": 242,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Radio.tsx",
                        "line": 30,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L30"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"medium\""
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      243,
                      241,
                      242
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 28,
                    "character": 24,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L28"
                  }
                ]
              }
            },
            "defaultValue": "..."
          },
          {
            "id": 312,
            "name": "UNSAFE_componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 687,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 313,
                "name": "UNSAFE_componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillMount"
            }
          },
          {
            "id": 318,
            "name": "UNSAFE_componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 719,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 319,
                "name": "UNSAFE_componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 320,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 220,
                          "name": "RadioProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 321,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillReceiveProps"
            }
          },
          {
            "id": 328,
            "name": "UNSAFE_componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 747,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 329,
                "name": "UNSAFE_componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 330,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 220,
                          "name": "RadioProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 331,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 332,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 333,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillUpdate"
            }
          },
          {
            "id": 295,
            "name": "componentDidCatch",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 616,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 296,
                "name": "componentDidCatch",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 297,
                    "name": "error",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "Error",
                      "qualifiedName": "Error",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 298,
                    "name": "errorInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "ErrorInfo",
                      "qualifiedName": "React.ErrorInfo",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidCatch"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidCatch"
            }
          },
          {
            "id": 285,
            "name": "componentDidMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 595,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 286,
                "name": "componentDidMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidMount"
            }
          },
          {
            "id": 304,
            "name": "componentDidUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 658,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 305,
                "name": "componentDidUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 306,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 220,
                          "name": "RadioProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 307,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 308,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 309,
                    "name": "snapshot",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidUpdate"
            }
          },
          {
            "id": 310,
            "name": "componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 673,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 311,
                "name": "componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillMount"
            }
          },
          {
            "id": 314,
            "name": "componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 702,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 315,
                "name": "componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 316,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 220,
                          "name": "RadioProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 317,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillReceiveProps"
            }
          },
          {
            "id": 293,
            "name": "componentWillUnmount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 611,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 294,
                "name": "componentWillUnmount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidMount`"
                    },
                    {
                      "kind": "text",
                      "text": "."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUnmount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUnmount"
            }
          },
          {
            "id": 322,
            "name": "componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 732,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 323,
                "name": "componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 324,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 220,
                          "name": "RadioProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 325,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 326,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 327,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUpdate"
            }
          },
          {
            "id": 273,
            "name": "forceUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 487,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 274,
                "name": "forceUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 275,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 276,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 487,
                            "character": 31
                          }
                        ],
                        "signatures": [
                          {
                            "id": 277,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.forceUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.forceUpdate"
            }
          },
          {
            "id": 299,
            "name": "getSnapshotBeforeUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 652,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 300,
                "name": "getSnapshotBeforeUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Runs before React applies the result of "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 301,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 220,
                          "name": "RadioProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 302,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 303,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.getSnapshotBeforeUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.getSnapshotBeforeUpdate"
            }
          },
          {
            "id": 251,
            "name": "onChange",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Radio.tsx",
                "line": 41,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L41"
              }
            ],
            "signatures": [
              {
                "id": 252,
                "name": "onChange",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 253,
                    "name": "ev",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLInputElement",
                          "qualifiedName": "HTMLInputElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "ChangeEvent",
                      "qualifiedName": "React.ChangeEvent",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 254,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Radio.tsx",
                "line": 45,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L45"
              }
            ],
            "signatures": [
              {
                "id": 255,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.render"
            }
          },
          {
            "id": 257,
            "name": "setState",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 482,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 258,
                "name": "setState",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "typeParameter": [
                  {
                    "id": 259,
                    "name": "K",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 260,
                    "name": "state",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 261,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 262,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 483,
                                "character": 20
                              }
                            ],
                            "signatures": [
                              {
                                "id": 263,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {
                                  "isExternal": true
                                },
                                "parameters": [
                                  {
                                    "id": 264,
                                    "name": "prevState",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 265,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  },
                                  {
                                    "id": 266,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 220,
                                          "name": "RadioProps"
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 267,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                          "isExternal": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 268,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "reference",
                                          "id": 259,
                                          "name": "K",
                                          "qualifiedName": "K",
                                          "package": "@types/react"
                                        }
                                      ],
                                      "name": "Pick",
                                      "qualifiedName": "Pick",
                                      "package": "typescript"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 269,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {
                                  "isExternal": true
                                }
                              }
                            },
                            {
                              "type": "reference",
                              "id": 259,
                              "name": "K",
                              "qualifiedName": "K",
                              "package": "@types/react"
                            }
                          ],
                          "name": "Pick",
                          "qualifiedName": "Pick",
                          "package": "typescript"
                        }
                      ]
                    }
                  },
                  {
                    "id": 270,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 271,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 484,
                            "character": 23
                          }
                        ],
                        "signatures": [
                          {
                            "id": 272,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.setState"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.setState"
            }
          },
          {
            "id": 287,
            "name": "shouldComponentUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 606,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 288,
                "name": "shouldComponentUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                    },
                    {
                      "kind": "code",
                      "text": "`Component`"
                    },
                    {
                      "kind": "text",
                      "text": " always returns true.\n"
                    },
                    {
                      "kind": "code",
                      "text": "`PureComponent`"
                    },
                    {
                      "kind": "text",
                      "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "code",
                      "text": "`componentWillUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": "\nand "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": " will not be called."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 289,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 220,
                          "name": "RadioProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 290,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 291,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 292,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.shouldComponentUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.shouldComponentUpdate"
            }
          }
        ],
        "groups": [
          "Classes"
        ],
        "sources": [
          {
            "fileName": "src/components/Radio.tsx",
            "line": 25,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L25"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 220,
                "name": "RadioProps"
              }
            ],
            "name": "Component",
            "qualifiedName": "React.Component",
            "package": "@types/react"
          }
        ]
      },
      {
        "id": 334,
        "name": "RadioGroupProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Radio.tsx",
            "line": 84,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L84"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 335,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 337,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 86,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L86"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 351,
                "name": "compact",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 97,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L97"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 345,
                "name": "defaultValue",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 94,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L94"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 350,
                "name": "horizontal",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 96,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L96"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 336,
                "name": "name",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 85,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L85"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 346,
                "name": "onChange",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 95,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L95"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 347,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Radio.tsx",
                        "line": 95,
                        "character": 13,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L95"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 348,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 349,
                            "name": "value",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 339,
                "name": "options",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 88,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L88"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reflection",
                    "declaration": {
                      "id": 340,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 343,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/components/Radio.tsx",
                              "line": 91,
                              "character": 4,
                              "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L91"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        {
                          "id": 342,
                          "name": "label",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/components/Radio.tsx",
                              "line": 90,
                              "character": 4,
                              "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L90"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 341,
                          "name": "value",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/components/Radio.tsx",
                              "line": 89,
                              "character": 4,
                              "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L89"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            343,
                            342,
                            341
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/components/Radio.tsx",
                          "line": 88,
                          "character": 17,
                          "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L88"
                        }
                      ]
                    }
                  }
                }
              },
              {
                "id": 338,
                "name": "size",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 87,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L87"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "mini"
                    },
                    {
                      "type": "literal",
                      "value": "small"
                    },
                    {
                      "type": "literal",
                      "value": "medium"
                    },
                    {
                      "type": "literal",
                      "value": "large"
                    },
                    {
                      "type": "literal",
                      "value": "huge"
                    },
                    {
                      "type": "literal",
                      "value": "mega"
                    }
                  ]
                }
              },
              {
                "id": 344,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 93,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L93"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  337,
                  351,
                  345,
                  350,
                  336,
                  346,
                  339,
                  338,
                  344
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/components/Radio.tsx",
                "line": 84,
                "character": 30,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L84"
              }
            ]
          }
        }
      },
      {
        "id": 220,
        "name": "RadioProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Radio.tsx",
            "line": 11,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L11"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 221,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 230,
                "name": "checked",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 20,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L20"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 224,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 14,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L14"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 231,
                "name": "defaultChecked",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 21,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L21"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 225,
                "name": "disabled",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 15,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L15"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 222,
                "name": "id",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 12,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L12"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 226,
                "name": "label",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 16,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L16"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 223,
                "name": "name",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 13,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L13"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 232,
                "name": "onChange",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 22,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L22"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 233,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Radio.tsx",
                        "line": 22,
                        "character": 13,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L22"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 234,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 235,
                            "name": "checked",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 236,
                            "name": "event",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "HTMLInputElement",
                                  "qualifiedName": "HTMLInputElement",
                                  "package": "typescript"
                                }
                              ],
                              "name": "React.ChangeEvent",
                              "qualifiedName": "React.ChangeEvent",
                              "package": "@types/react"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 228,
                "name": "showLabel",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 18,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L18"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 227,
                "name": "size",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 17,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L17"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "mini"
                    },
                    {
                      "type": "literal",
                      "value": "small"
                    },
                    {
                      "type": "literal",
                      "value": "medium"
                    },
                    {
                      "type": "literal",
                      "value": "large"
                    },
                    {
                      "type": "literal",
                      "value": "huge"
                    },
                    {
                      "type": "literal",
                      "value": "mega"
                    }
                  ]
                }
              },
              {
                "id": 229,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Radio.tsx",
                    "line": 19,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L19"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  230,
                  224,
                  231,
                  225,
                  222,
                  226,
                  223,
                  232,
                  228,
                  227,
                  229
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/components/Radio.tsx",
                "line": 11,
                "character": 25,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L11"
              }
            ]
          }
        }
      },
      {
        "id": 212,
        "name": "RadioGroup",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "src/components/Radio.tsx",
            "line": 100,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L100"
          },
          {
            "fileName": "src/components/Radio.tsx",
            "line": 133,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Radio.tsx#L133"
          }
        ],
        "signatures": [
          {
            "id": 213,
            "name": "RadioGroup",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 214,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 334,
                  "name": "RadioGroupProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Range": [
      {
        "id": 62,
        "name": "RangeProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Range.tsx",
            "line": 32,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L32"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 63,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 95,
                "name": "ThumbComponent",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The component used to display the value label."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 81,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L81"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.ElementType",
                  "qualifiedName": "React.ElementType",
                  "package": "@types/react"
                }
              },
              {
                "id": 64,
                "name": "aria-label",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The label of the slider."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 34,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L34"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 65,
                "name": "aria-labelledby",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The id of the element containing a label for the slider."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 36,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L36"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 66,
                "name": "aria-valuetext",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "A string value that provides a user-friendly name for the current value of the slider."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 38,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L38"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 67,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 39,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L39"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 69,
                "name": "defaultValue",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The default element value. Use when the component is not controlled."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 42,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L42"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ]
                }
              },
              {
                "id": 70,
                "name": "disabled",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "If "
                    },
                    {
                      "kind": "code",
                      "text": "`true`"
                    },
                    {
                      "kind": "text",
                      "text": ", the slider will be disabled."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 44,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L44"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 71,
                "name": "marks",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Marks indicate predetermined values to which the user can move the slider. If\n"
                    },
                    {
                      "kind": "code",
                      "text": "`true`"
                    },
                    {
                      "kind": "text",
                      "text": " the marks will be spaced according the value of the "
                    },
                    {
                      "kind": "code",
                      "text": "`step`"
                    },
                    {
                      "kind": "text",
                      "text": " prop. If an\narray, it should contain objects with "
                    },
                    {
                      "kind": "code",
                      "text": "`value`"
                    },
                    {
                      "kind": "text",
                      "text": " and an optional "
                    },
                    {
                      "kind": "code",
                      "text": "`label`"
                    },
                    {
                      "kind": "text",
                      "text": " keys."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 50,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L50"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    {
                      "type": "array",
                      "elementType": {
                        "type": "reflection",
                        "declaration": {
                          "id": 72,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 74,
                              "name": "label",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "Range.tsx",
                                  "line": 50,
                                  "character": 43,
                                  "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L50"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 73,
                              "name": "value",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "Range.tsx",
                                  "line": 50,
                                  "character": 28,
                                  "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L50"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [
                                74,
                                73
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "Range.tsx",
                              "line": 50,
                              "character": 26,
                              "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L50"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "id": 75,
                "name": "max",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The maximum allowed value of the slider. Should not be equal to min."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 52,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L52"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              },
              {
                "id": 76,
                "name": "min",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The minimum allowed value of the slider. Should not be equal to max."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 54,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L54"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              },
              {
                "id": 77,
                "name": "name",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Name attribute of the hidden "
                    },
                    {
                      "kind": "code",
                      "text": "`input`"
                    },
                    {
                      "kind": "text",
                      "text": " element."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 56,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L56"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 78,
                "name": "onChange",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 58,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L58"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 79,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Range.tsx",
                        "line": 58,
                        "character": 13,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L58"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 80,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Callback function that is fired when the slider's value changed."
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 81,
                            "name": "value",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "array",
                                  "elementType": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": 82,
                            "name": "ev",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "reference",
                                  "name": "React.ChangeEvent",
                                  "qualifiedName": "React.ChangeEvent",
                                  "package": "@types/react"
                                },
                                {
                                  "type": "reference",
                                  "name": "React.MouseEvent",
                                  "qualifiedName": "React.MouseEvent",
                                  "package": "@types/react"
                                },
                                {
                                  "type": "reference",
                                  "name": "MouseEvent",
                                  "qualifiedName": "MouseEvent",
                                  "package": "typescript"
                                },
                                {
                                  "type": "reference",
                                  "name": "TouchEvent",
                                  "qualifiedName": "TouchEvent",
                                  "package": "typescript"
                                }
                              ]
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 83,
                "name": "onChangeCommitted",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 63,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L63"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 84,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Range.tsx",
                        "line": 63,
                        "character": 22,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L63"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 85,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "summary": [
                            {
                              "kind": "text",
                              "text": "Callback function that is fired when the "
                            },
                            {
                              "kind": "code",
                              "text": "`mouseup`"
                            },
                            {
                              "kind": "text",
                              "text": " is triggered."
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 86,
                            "name": "ev",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "reference",
                                  "name": "React.ChangeEvent",
                                  "qualifiedName": "React.ChangeEvent",
                                  "package": "@types/react"
                                },
                                {
                                  "type": "reference",
                                  "name": "MouseEvent",
                                  "qualifiedName": "MouseEvent",
                                  "package": "typescript"
                                },
                                {
                                  "type": "reference",
                                  "name": "TouchEvent",
                                  "qualifiedName": "TouchEvent",
                                  "package": "typescript"
                                }
                              ]
                            }
                          },
                          {
                            "id": 87,
                            "name": "value",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "array",
                                  "elementType": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 88,
                "name": "onMouseDown",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 67,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L67"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 89,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "Range.tsx",
                        "line": 67,
                        "character": 16,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L67"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 90,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 91,
                            "name": "event",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "name": "React.MouseEvent",
                              "qualifiedName": "React.MouseEvent",
                              "package": "@types/react"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 93,
                "name": "scale",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "A transformation function, to change the scale of the slider."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 71,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L71"
                  }
                ],
                "type": {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "identity",
                    "qualifiedName": "identity",
                    "package": "rambda"
                  }
                }
              },
              {
                "id": 68,
                "name": "size",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 40,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L40"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "mini"
                    },
                    {
                      "type": "literal",
                      "value": "small"
                    },
                    {
                      "type": "literal",
                      "value": "medium"
                    },
                    {
                      "type": "literal",
                      "value": "large"
                    },
                    {
                      "type": "literal",
                      "value": "huge"
                    },
                    {
                      "type": "literal",
                      "value": "mega"
                    }
                  ]
                }
              },
              {
                "id": 94,
                "name": "step",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The granularity with which the slider can step through values. (A \"discrete\"\nslider.) The "
                    },
                    {
                      "kind": "code",
                      "text": "`min`"
                    },
                    {
                      "kind": "text",
                      "text": " prop serves as the origin for the valid values. We recommend\n(max - min) to be evenly divisible by the step.\n\nWhen step is "
                    },
                    {
                      "kind": "code",
                      "text": "`null`"
                    },
                    {
                      "kind": "text",
                      "text": ", the thumb can only be slid onto marks provided with the "
                    },
                    {
                      "kind": "code",
                      "text": "`marks`"
                    },
                    {
                      "kind": "text",
                      "text": " prop."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 79,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L79"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              },
              {
                "id": 96,
                "name": "track",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The track presentation:\n\n- "
                    },
                    {
                      "kind": "code",
                      "text": "`normal`"
                    },
                    {
                      "kind": "text",
                      "text": " the track will render a bar representing the slider value.\n- "
                    },
                    {
                      "kind": "code",
                      "text": "`inverted`"
                    },
                    {
                      "kind": "text",
                      "text": " the track will render a bar representing the remaining slider value.\n- "
                    },
                    {
                      "kind": "code",
                      "text": "`false`"
                    },
                    {
                      "kind": "text",
                      "text": " the track will render without a bar."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 89,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L89"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    {
                      "type": "literal",
                      "value": "normal"
                    },
                    {
                      "type": "literal",
                      "value": "inverted"
                    }
                  ]
                }
              },
              {
                "id": 97,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The value of the slider. For ranged sliders, provide an array with two values."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 91,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L91"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ]
                }
              },
              {
                "id": 98,
                "name": "valueLabelDisplay",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Controls when the value label is displayed:\n\n- "
                    },
                    {
                      "kind": "code",
                      "text": "`auto`"
                    },
                    {
                      "kind": "text",
                      "text": " the value label will display when the thumb is hovered or focused.\n- "
                    },
                    {
                      "kind": "code",
                      "text": "`on`"
                    },
                    {
                      "kind": "text",
                      "text": " will display persistently.\n- "
                    },
                    {
                      "kind": "code",
                      "text": "`off`"
                    },
                    {
                      "kind": "text",
                      "text": " will never display."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 99,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L99"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "off"
                    },
                    {
                      "type": "literal",
                      "value": "auto"
                    },
                    {
                      "type": "literal",
                      "value": "on"
                    }
                  ]
                }
              },
              {
                "id": 99,
                "name": "valueLabelFormat",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "The format function the value label's value.\n\nWhen a function is provided, it should have the following signature:\n\n- {number} value The value label's value to format\n- {number} index The value label's index to format"
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 108,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L108"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 100,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "Range.tsx",
                            "line": 108,
                            "character": 31,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L108"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 101,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 102,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              },
                              {
                                "id": 103,
                                "name": "index",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "number"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "id": 92,
                "name": "vertical",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "If the slider is vertical."
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "Range.tsx",
                    "line": 69,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L69"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  95,
                  64,
                  65,
                  66,
                  67,
                  69,
                  70,
                  71,
                  75,
                  76,
                  77,
                  78,
                  83,
                  88,
                  93,
                  68,
                  94,
                  96,
                  97,
                  98,
                  99,
                  92
                ]
              }
            ],
            "sources": [
              {
                "fileName": "Range.tsx",
                "line": 32,
                "character": 25,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L32"
              }
            ]
          }
        }
      },
      {
        "id": 104,
        "name": "Range",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Range.tsx",
            "line": 111,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Range.tsx#L111"
          }
        ],
        "signatures": [
          {
            "id": 105,
            "name": "Range",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "**NOTE**: Exotic components are not callable."
                }
              ]
            },
            "parameters": [
              {
                "id": 106,
                "name": "props",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reference",
                      "id": 62,
                      "name": "RangeProps"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLSpanElement",
                          "qualifiedName": "HTMLSpanElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "RefAttributes",
                      "qualifiedName": "React.RefAttributes",
                      "package": "@types/react"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ],
                          "name": "JSXElementConstructor",
                          "qualifiedName": "React.JSXElementConstructor",
                          "package": "@types/react"
                        }
                      ]
                    }
                  ],
                  "name": "ReactElement",
                  "qualifiedName": "React.ReactElement",
                  "package": "@types/react"
                }
              ]
            }
          }
        ]
      }
    ],
    "Separator": [
      {
        "id": 370,
        "name": "SeparatorProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Separator.tsx",
            "line": 3,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Separator.tsx#L3"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "indexedAccess",
              "indexType": {
                "type": "literal",
                "value": "div"
              },
              "objectType": {
                "type": "reference",
                "name": "JSX.IntrinsicElements",
                "qualifiedName": "global.JSX.IntrinsicElements",
                "package": "@types/react"
              }
            }
          ],
          "name": "React.PropsWithChildren",
          "qualifiedName": "React.PropsWithChildren",
          "package": "@types/react"
        }
      },
      {
        "id": 367,
        "name": "Separator",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Separator.tsx",
            "line": 5,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Separator.tsx#L5"
          }
        ],
        "signatures": [
          {
            "id": 368,
            "name": "Separator",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 369,
                "name": "props",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 370,
                  "name": "SeparatorProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Spinner": [
      {
        "id": 170,
        "name": "SpinnerProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Spinner.tsx",
            "line": 5,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Spinner.tsx#L5"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 171,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 173,
                "name": "disabled",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Spinner.tsx",
                    "line": 7,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Spinner.tsx#L7"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 172,
                "name": "hidden",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Spinner.tsx",
                    "line": 6,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Spinner.tsx#L6"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  173,
                  172
                ]
              }
            ],
            "sources": [
              {
                "fileName": "Spinner.tsx",
                "line": 5,
                "character": 27,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Spinner.tsx#L5"
              }
            ]
          }
        }
      },
      {
        "id": 167,
        "name": "Spinner",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Spinner.tsx",
            "line": 10,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Spinner.tsx#L10"
          }
        ],
        "signatures": [
          {
            "id": 168,
            "name": "Spinner",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 169,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 170,
                  "name": "SpinnerProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Switch": [
      {
        "id": 380,
        "name": "Switch",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 389,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Switch.tsx",
                "line": 33,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L33"
              }
            ],
            "signatures": [
              {
                "id": 390,
                "name": "new Switch",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 391,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 365,
                      "name": "SwitchProps"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 380,
                  "name": "Switch"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component<SwitchProps>.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component<SwitchProps>.constructor"
            }
          },
          {
            "id": 398,
            "name": "context",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If using the new style context, re-declare this in your class to be the\n"
                },
                {
                  "kind": "code",
                  "text": "`React.ContextType`"
                },
                {
                  "kind": "text",
                  "text": " of your "
                },
                {
                  "kind": "code",
                  "text": "`static contextType`"
                },
                {
                  "kind": "text",
                  "text": ".\nShould be used with type annotation or static contextType.\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 470,
                "character": 8
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.context"
            }
          },
          {
            "id": 392,
            "name": "id",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Switch.tsx",
                "line": 31,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L31"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 420,
            "name": "props",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 490,
                "character": 17
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 365,
                  "name": "SwitchProps"
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.props"
            }
          },
          {
            "id": 423,
            "name": "refs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "comment": {
              "summary": [],
              "blockTags": [
                {
                  "tag": "@deprecated",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 496,
                "character": 8
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 424,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "node_modules/@types/react/index.d.ts",
                    "line": 496,
                    "character": 14
                  }
                ],
                "indexSignature": {
                  "id": 425,
                  "name": "__index",
                  "kind": 8192,
                  "kindString": "Index signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 426,
                      "name": "key",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactInstance",
                    "qualifiedName": "React.ReactInstance",
                    "package": "@types/react"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.refs"
            }
          },
          {
            "id": 421,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 491,
                "character": 8
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 422,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {}
                  }
                }
              ],
              "name": "Readonly",
              "qualifiedName": "Readonly",
              "package": "typescript"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.state"
            }
          },
          {
            "id": 388,
            "name": "contextType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isExternal": true,
              "isOptional": true
            },
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "If set, "
                },
                {
                  "kind": "code",
                  "text": "`this.context`"
                },
                {
                  "kind": "text",
                  "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
                },
                {
                  "kind": "code",
                  "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
                }
              ],
              "blockTags": [
                {
                  "tag": "@see",
                  "content": [
                    {
                      "kind": "text",
                      "text": "https://reactjs.org/docs/context.html#classcontexttype"
                    }
                  ]
                }
              ]
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 453,
                "character": 15
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Context",
              "qualifiedName": "React.Context",
              "package": "@types/react"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.contextType"
            }
          },
          {
            "id": 381,
            "name": "defaultProps",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "src/components/Switch.tsx",
                "line": 25,
                "character": 9,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L25"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 382,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 384,
                    "name": "labels",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Switch.tsx",
                        "line": 27,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L27"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "defaultValue": "false"
                  },
                  {
                    "id": 385,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Switch.tsx",
                        "line": 28,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L28"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 386,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/Switch.tsx",
                            "line": 4,
                            "character": 13,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L4"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 387,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": "noop"
                  },
                  {
                    "id": 383,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Switch.tsx",
                        "line": 26,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L26"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"medium\""
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      384,
                      385,
                      383
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 25,
                    "character": 24,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L25"
                  }
                ]
              }
            },
            "defaultValue": "..."
          },
          {
            "id": 454,
            "name": "UNSAFE_componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 687,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 455,
                "name": "UNSAFE_componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillMount"
            }
          },
          {
            "id": 460,
            "name": "UNSAFE_componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 719,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 461,
                "name": "UNSAFE_componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 462,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 365,
                          "name": "SwitchProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 463,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillReceiveProps"
            }
          },
          {
            "id": 470,
            "name": "UNSAFE_componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 747,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 471,
                "name": "UNSAFE_componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 472,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 365,
                          "name": "SwitchProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 473,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 474,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 475,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.UNSAFE_componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.UNSAFE_componentWillUpdate"
            }
          },
          {
            "id": 437,
            "name": "componentDidCatch",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 616,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 438,
                "name": "componentDidCatch",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 439,
                    "name": "error",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "Error",
                      "qualifiedName": "Error",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 440,
                    "name": "errorInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "ErrorInfo",
                      "qualifiedName": "React.ErrorInfo",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidCatch"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidCatch"
            }
          },
          {
            "id": 427,
            "name": "componentDidMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 595,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 428,
                "name": "componentDidMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidMount"
            }
          },
          {
            "id": 446,
            "name": "componentDidUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 658,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 447,
                "name": "componentDidUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 448,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 365,
                          "name": "SwitchProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 449,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 450,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 451,
                    "name": "snapshot",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentDidUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentDidUpdate"
            }
          },
          {
            "id": 452,
            "name": "componentWillMount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 673,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 453,
                "name": "componentWillMount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before mounting occurs, and before "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillMount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillMount"
            }
          },
          {
            "id": 456,
            "name": "componentWillReceiveProps",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 702,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 457,
                "name": "componentWillReceiveProps",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 458,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 365,
                          "name": "SwitchProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 459,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillReceiveProps"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillReceiveProps"
            }
          },
          {
            "id": 435,
            "name": "componentWillUnmount",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 611,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 436,
                "name": "componentWillUnmount",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidMount`"
                    },
                    {
                      "kind": "text",
                      "text": "."
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUnmount"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUnmount"
            }
          },
          {
            "id": 464,
            "name": "componentWillUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 732,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 465,
                "name": "componentWillUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#setState`"
                    },
                    {
                      "kind": "text",
                      "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                    }
                  ],
                  "blockTags": [
                    {
                      "tag": "@deprecated",
                      "content": [
                        {
                          "kind": "text",
                          "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                        }
                      ]
                    },
                    {
                      "tag": "@see",
                      "content": [
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        },
                        {
                          "kind": "text",
                          "text": " - "
                        },
                        {
                          "kind": "text",
                          "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                        },
                        {
                          "kind": "text",
                          "text": "\n"
                        }
                      ]
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 466,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 365,
                          "name": "SwitchProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 467,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 468,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 469,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.componentWillUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.componentWillUpdate"
            }
          },
          {
            "id": 415,
            "name": "forceUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 487,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 416,
                "name": "forceUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 417,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 418,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 487,
                            "character": 31
                          }
                        ],
                        "signatures": [
                          {
                            "id": 419,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.forceUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.forceUpdate"
            }
          },
          {
            "id": 441,
            "name": "getSnapshotBeforeUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 652,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 442,
                "name": "getSnapshotBeforeUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Runs before React applies the result of "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                    },
                    {
                      "kind": "code",
                      "text": "`render`"
                    },
                    {
                      "kind": "text",
                      "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 443,
                    "name": "prevProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 365,
                          "name": "SwitchProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 444,
                    "name": "prevState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 445,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.getSnapshotBeforeUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.getSnapshotBeforeUpdate"
            }
          },
          {
            "id": 393,
            "name": "onChange",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Switch.tsx",
                "line": 38,
                "character": 2,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L38"
              }
            ],
            "signatures": [
              {
                "id": 394,
                "name": "onChange",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 395,
                    "name": "ev",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLInputElement",
                          "qualifiedName": "HTMLInputElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "ChangeEvent",
                      "qualifiedName": "React.ChangeEvent",
                      "package": "@types/react"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 396,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "sources": [
              {
                "fileName": "src/components/Switch.tsx",
                "line": 42,
                "character": 11,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L42"
              }
            ],
            "signatures": [
              {
                "id": 397,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Element",
                  "qualifiedName": "global.JSX.Element",
                  "package": "@types/react"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "React.Component.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "React.Component.render"
            }
          },
          {
            "id": 399,
            "name": "setState",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 482,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 400,
                "name": "setState",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "typeParameter": [
                  {
                    "id": 401,
                    "name": "K",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                ],
                "parameters": [
                  {
                    "id": 402,
                    "name": "state",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 403,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 404,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/react/index.d.ts",
                                "line": 483,
                                "character": 20
                              }
                            ],
                            "signatures": [
                              {
                                "id": 405,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {
                                  "isExternal": true
                                },
                                "parameters": [
                                  {
                                    "id": 406,
                                    "name": "prevState",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 407,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  },
                                  {
                                    "id": 408,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isExternal": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 365,
                                          "name": "SwitchProps"
                                        }
                                      ],
                                      "name": "Readonly",
                                      "qualifiedName": "Readonly",
                                      "package": "typescript"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "union",
                                  "types": [
                                    {
                                      "type": "literal",
                                      "value": null
                                    },
                                    {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 409,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                          "isExternal": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 410,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                              "isExternal": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "reference",
                                          "id": 401,
                                          "name": "K",
                                          "qualifiedName": "K",
                                          "package": "@types/react"
                                        }
                                      ],
                                      "name": "Pick",
                                      "qualifiedName": "Pick",
                                      "package": "typescript"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 411,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {
                                  "isExternal": true
                                }
                              }
                            },
                            {
                              "type": "reference",
                              "id": 401,
                              "name": "K",
                              "qualifiedName": "K",
                              "package": "@types/react"
                            }
                          ],
                          "name": "Pick",
                          "qualifiedName": "Pick",
                          "package": "typescript"
                        }
                      ]
                    }
                  },
                  {
                    "id": 412,
                    "name": "callback",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true,
                      "isOptional": true
                    },
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 413,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {
                          "isExternal": true
                        },
                        "sources": [
                          {
                            "fileName": "node_modules/@types/react/index.d.ts",
                            "line": 484,
                            "character": 23
                          }
                        ],
                        "signatures": [
                          {
                            "id": 414,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.setState"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.setState"
            }
          },
          {
            "id": 429,
            "name": "shouldComponentUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isExternal": true,
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "node_modules/@types/react/index.d.ts",
                "line": 606,
                "character": 8
              }
            ],
            "signatures": [
              {
                "id": 430,
                "name": "shouldComponentUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {
                  "isExternal": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                    },
                    {
                      "kind": "code",
                      "text": "`Component`"
                    },
                    {
                      "kind": "text",
                      "text": " always returns true.\n"
                    },
                    {
                      "kind": "code",
                      "text": "`PureComponent`"
                    },
                    {
                      "kind": "text",
                      "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                    },
                    {
                      "kind": "code",
                      "text": "`Component#render`"
                    },
                    {
                      "kind": "text",
                      "text": ", "
                    },
                    {
                      "kind": "code",
                      "text": "`componentWillUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": "\nand "
                    },
                    {
                      "kind": "code",
                      "text": "`componentDidUpdate`"
                    },
                    {
                      "kind": "text",
                      "text": " will not be called."
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 431,
                    "name": "nextProps",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 365,
                          "name": "SwitchProps"
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 432,
                    "name": "nextState",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 433,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                              "isExternal": true
                            }
                          }
                        }
                      ],
                      "name": "Readonly",
                      "qualifiedName": "Readonly",
                      "package": "typescript"
                    }
                  },
                  {
                    "id": 434,
                    "name": "nextContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "React.Component.shouldComponentUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "React.Component.shouldComponentUpdate"
            }
          }
        ],
        "groups": [
          "Classes"
        ],
        "sources": [
          {
            "fileName": "src/components/Switch.tsx",
            "line": 24,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L24"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 365,
                "name": "SwitchProps"
              }
            ],
            "name": "Component",
            "qualifiedName": "React.Component",
            "package": "@types/react"
          }
        ]
      },
      {
        "id": 365,
        "name": "SwitchProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "src/components/Switch.tsx",
            "line": 10,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L10"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 366,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 369,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 13,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L13"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 370,
                "name": "defaultValue",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 14,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L14"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 371,
                "name": "disabled",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 15,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L15"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 367,
                "name": "id",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 11,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L11"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 372,
                "name": "label",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "Not shown. For screen-readers only"
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 17,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L17"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 373,
                "name": "labels",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "summary": [
                    {
                      "kind": "text",
                      "text": "On/Off if "
                    },
                    {
                      "kind": "code",
                      "text": "`true`"
                    },
                    {
                      "kind": "text",
                      "text": ", or provide your own 2 labels"
                    }
                  ]
                },
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 19,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L19"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              },
              {
                "id": 375,
                "name": "onChange",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 21,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L21"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 376,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/components/Switch.tsx",
                        "line": 21,
                        "character": 13,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L21"
                      }
                    ],
                    "signatures": [
                      {
                        "id": 377,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 378,
                            "name": "value",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 379,
                            "name": "event",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "HTMLInputElement",
                                  "qualifiedName": "HTMLInputElement",
                                  "package": "typescript"
                                }
                              ],
                              "name": "React.ChangeEvent",
                              "qualifiedName": "React.ChangeEvent",
                              "package": "@types/react"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "id": 374,
                "name": "size",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 20,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L20"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "mini"
                    },
                    {
                      "type": "literal",
                      "value": "small"
                    },
                    {
                      "type": "literal",
                      "value": "medium"
                    },
                    {
                      "type": "literal",
                      "value": "large"
                    },
                    {
                      "type": "literal",
                      "value": "huge"
                    },
                    {
                      "type": "literal",
                      "value": "mega"
                    }
                  ]
                }
              },
              {
                "id": 368,
                "name": "value",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/components/Switch.tsx",
                    "line": 12,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L12"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  369,
                  370,
                  371,
                  367,
                  372,
                  373,
                  375,
                  374,
                  368
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/components/Switch.tsx",
                "line": 10,
                "character": 26,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Switch.tsx#L10"
              }
            ]
          }
        }
      }
    ],
    "Table": [
      {
        "id": 204,
        "name": "Table",
        "kind": 4,
        "kindString": "Namespace",
        "flags": {},
        "children": [
          {
            "id": 209,
            "name": "DropdownFilter",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Table.tsx",
                "line": 240,
                "character": 6,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L240"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 210,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Table.tsx",
                    "line": 215,
                    "character": 9,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L215"
                  }
                ],
                "signatures": [
                  {
                    "id": 211,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "typeParameter": [
                      {
                        "id": 212,
                        "name": "T",
                        "kind": 131072,
                        "kindString": "Type parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          ]
                        }
                      }
                    ],
                    "parameters": [
                      {
                        "id": 213,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 231,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 212,
                              "name": "T"
                            }
                          ],
                          "name": "DropdownFilterProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": 205,
            "name": "InputFilter",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "sources": [
              {
                "fileName": "Table.tsx",
                "line": 239,
                "character": 6,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L239"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 206,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Table.tsx",
                    "line": 194,
                    "character": 9,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L194"
                  }
                ],
                "signatures": [
                  {
                    "id": 207,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 208,
                        "name": "__namedParameters",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 221,
                          "name": "InputFilterProps"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "qualifiedName": "global.JSX.Element",
                      "package": "@types/react"
                    }
                  }
                ]
              }
            }
          }
        ],
        "groups": [
          "Namespaces"
        ],
        "sources": [
          {
            "fileName": "Table.tsx",
            "line": 32,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L32"
          },
          {
            "fileName": "Table.tsx",
            "line": 239,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L239"
          },
          {
            "fileName": "Table.tsx",
            "line": 240,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L240"
          }
        ]
      },
      {
        "id": 231,
        "name": "DropdownFilterProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Table.tsx",
            "line": 206,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L206"
          }
        ],
        "typeParameters": [
          {
            "id": 242,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 232,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 233,
                "name": "column",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Table.tsx",
                    "line": 207,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L207"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 234,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 236,
                        "name": "filterValue",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Table.tsx",
                            "line": 209,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L209"
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "id": 242,
                          "name": "T"
                        }
                      },
                      {
                        "id": 235,
                        "name": "id",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Table.tsx",
                            "line": 208,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L208"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 241,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Table.tsx",
                            "line": 211,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L211"
                          }
                        ],
                        "type": {
                          "type": "array",
                          "elementType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 242,
                                "name": "T"
                              }
                            ],
                            "name": "DropdownOption"
                          }
                        }
                      },
                      {
                        "id": 237,
                        "name": "setFilter",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Table.tsx",
                            "line": 210,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L210"
                          }
                        ],
                        "type": {
                          "type": "reflection",
                          "declaration": {
                            "id": 238,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "Table.tsx",
                                "line": 210,
                                "character": 16,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L210"
                              }
                            ],
                            "signatures": [
                              {
                                "id": 239,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 240,
                                    "name": "filterValue",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "type": {
                                      "type": "reference",
                                      "id": 242,
                                      "name": "T"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "void"
                                }
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          236,
                          235,
                          241,
                          237
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "Table.tsx",
                        "line": 207,
                        "character": 10,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L207"
                      }
                    ]
                  }
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  233
                ]
              }
            ],
            "sources": [
              {
                "fileName": "Table.tsx",
                "line": 206,
                "character": 37,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L206"
              }
            ]
          }
        }
      },
      {
        "id": 221,
        "name": "InputFilterProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Table.tsx",
            "line": 186,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L186"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 222,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 223,
                "name": "column",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Table.tsx",
                    "line": 187,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L187"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 224,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 226,
                        "name": "filterValue",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Table.tsx",
                            "line": 189,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L189"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 225,
                        "name": "id",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Table.tsx",
                            "line": 188,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L188"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 227,
                        "name": "setFilter",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Table.tsx",
                            "line": 190,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L190"
                          }
                        ],
                        "type": {
                          "type": "reflection",
                          "declaration": {
                            "id": 228,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "Table.tsx",
                                "line": 190,
                                "character": 16,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L190"
                              }
                            ],
                            "signatures": [
                              {
                                "id": 229,
                                "name": "__type",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 230,
                                    "name": "filterValue",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "void"
                                }
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          226,
                          225,
                          227
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "Table.tsx",
                        "line": 187,
                        "character": 10,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L187"
                      }
                    ]
                  }
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  223
                ]
              }
            ],
            "sources": [
              {
                "fileName": "Table.tsx",
                "line": 186,
                "character": 31,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L186"
              }
            ]
          }
        }
      },
      {
        "id": 214,
        "name": "TableProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Table.tsx",
            "line": 24,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L24"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 215,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 216,
                "name": "className",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Table.tsx",
                    "line": 25,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L25"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 217,
                "name": "columns",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Table.tsx",
                    "line": 26,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L26"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "name": "Record",
                        "qualifiedName": "Record",
                        "package": "typescript"
                      }
                    ],
                    "name": "Column",
                    "qualifiedName": "Column",
                    "package": "@types/react-table"
                  }
                }
              },
              {
                "id": 218,
                "name": "data",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "Table.tsx",
                    "line": 27,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L27"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              },
              {
                "id": 220,
                "name": "filterable",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Table.tsx",
                    "line": 29,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L29"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 219,
                "name": "sortable",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "Table.tsx",
                    "line": 28,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L28"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [
                  216,
                  217,
                  218,
                  220,
                  219
                ]
              }
            ],
            "sources": [
              {
                "fileName": "Table.tsx",
                "line": 24,
                "character": 25,
                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L24"
              }
            ]
          }
        }
      },
      {
        "id": 201,
        "name": "Table",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Table.tsx",
            "line": 32,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L32"
          },
          {
            "fileName": "Table.tsx",
            "line": 239,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L239"
          },
          {
            "fileName": "Table.tsx",
            "line": 240,
            "character": 0,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Table.tsx#L240"
          }
        ],
        "signatures": [
          {
            "id": 202,
            "name": "Table",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 203,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 214,
                  "name": "TableProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "Text": [
      {
        "id": 359,
        "name": "TextProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Text.tsx",
            "line": 5,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L5"
          }
        ],
        "typeParameters": [
          {
            "id": 376,
            "name": "P",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "typeOperator",
              "operator": "keyof",
              "target": {
                "type": "reference",
                "name": "JSX.IntrinsicElements",
                "qualifiedName": "global.JSX.IntrinsicElements",
                "package": "@types/react"
              }
            },
            "default": {
              "type": "literal",
              "value": "p"
            }
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 376,
              "name": "P"
            },
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reflection",
                  "declaration": {
                    "id": 360,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 365,
                        "name": "align",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 13,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L13"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "left"
                            },
                            {
                              "type": "literal",
                              "value": "center"
                            },
                            {
                              "type": "literal",
                              "value": "right"
                            }
                          ]
                        }
                      },
                      {
                        "id": 361,
                        "name": "as",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 9,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L9"
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "id": 376,
                          "name": "P"
                        }
                      },
                      {
                        "id": 374,
                        "name": "bold",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 22,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L22"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 364,
                        "name": "className",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 12,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L12"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 372,
                        "name": "danger",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 20,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L20"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 366,
                        "name": "fill",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 14,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L14"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            {
                              "type": "literal",
                              "value": "left"
                            },
                            {
                              "type": "literal",
                              "value": "right"
                            }
                          ]
                        }
                      },
                      {
                        "id": 367,
                        "name": "hero",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 15,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L15"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 369,
                        "name": "info",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 17,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L17"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 373,
                        "name": "italic",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 21,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L21"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 368,
                        "name": "muted",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 16,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L16"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 375,
                        "name": "noSelect",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 23,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L23"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 362,
                        "name": "size",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 10,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L10"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "mini"
                            },
                            {
                              "type": "literal",
                              "value": "small"
                            },
                            {
                              "type": "literal",
                              "value": "medium"
                            },
                            {
                              "type": "literal",
                              "value": "large"
                            },
                            {
                              "type": "literal",
                              "value": "huge"
                            },
                            {
                              "type": "literal",
                              "value": "mega"
                            }
                          ]
                        }
                      },
                      {
                        "id": 370,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 18,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L18"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 371,
                        "name": "warning",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 19,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L19"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 363,
                        "name": "weight",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 11,
                            "character": 6,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L11"
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": 100
                            },
                            {
                              "type": "literal",
                              "value": 300
                            },
                            {
                              "type": "literal",
                              "value": 400
                            },
                            {
                              "type": "literal",
                              "value": 700
                            },
                            {
                              "type": "literal",
                              "value": 900
                            }
                          ]
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "children": [
                          365,
                          361,
                          374,
                          364,
                          372,
                          366,
                          367,
                          369,
                          373,
                          368,
                          375,
                          362,
                          370,
                          371,
                          363
                        ]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "Text.tsx",
                        "line": 8,
                        "character": 28,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L8"
                      }
                    ]
                  }
                }
              ],
              "name": "React.PropsWithChildren",
              "qualifiedName": "React.PropsWithChildren",
              "package": "@types/react"
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 353,
        "name": "Text",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Text.tsx",
            "line": 27,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L27"
          }
        ],
        "signatures": [
          {
            "id": 354,
            "name": "Text",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 355,
                "name": "P",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "name": "IntrinsicElements",
                    "qualifiedName": "global.JSX.IntrinsicElements",
                    "package": "@types/react"
                  }
                },
                "default": {
                  "type": "literal",
                  "value": "p"
                }
              }
            ],
            "parameters": [
              {
                "id": 356,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 359,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 355,
                      "name": "P"
                    }
                  ],
                  "name": "TextProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 357,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 358,
                            "name": "className",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "Text.tsx",
                                "line": 49,
                                "character": 6,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L49"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "..."
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              358
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "Text.tsx",
                            "line": 48,
                            "character": 4,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Text.tsx#L48"
                          }
                        ]
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 359,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 355,
                              "name": "P"
                            }
                          ],
                          "name": "TextProps"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "bold"
                            },
                            {
                              "type": "literal",
                              "value": "className"
                            },
                            {
                              "type": "literal",
                              "value": "children"
                            },
                            {
                              "type": "literal",
                              "value": "align"
                            },
                            {
                              "type": "literal",
                              "value": "fill"
                            },
                            {
                              "type": "literal",
                              "value": "size"
                            },
                            {
                              "type": "literal",
                              "value": "danger"
                            },
                            {
                              "type": "literal",
                              "value": "info"
                            },
                            {
                              "type": "literal",
                              "value": "success"
                            },
                            {
                              "type": "literal",
                              "value": "warning"
                            },
                            {
                              "type": "literal",
                              "value": "muted"
                            },
                            {
                              "type": "literal",
                              "value": "italic"
                            },
                            {
                              "type": "literal",
                              "value": "noSelect"
                            },
                            {
                              "type": "literal",
                              "value": "weight"
                            },
                            {
                              "type": "literal",
                              "value": "as"
                            },
                            {
                              "type": "literal",
                              "value": "hero"
                            }
                          ]
                        }
                      ],
                      "name": "Omit",
                      "qualifiedName": "Omit",
                      "package": "typescript"
                    }
                  ]
                },
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ],
                      "name": "JSXElementConstructor",
                      "qualifiedName": "React.JSXElementConstructor",
                      "package": "@types/react"
                    }
                  ]
                }
              ],
              "name": "ReactElement",
              "qualifiedName": "React.ReactElement",
              "package": "@types/react"
            }
          }
        ]
      }
    ],
    "TextArea": [
      {
        "id": 433,
        "name": "TextAreaProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "TextArea.tsx",
            "line": 6,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L6"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "literal",
              "value": "textarea"
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 434,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 435,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 9,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L9"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 436,
                    "name": "disabled",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 10,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L10"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 437,
                    "name": "error",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 11,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L11"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 440,
                    "name": "flat",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 14,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L14"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 444,
                    "name": "onChange",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 18,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L18"
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 445,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "TextArea.tsx",
                            "line": 18,
                            "character": 15,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L18"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 446,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 447,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 448,
                                "name": "ev",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reference",
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "name": "HTMLTextAreaElement",
                                      "qualifiedName": "HTMLTextAreaElement",
                                      "package": "typescript"
                                    }
                                  ],
                                  "name": "React.ChangeEvent",
                                  "qualifiedName": "React.ChangeEvent",
                                  "package": "@types/react"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 439,
                    "name": "placeholder",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 13,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L13"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 442,
                    "name": "progress",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 16,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L16"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  {
                    "id": 438,
                    "name": "size",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 12,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L12"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "mini"
                        },
                        {
                          "type": "literal",
                          "value": "small"
                        },
                        {
                          "type": "literal",
                          "value": "medium"
                        },
                        {
                          "type": "literal",
                          "value": "large"
                        },
                        {
                          "type": "literal",
                          "value": "huge"
                        },
                        {
                          "type": "literal",
                          "value": "mega"
                        }
                      ]
                    }
                  },
                  {
                    "id": 443,
                    "name": "value",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 17,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L17"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 441,
                    "name": "warning",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "TextArea.tsx",
                        "line": 15,
                        "character": 4,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L15"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      435,
                      436,
                      437,
                      440,
                      444,
                      439,
                      442,
                      438,
                      443,
                      441
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "TextArea.tsx",
                    "line": 8,
                    "character": 2,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L8"
                  }
                ]
              }
            }
          ],
          "name": "ExtendElementProps"
        }
      },
      {
        "id": 449,
        "name": "TextArea",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "TextArea.tsx",
            "line": 22,
            "character": 13,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L22"
          }
        ],
        "signatures": [
          {
            "id": 450,
            "name": "TextArea",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "summary": [
                {
                  "kind": "text",
                  "text": "**NOTE**: Exotic components are not callable."
                }
              ]
            },
            "parameters": [
              {
                "id": 451,
                "name": "props",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 452,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 453,
                            "name": "className",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 9,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L9"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 454,
                            "name": "disabled",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 10,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L10"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 455,
                            "name": "error",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 11,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L11"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 458,
                            "name": "flat",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 14,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L14"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 462,
                            "name": "onChange",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 18,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L18"
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 463,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "TextArea.tsx",
                                    "line": 18,
                                    "character": 15,
                                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L18"
                                  }
                                ],
                                "signatures": [
                                  {
                                    "id": 464,
                                    "name": "__type",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                      {
                                        "id": 465,
                                        "name": "value",
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "flags": {},
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 466,
                                        "name": "ev",
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "flags": {},
                                        "type": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "name": "HTMLTextAreaElement",
                                              "qualifiedName": "HTMLTextAreaElement",
                                              "package": "typescript"
                                            }
                                          ],
                                          "name": "ChangeEvent",
                                          "qualifiedName": "React.ChangeEvent",
                                          "package": "@types/react"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "void"
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 457,
                            "name": "placeholder",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 13,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L13"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 460,
                            "name": "progress",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 16,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L16"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          },
                          {
                            "id": 456,
                            "name": "size",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 12,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L12"
                              }
                            ],
                            "type": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "literal",
                                  "value": "small"
                                },
                                {
                                  "type": "literal",
                                  "value": "mini"
                                },
                                {
                                  "type": "literal",
                                  "value": "medium"
                                },
                                {
                                  "type": "literal",
                                  "value": "large"
                                },
                                {
                                  "type": "literal",
                                  "value": "huge"
                                },
                                {
                                  "type": "literal",
                                  "value": "mega"
                                }
                              ]
                            }
                          },
                          {
                            "id": 461,
                            "name": "value",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 17,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L17"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 459,
                            "name": "warning",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "sources": [
                              {
                                "fileName": "TextArea.tsx",
                                "line": 15,
                                "character": 4,
                                "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L15"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              453,
                              454,
                              455,
                              458,
                              462,
                              457,
                              460,
                              456,
                              461,
                              459
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "TextArea.tsx",
                            "line": 8,
                            "character": 2,
                            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/TextArea.tsx#L8"
                          }
                        ]
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "HTMLTextAreaElement",
                                  "qualifiedName": "HTMLTextAreaElement",
                                  "package": "typescript"
                                }
                              ],
                              "name": "TextareaHTMLAttributes",
                              "qualifiedName": "React.TextareaHTMLAttributes",
                              "package": "@types/react"
                            },
                            {
                              "type": "reference",
                              "name": "HTMLTextAreaElement",
                              "qualifiedName": "HTMLTextAreaElement",
                              "package": "typescript"
                            }
                          ],
                          "name": "DetailedHTMLProps",
                          "qualifiedName": "React.DetailedHTMLProps",
                          "package": "@types/react"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "progress"
                            },
                            {
                              "type": "literal",
                              "value": "ref"
                            },
                            {
                              "type": "literal",
                              "value": "className"
                            },
                            {
                              "type": "literal",
                              "value": "placeholder"
                            },
                            {
                              "type": "literal",
                              "value": "onChange"
                            },
                            {
                              "type": "literal",
                              "value": "disabled"
                            },
                            {
                              "type": "literal",
                              "value": "value"
                            },
                            {
                              "type": "literal",
                              "value": "size"
                            },
                            {
                              "type": "literal",
                              "value": "flat"
                            },
                            {
                              "type": "literal",
                              "value": "warning"
                            },
                            {
                              "type": "literal",
                              "value": "error"
                            }
                          ]
                        }
                      ],
                      "name": "Omit",
                      "qualifiedName": "Omit",
                      "package": "typescript"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "HTMLDivElement",
                          "qualifiedName": "HTMLDivElement",
                          "package": "typescript"
                        }
                      ],
                      "name": "RefAttributes",
                      "qualifiedName": "React.RefAttributes",
                      "package": "@types/react"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ],
                          "name": "JSXElementConstructor",
                          "qualifiedName": "React.JSXElementConstructor",
                          "package": "@types/react"
                        }
                      ]
                    }
                  ],
                  "name": "ReactElement",
                  "qualifiedName": "React.ReactElement",
                  "package": "@types/react"
                }
              ]
            }
          }
        ]
      }
    ],
    "Toolbar": [
      {
        "id": 111,
        "name": "ToolbarProps",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "groups": [
          "Type Aliases"
        ],
        "sources": [
          {
            "fileName": "Toolbar.tsx",
            "line": 4,
            "character": 12,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Toolbar.tsx#L4"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reflection",
              "declaration": {
                "id": 112,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 113,
                    "name": "className",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Toolbar.tsx",
                        "line": 5,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Toolbar.tsx#L5"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 114,
                    "name": "horizontal",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Toolbar.tsx",
                        "line": 6,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Toolbar.tsx#L6"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  },
                  {
                    "id": 115,
                    "name": "vertical",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "Toolbar.tsx",
                        "line": 7,
                        "character": 2,
                        "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Toolbar.tsx#L7"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      113,
                      114,
                      115
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "Toolbar.tsx",
                    "line": 4,
                    "character": 51,
                    "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Toolbar.tsx#L4"
                  }
                ]
              }
            }
          ],
          "name": "React.PropsWithChildren",
          "qualifiedName": "React.PropsWithChildren",
          "package": "@types/react"
        }
      },
      {
        "id": 108,
        "name": "Toolbar",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "groups": [
          "Functions"
        ],
        "sources": [
          {
            "fileName": "Toolbar.tsx",
            "line": 10,
            "character": 16,
            "url": "https://github.com/ncpa0cpl/adwaita-web/blob/885395e/src/components/Toolbar.tsx#L10"
          }
        ],
        "signatures": [
          {
            "id": 109,
            "name": "Toolbar",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 110,
                "name": "__namedParameters",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 111,
                  "name": "ToolbarProps"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "qualifiedName": "global.JSX.Element",
              "package": "@types/react"
            }
          }
        ]
      }
    ]
  }
}